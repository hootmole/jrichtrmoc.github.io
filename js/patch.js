var CABLES=function(t){var e={};function i(s){if(e[s])return e[s].exports;var r=e[s]={i:s,l:!1,exports:{}};return t[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(s,r,function(e){return t[e]}.bind(null,r));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){t.exports=i(1)},function(t,e,i){"use strict";i.r(e);var s={};i.r(s),i.d(s,"getShortOpName",(function(){return _})),i.d(s,"shuffleArray",(function(){return p})),i.d(s,"shortId",(function(){return m})),i.d(s,"uuid",(function(){return T})),i.d(s,"generateUUID",(function(){return A})),i.d(s,"simpleId",(function(){return y})),i.d(s,"smoothStep",(function(){return v})),i.d(s,"smootherStep",(function(){return x})),i.d(s,"clamp",(function(){return I})),i.d(s,"map",(function(){return O})),i.d(s,"cacheBust",(function(){return R})),i.d(s,"copyArray",(function(){return S})),i.d(s,"basename",(function(){return P})),i.d(s,"jsonp",(function(){return F})),i.d(s,"ajaxSync",(function(){return C})),i.d(s,"ajax",(function(){return w})),i.d(s,"request",(function(){return M})),i.d(s,"keyCodeToName",(function(){return U})),i.d(s,"UTILS",(function(){return g}));var r={};i.r(r),i.d(r,"base64Chars",(function(){return k})),i.d(r,"base64lookup",(function(){return V})),i.d(r,"b64encTypesArray",(function(){return G})),i.d(r,"b64decTypedArray",(function(){return H}));var n={};i.r(n),i.d(n,"easeExpoIn",(function(){return K})),i.d(n,"easeExpoOut",(function(){return j})),i.d(n,"easeExpoInOut",(function(){return Q})),i.d(n,"easeCubicIn",(function(){return q})),i.d(n,"easeCubicOut",(function(){return J})),i.d(n,"easeCubicInOut",(function(){return Z})),i.d(n,"ANIM",(function(){return X})),i.d(n,"Anim",(function(){return $})),i.d(n,"TL",(function(){return tt}));var o={};i.r(o),i.d(o,"PatchConnectionReceiver",(function(){return kt})),i.d(o,"PatchConnectionSender",(function(){return Dt})),i.d(o,"PatchConnectorBroadcastChannel",(function(){return Vt}));class h{constructor(t){this._logs=[],this.initiator=t}stack(t){console.error("["+this.initiator+"] ",t),console.log((new Error).stack),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"error",t)}groupCollapsed(t){console.groupCollapsed("["+this.initiator+"] "+t)}table(t){console.table(t)}groupEnd(){console.groupEnd()}error(t){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"error",arguments)}info(t){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"info",arguments)}warn(t){console.warn("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"warn",arguments)}verbose(){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"verbose",arguments)}log(t){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"log",arguments)}userInteraction(t){}}const a={EASINGS:["linear","absolute","smoothstep","smootherstep","Cubic In","Cubic Out","Cubic In Out","Expo In","Expo Out","Expo In Out","Sin In","Sin Out","Sin In Out","Quart In","Quart Out","Quart In Out","Quint In","Quint Out","Quint In Out","Back In","Back Out","Back In Out","Elastic In","Elastic Out","Bounce In","Bounce Out"],EASING_LINEAR:0,EASING_ABSOLUTE:1,EASING_SMOOTHSTEP:2,EASING_SMOOTHERSTEP:3,EASING_CUBICSPLINE:4,EASING_CUBIC_IN:5,EASING_CUBIC_OUT:6,EASING_CUBIC_INOUT:7,EASING_EXPO_IN:8,EASING_EXPO_OUT:9,EASING_EXPO_INOUT:10,EASING_SIN_IN:11,EASING_SIN_OUT:12,EASING_SIN_INOUT:13,EASING_BACK_IN:14,EASING_BACK_OUT:15,EASING_BACK_INOUT:16,EASING_ELASTIC_IN:17,EASING_ELASTIC_OUT:18,EASING_BOUNCE_IN:19,EASING_BOUNCE_OUT:21,EASING_QUART_IN:22,EASING_QUART_OUT:23,EASING_QUART_INOUT:24,EASING_QUINT_IN:25,EASING_QUINT_OUT:26,EASING_QUINT_INOUT:27},l={OP_PORT_TYPE_VALUE:0,OP_PORT_TYPE_FUNCTION:1,OP_PORT_TYPE_OBJECT:2,OP_PORT_TYPE_TEXTURE:2,OP_PORT_TYPE_ARRAY:3,OP_PORT_TYPE_DYNAMIC:4,OP_PORT_TYPE_STRING:5,OP_VERSION_PREFIX:"_v"},c={PORT_DIR_IN:0,PORT_DIR_OUT:1},u={PACO_CLEAR:0,PACO_VALUECHANGE:1,PACO_OP_DELETE:2,PACO_UNLINK:3,PACO_LINK:4,PACO_LOAD:5,PACO_OP_CREATE:6,PACO_OP_ENABLE:7,PACO_OP_DISABLE:8,PACO_UIATTRIBS:9,PACO_VARIABLES:10,PACO_TRIGGERS:11,PACO_PORT_SETVARIABLE:12,PACO_PORT_SETANIMATED:13,PACO_PORT_ANIM_UPDATED:14,PACO_DESERIALIZE:15},g={float32Concat:function(t,e){t instanceof Float32Array||(t=new Float32Array(t)),e instanceof Float32Array||(e=new Float32Array(e));const i=new Float32Array(t.length+e.length);return i.set(t),i.set(e,t.length),i}},_=function(t){let e=t.split(".")[t.split(".").length-1];if(e.indexOf(l.OP_VERSION_PREFIX)>0){const t=e.split(l.OP_VERSION_PREFIX)[1];e=e.substring(0,e.length-(l.OP_VERSION_PREFIX+t).length)}return e},p=function(t){for(let e=t.length-1;e>0;e--){const i=Math.floor(Math.seededRandom()*(e+1)),s=t[e];t[e]=t[i],t[i]=s}return t},d={},f=function(){let t=Math.random().toString(36).substr(2,9);return d.hasOwnProperty(t)&&(t=f()),d[t]=!0,t},m=f,E=function(){let t=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const i=(t+16*Math.random())%16|0;return t=Math.floor(t/16),("x"==e?i:3&i|8).toString(16)})},T=E,A=E;let b=0;const y=function(){return b++,b},v=function(t){const e=Math.max(0,Math.min(1,(t-0)/1));return t=e*e*(3-2*e)},x=function(t){const e=Math.max(0,Math.min(1,(t-0)/1));return t=e*e*e*(e*(6*e-15)+10)},I=function(t,e,i){return Math.min(Math.max(t,e),i)},O=function(t,e,i,s,r,n){if(t>=i)return r;if(t<=e)return s;let o=!1;const h=Math.min(e,i),a=Math.max(e,i);h!=e&&(o=!0);let l=!1;const c=Math.min(s,r),u=Math.max(s,r);c!=s&&(l=!0);let g=0,_=0;return g=o?(a-t)*(u-c)/(a-h):(t-h)*(u-c)/(a-h),_=l?u-g:g+c,n?1==n?s+(t=Math.max(0,Math.min(1,(_-s)/(r-s))))*t*(3-2*t)*(r-s):2==n?s+(t=Math.max(0,Math.min(1,(_-s)/(r-s))))*t*t*(t*(6*t-15)+10)*(r-s):_:_};Math.randomSeed=1,Math.seededRandom=function(t,e){0===Math.randomSeed&&(Math.randomSeed=999*Math.random()),t=t||1,e=e||0,Math.randomSeed=(9301*Math.randomSeed+49297)%233280;return e+Math.randomSeed/233280*(t-e)},g.arrayWriteToEnd=function(t,e){for(let e=1;e<t.length;e++)t[e-1]=t[e];t[t.length-1]=e},g.isNumeric=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},g.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)},String.prototype.endl=function(){return this+"\n"},String.prototype.startsWith=function(t){return 0===this.indexOf(t)},String.prototype.endsWith=function(t){return this.match(t+"$")==t};const R=function(t){return t.indexOf("?")>-1?t+="&":t+="?",t+"cb="+CABLES.uuid()},S=function(t,e){if(!t)return null;(e=e||[]).length=t.length;for(let i=0;i<t.length;i++)e[i]=t[i];return e},P=function(t){let e="";if(!t)return"";const i=(t+"").split("/");if(i.length>0){let t=i[i.length-1].split("?");e=t[0],t=e.split("."),e=t[0]}return e};let N=null;const F=function(t,e){N=N||0,N++;const i=N;CABLES["jsonpFunc"+i]=function(t){e(!1,t)};let s="?";t.indexOf(s)>-1&&(s="&");const r=document.createElement("script");r.setAttribute("src",t+s+"callback=CABLES.jsonpFunc"+i),document.body.appendChild(r)},C=function(t,e,i,s,r){M({url:t,cb:e,method:i,data:s,contenttype:r,sync:!0})},w=function(t,e,i,s,r,n,o={}){M({url:t,cb:e,method:i,data:s,contenttype:r,sync:!1,jsonP:n,headers:o})},M=function(t){let e;t.hasOwnProperty("asynch")||(t.asynch=!0);try{e=new XMLHttpRequest}catch(t){}if(e.onreadystatechange=function(){4==e.readyState&&t.cb&&(200==e.status||0==e.status?t.cb(!1,e.responseText,e):t.cb(!0,e.responseText,e))},e.addEventListener("progress",t=>{}),e.open(t.method?t.method.toUpperCase():"GET",t.url,!t.sync),"object"==typeof t.headers){const i=Object.keys(t.headers);for(let s=0;s<i.length;s++){const r=i[s],n=t.headers[r];e.setRequestHeader(r,n)}}t.post||t.data?(e.setRequestHeader("Content-type",t.contenttype?t.contenttype:"application/x-www-form-urlencoded"),e.send(t.data||t.post)):e.send()},U=function(t){if(!t&&0!==t)return"Unidentified";const e={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:"Space",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};return e[t]?e[t]:String.fromCharCode(t)};window.performance=window.performance||{offset:Date.now(),now:function(){return Date.now()-this.offset}};const L=function(t,e){if(!t)throw new Error("no cgl");this._log=new h("cgl_texture"),this._cgl=t,this.tex=this._cgl.gl.createTexture(),this.id=T(),this.width=0,this.height=0,this.loading=!1,this.flip=!0,this.flipped=!1,this.shadowMap=!1,this.deleted=!1,this.image=null,this.anisotropic=0,this.filter=L.FILTER_NEAREST,this.wrap=L.WRAP_CLAMP_TO_EDGE,this.texTarget=this._cgl.gl.TEXTURE_2D,e&&e.type&&(this.texTarget=e.type),this.textureType=L.TYPE_DEFAULT,this.unpackAlpha=!0,this._fromData=!0,this.name="unknown",e?(this.name=e.name||this.name,e.isDepthTexture&&(this.textureType=L.TYPE_DEPTH),e.isFloatingPointTexture&&(this.textureType=L.TYPE_FLOAT),"textureType"in e&&(this.textureType=e.textureType),"filter"in e&&(this.filter=e.filter),"wrap"in e&&(this.wrap=e.wrap),"unpackAlpha"in e&&(this.unpackAlpha=e.unpackAlpha),"flip"in e&&(this.flip=e.flip),"shadowMap"in e&&(this.shadowMap=e.shadowMap),"anisotropic"in e&&(this.anisotropic=e.anisotropic)):e={},e.width||(e.width=8),e.height||(e.height=8),this._cgl.profileData.profileTextureNew++,this._cgl.profileData.addHeavyEvent("texture created",this.name,e.width+"x"+e.height),this.setSize(e.width,e.height),this.getInfoOneLine()};L.prototype.isFloatingPoint=function(){return this.textureType==L.TYPE_FLOAT},L.prototype.compareSettings=function(t){return!!t&&(t.width==this.width&&t.height==this.height&&t.filter==this.filter&&t.wrap==this.wrap&&t.textureType==this.textureType&&t.unpackAlpha==this.unpackAlpha&&t.anisotropic==this.anisotropic&&t.shadowMap==this.shadowMap&&t.texTarget==this.texTarget&&t.flip==this.flip)},L.prototype.clone=function(){const t=new L(this._cgl,{name:this.name,filter:this.filter,wrap:this.wrap,textureType:this.textureType,unpackAlpha:this.unpackAlpha,flip:this.flip,width:this.width,height:this.height});return this._cgl.profileData.addHeavyEvent("texture created",this.name,this.width+"x"+this.height),this.compareSettings(t)||(this._log.error("Cloned texture settings do not compare!"),this._log.error(this),this._log.error(t)),t},L.prototype.setSize=function(t,e){if((t!=t||t<=0||!t)&&(t=8),(e!=e||e<=0||!e)&&(e=8),(t>this._cgl.maxTexSize||e>this._cgl.maxTexSize)&&this._log.error("texture size too big! "+t+"x"+e+" / max: "+this._cgl.maxTexSize),t=Math.min(t,this._cgl.maxTexSize),e=Math.min(e,this._cgl.maxTexSize),t=Math.floor(t),e=Math.floor(e),this.width==t&&this.height==e)return;this.width=t,this.height=e,this.deleted=!1,this.shortInfoString=this.getInfoOneLine(),this._cgl.gl.bindTexture(this.texTarget,this.tex),this._cgl.profileData.profileTextureResize++;if(this._cgl.patch.config.canvas.forceTextureNearest&&(this.filter=L.FILTER_NEAREST),1!=this._cgl.glVersion||this.textureType!=L.TYPE_FLOAT||this.filter!=L.FILTER_LINEAR||this._cgl.gl.getExtension("OES_texture_float_linear")||(console.warn("this graphics card does not support floating point texture linear interpolation! using NEAREST"),this.filter=L.FILTER_NEAREST),this.textureType==L.TYPE_FLOAT)if(1==this._cgl.glVersion)if(this._cgl.glUseHalfFloatTex){const i=this._cgl.gl.getExtension("OES_texture_half_float");this._cgl.gl.getExtension("EXT_color_buffer_half_float");if(!i)throw new Error("no half float texture extension");this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA,t,e,0,this._cgl.gl.RGBA,i.HALF_FLOAT_OES,null)}else this._cgl.gl.getExtension("OES_texture_float"),this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA,t,e,0,this._cgl.gl.RGBA,this._cgl.gl.FLOAT,null);else if(this._cgl.glUseHalfFloatTex){if(!this._cgl.gl.getExtension("EXT_color_buffer_half_float"))throw new Error("no half float texture extension");console.log("half float",this._cgl.gl.RGBA16F,this._cgl.gl.HALF_FLOAT),console.log("half float",this._cgl.gl.HALF_FLOAT),console.log("half float",this._cgl.gl.RGBA16F),this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA,t,e,0,this._cgl.gl.RGBA,this._cgl.gl.HALF_FLOAT,null)}else this._cgl.gl.getExtension("EXT_color_buffer_float"),this._cgl.gl.getExtension("EXT_color_buffer_float_linear"),this._cgl.gl.getExtension("OES_texture_float_linear"),this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA32F,t,e,0,this._cgl.gl.RGBA,this._cgl.gl.FLOAT,null);else if(this.textureType==L.TYPE_DEPTH)if(1==this._cgl.glVersion){const i=this._cgl.gl.DEPTH_COMPONENT;this._cgl.gl.texImage2D(this.texTarget,0,i,t,e,0,this._cgl.gl.DEPTH_COMPONENT,this._cgl.gl.UNSIGNED_SHORT,null)}else{const i=this._cgl.gl.DEPTH_COMPONENT32F;this._cgl.gl.texImage2D(this.texTarget,0,i,t,e,0,this._cgl.gl.DEPTH_COMPONENT,this._cgl.gl.FLOAT,null)}else this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA,t,e,0,this._cgl.gl.RGBA,this._cgl.gl.UNSIGNED_BYTE,null);this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null)},L.prototype.initFromData=function(t,e,i,s,r){if(this.filter=s,this.wrap=r,null==s&&(this.filter=L.FILTER_LINEAR),null==r&&(this.wrap=L.WRAP_CLAMP_TO_EDGE),this.width=e,this.height=i,this._fromData=!0,this.deleted=!1,this.height>this._cgl.maxTexSize||this.width>this._cgl.maxTexSize){const t=CGL.Texture.getTempTexture(this._cgl);return this.width=t.width,this.height=t.height,this.tex=t.tex,void this._log.error("[cgl_texture] texture size to big!!!",this.width,this.height,this._cgl.maxTexSize)}this.flip&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,this.flip),this._cgl.gl.bindTexture(this.texTarget,this.tex),this.textureType==L.TYPE_FLOAT?this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA32F,e,i,0,this._cgl.gl.RGBA,this._cgl.gl.FLOAT,t):this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA,e,i,0,this._cgl.gl.RGBA,this._cgl.gl.UNSIGNED_BYTE,t),this._setFilter(),this.updateMipMap(),this.flip&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,!1),this._cgl.gl.bindTexture(this.texTarget,null)},L.prototype.updateMipMap=function(){2!=this._cgl.glVersion&&!this.isPowerOfTwo()||this.filter!=L.FILTER_MIPMAP||(this._cgl.gl.generateMipmap(this.texTarget),this._cgl.profileData.profileGenMipMap++)},L.prototype.initTexture=function(t,e){if(this._cgl.printError("before initTexture"),this._cgl.checkFrameStarted("texture inittexture"),this._fromData=!1,this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),t.width&&(this.width=t.width),t.height&&(this.height=t.height),e&&(this.filter=e),t.height>this._cgl.maxTexSize||t.width>this._cgl.maxTexSize){const e=CGL.Texture.getTempTexture(this._cgl);return this.width=e.width,this.height=e.height,this.tex=e.tex,void this._log.error("[cgl_texture] texture size to big!!!",t.width,t.height,this._cgl.maxTexSize)}this._cgl.gl.bindTexture(this.texTarget,this.tex),this.deleted=!1,this.flipped=!this.flip,this.flipped&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,this.flipped),this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA,this._cgl.gl.RGBA,this._cgl.gl.UNSIGNED_BYTE,t),this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null),this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),this.flipped&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,!1),this.getInfoOneLine(),this._cgl.printError("initTexture")},L.prototype.delete=function(){this.loading||(this.deleted=!0,this.width=0,this.height=0,this._cgl.profileData.profileTextureDelete++,this._cgl.gl.deleteTexture(this.tex),this.image=null,this.tex=null)},L.prototype.isPowerOfTwo=function(){return L.isPowerOfTwo(this.width)&&L.isPowerOfTwo(this.height)},L.prototype.printInfo=function(){console.log(this.getInfo())},L.prototype.getInfoReadable=function(){const t=this.getInfo();let e="";t.name=t.name.substr(0,t.name.indexOf("?rnd="));for(const i in t)e+="* "+i+":  **"+t[i]+"**\n";return e},L.prototype.getInfoOneLine=function(){let t=this.width+" x "+this.height;return this.textureType===CGL.Texture.TYPE_FLOAT?t+=" 32bit":t+=" 8bit",this.filter===CGL.Texture.FILTER_NEAREST&&(t+=" nearest"),this.filter===CGL.Texture.FILTER_LINEAR&&(t+=" linear"),this.filter===CGL.Texture.FILTER_MIPMAP&&(t+=" mipmap"),this.wrap===CGL.Texture.WRAP_CLAMP_TO_EDGE&&(t+=" clamp"),this.wrap===CGL.Texture.WRAP_REPEAT&&(t+=" repeat"),this.wrap===CGL.Texture.WRAP_MIRRORED_REPEAT&&(t+=" repeatmir"),this.shortInfoString=t,t},L.prototype.getInfo=function(){const t={};t.name=this.name,t["power of two"]=this.isPowerOfTwo(),t.size=this.width+" x "+this.height;let e=this.texTarget;return this.texTarget==this._cgl.gl.TEXTURE_2D&&(e="TEXTURE_2D"),t.target=e,t.unpackAlpha=this.unpackAlpha,this.textureType==L.TYPE_FLOAT?t.textureType="TYPE_FLOAT":this.textureType==L.TYPE_DEPTH?t.textureType="TYPE_DEPTH":this.textureType==L.TYPE_DEFAULT?t.textureType="TYPE_DEFAULT":t.textureType="UNKNOWN",this.wrap==L.WRAP_CLAMP_TO_EDGE?t.wrap="CLAMP_TO_EDGE":this.wrap==L.WRAP_REPEAT?t.wrap="WRAP_REPEAT":this.wrap==L.WRAP_MIRRORED_REPEAT?t.wrap="WRAP_MIRRORED_REPEAT":t.wrap="UNKNOWN",this.filter==L.FILTER_NEAREST?t.filter="FILTER_NEAREST":this.filter==L.FILTER_LINEAR?t.filter="FILTER_LINEAR":this.filter==L.FILTER_MIPMAP?t.filter="FILTER_MIPMAP":t.filter="UNKNOWN",t},L.prototype._setFilter=function(){if(this._cgl.printError("before _setFilter"),this._fromData||this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),this.shadowMap&&(this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D,this._cgl.gl.TEXTURE_COMPARE_MODE,this._cgl.gl.COMPARE_REF_TO_TEXTURE),this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D,this._cgl.gl.TEXTURE_COMPARE_FUNC,this._cgl.gl.LEQUAL)),this.textureType==L.TYPE_FLOAT&&this.filter==L.FILTER_MIPMAP&&(this.filter=L.FILTER_LINEAR,this._log.stack("texture: HDR and mipmap filtering at the same time is not possible")),1!=this._cgl.glVersion||this.isPowerOfTwo()){if(this.wrap==L.WRAP_CLAMP_TO_EDGE?(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE)):this.wrap==L.WRAP_REPEAT?(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.REPEAT)):this.wrap==L.WRAP_MIRRORED_REPEAT&&(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.MIRRORED_REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.MIRRORED_REPEAT)),this.filter==L.FILTER_NEAREST)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST);else if(this.filter==L.FILTER_LINEAR)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR);else{if(this.filter!=L.FILTER_MIPMAP)throw this._log.log("unknown texture filter!",this.filter),new Error("unknown texture filter!"+this.filter);this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR_MIPMAP_LINEAR)}if(this.anisotropic){const t=this._cgl.gl.getExtension("EXT_texture_filter_anisotropic");if(t){const e=this._cgl.gl.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT);this._cgl.gl.texParameterf(this._cgl.gl.TEXTURE_2D,t.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e,this.anisotropic))}}}else this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE),this.filter=L.FILTER_NEAREST,this.wrap=L.WRAP_CLAMP_TO_EDGE;this.getInfoOneLine(),this._cgl.printError("_setFilter")},L.load=function(t,e,i,s){if(!e)return i({error:!0});let r=null;t.patch.loading.existByName(e)||(r=t.patch.loading.start("texture",e));const n=new L(t);return n.name=e,t.patch.isEditorMode()&&gui.jobs().start({id:"loadtexture"+r,title:"loading texture "+CABLES.basename(e)}),n.image=new Image,n.image.crossOrigin="anonymous",n.loading=!0,s&&s.hasOwnProperty("filter")&&(n.filter=s.filter),s&&s.hasOwnProperty("flip")&&(n.flip=s.flip),s&&s.hasOwnProperty("wrap")&&(n.wrap=s.wrap),s&&s.hasOwnProperty("anisotropic")&&(n.anisotropic=s.anisotropic),s&&s.hasOwnProperty("unpackAlpha")&&(n.unpackAlpha=s.unpackAlpha),n.image.onabort=n.image.onerror=s=>{console.warn("[cgl.texture.load] error loading texture",e,s),n.loading=!1,r&&t.patch.loading.finished(r);i&&i({error:!0},n),t.patch.isEditorMode()&&gui.jobs().finish("loadtexture"+r)},n.image.onload=function(e){t.addNextFrameOnceCallback(()=>{n.initTexture(n.image),r&&t.patch.loading.finished(r),n.loading=!1,t.patch.isEditorMode()&&gui.jobs().finish("loadtexture"+r),i&&i(null,n)})},n.image.src=e,n},L.getTempTexture=function(t){return t||console.error("[getTempTexture] no cgl!"),t.tempTexture||(t.tempTexture=L.getTemporaryTexture(t,256,L.FILTER_LINEAR,L.REPEAT)),t.tempTexture},L.getEmptyTexture=function(t,e){if(e)return L.getEmptyTextureFloat(t);if(t||console.error("[getEmptyTexture] no cgl!"),t.tempTextureEmpty)return t.tempTextureEmpty;t.tempTextureEmpty=new L(t,{name:"emptyTexture"});const i=new Uint8Array(256).fill(0);for(let t=0;t<256;t+=4)i[t+3]=0;return t.tempTextureEmpty.initFromData(i,8,8,L.FILTER_NEAREST,L.WRAP_REPEAT),t.tempTextureEmpty},L.getEmptyTextureFloat=function(t){if(t||console.error("[getEmptyTextureFloat] no cgl!"),t.tempTextureEmptyFloat)return t.tempTextureEmptyFloat;t.tempTextureEmptyFloat=new L(t,{name:"emptyTexture",isFloatingPointTexture:!0});const e=new Float32Array(256).fill(1);for(let t=0;t<256;t+=4)e[t+3]=0;return t.tempTextureEmptyFloat.initFromData(e,8,8,L.FILTER_NEAREST,L.WRAP_REPEAT),t.tempTextureEmptyFloat},L.getRandomTexture=function(t){if(t||console.error("[getRandomTexture] no cgl!"),t.randomTexture)return t.randomTexture;const e=new Uint8Array(262144);for(let t=0;t<65536;t++)e[4*t+0]=255*Math.random(),e[4*t+1]=255*Math.random(),e[4*t+2]=255*Math.random(),e[4*t+3]=255;return t.randomTexture=new L(t),t.randomTexture.initFromData(e,256,256,L.FILTER_NEAREST,L.WRAP_REPEAT),t.randomTexture},L.getBlackTexture=function(t){if(t||this._log.error("[getBlackTexture] no cgl!"),t.blackTexture)return t.blackTexture;const e=new Uint8Array(256);for(let t=0;t<64;t++)e[4*t+0]=e[4*t+1]=e[4*t+2]=0,e[4*t+3]=255;return t.blackTexture=new L(t),t.blackTexture.initFromData(e,8,8,L.FILTER_NEAREST,L.WRAP_REPEAT),t.blackTexture},L.getEmptyCubemapTexture=function(t){const e=[t.gl.TEXTURE_CUBE_MAP_POSITIVE_X,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,t.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,t.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z],i=t.gl.createTexture(),s=t.gl.TEXTURE_CUBE_MAP,r=L.FILTER_NEAREST,n=L.WRAP_CLAMP_TO_EDGE;t.profileData.profileTextureNew++,t.gl.bindTexture(s,i),t.profileData.profileTextureResize++;for(let i=0;i<6;i+=1){const r=new Uint8Array(256);t.gl.texImage2D(e[i],0,t.gl.RGBA,8,8,0,t.gl.RGBA,t.gl.UNSIGNED_BYTE,r),t.gl.texParameteri(s,t.gl.TEXTURE_MAG_FILTER,t.gl.NEAREST),t.gl.texParameteri(s,t.gl.TEXTURE_MIN_FILTER,t.gl.NEAREST),t.gl.texParameteri(s,t.gl.TEXTURE_WRAP_S,t.gl.CLAMP_TO_EDGE),t.gl.texParameteri(s,t.gl.TEXTURE_WRAP_T,t.gl.CLAMP_TO_EDGE)}return t.gl.bindTexture(s,null),{id:CABLES.uuid(),tex:i,cubemap:i,width:8,height:8,filter:r,wrap:n,unpackAlpha:!0,flip:!0,_fromData:!0,name:"emptyCubemapTexture",anisotropic:0}},L.getTempGradientTexture=function(t){if(t||console.error("[getTempGradientTexture] no cgl!"),t.tempTextureGradient)return t.tempTextureGradient;const e=new L(t),i=new Uint8Array(262144);for(let t=0;t<256;t++)for(let e=0;e<256;e++)i[4*(e+256*t)+0]=i[4*(e+256*t)+1]=i[4*(e+256*t)+2]=255-t,i[4*(e+256*t)+3]=255;return e.initFromData(i,256,256,L.FILTER_NEAREST,L.WRAP_REPEAT),t.tempTextureGradient=e,e},L.getTemporaryTexture=function(t,e,i,s){const r=new L(t),n=[];for(let t=0;t<e;t++)for(let i=0;i<e;i++)(i+t)%64<32?(n.push(200+t/e*25+i/e*25),n.push(200+t/e*25+i/e*25),n.push(200+t/e*25+i/e*25)):(n.push(40+t/e*25+i/e*25),n.push(40+t/e*25+i/e*25),n.push(40+t/e*25+i/e*25)),n.push(255);const o=new Uint8Array(n);return r.initFromData(o,e,e,i,s),r},L.createFromImage=function(t,e,i){const s=new L(t,i=i||{});return s.flip=!1,s.image=e,s.width=e.width,s.height=e.height,s.initTexture(e,i.filter),s},L.fromImage=function(t,e,i,s){console.error("deprecated texture from image...");const r=new L(t);return r.flip=!1,i&&(r.filter=i),s&&(r.wrap=s),r.image=e,r.initTexture(e),r},L.isPowerOfTwo=function(t){return 1==t||2==t||4==t||8==t||16==t||32==t||64==t||128==t||256==t||512==t||1024==t||2048==t||4096==t||8192==t||16384==t},L.FILTER_NEAREST=0,L.FILTER_LINEAR=1,L.FILTER_MIPMAP=2,L.WRAP_REPEAT=0,L.WRAP_MIRRORED_REPEAT=1,L.WRAP_CLAMP_TO_EDGE=2,L.TYPE_DEFAULT=0,L.TYPE_DEPTH=1,L.TYPE_FLOAT=2,L.PFORMATSTR_RGBA32F="RGBA 32bit float",L.PFORMATSTR_RGBA8UB="RGBA 8bit ubyte",L.PIXELFORMATS=[L.PFORMATSTR_RGBA8UB,L.PFORMATSTR_RGBA32F];const B=function(t,e,i,s){this._log=new h("cgl_framebuffer2"),this.Framebuffer2DrawTargetsDefault=null,this.Framebuffer2BlittingFramebuffer=null,this.Framebuffer2FinalFramebuffer=null,this._cgl=t,this._cgl.printError("before framebuffer2 constructor"),this._width=0,this._height=0,this._depthRenderbuffer=null,this._frameBuffer=null,this._textureFrameBuffer=null,this._colorRenderbuffers=[],this._drawTargetArray=[],this.Framebuffer2BlittingFramebuffer||(this.Framebuffer2BlittingFramebuffer=t.gl.createFramebuffer()),this.Framebuffer2FinalFramebuffer||(this.Framebuffer2FinalFramebuffer=t.gl.createFramebuffer()),this.Framebuffer2DrawTargetsDefault||(this.Framebuffer2DrawTargetsDefault=[t.gl.COLOR_ATTACHMENT0]),this._options=s||{isFloatingPointTexture:!1},this.name=this._options.name||"unknown",this._cgl.profileData.addHeavyEvent("framebuffer create",this.name),this._options.hasOwnProperty("numRenderBuffers")||(this._options.numRenderBuffers=1),this._options.hasOwnProperty("depth")||(this._options.depth=!0),this._options.hasOwnProperty("clear")||(this._options.clear=!0),this._options.hasOwnProperty("multisampling")||(this._options.multisampling=!1,this._options.multisamplingSamples=0),this._options.multisamplingSamples&&(this._cgl.glSlowRenderer&&(this._options.multisamplingSamples=0),this._cgl.gl.MAX_SAMPLES?this._options.multisamplingSamples=Math.min(this._cgl.maxSamples,this._options.multisamplingSamples):this._options.multisamplingSamples=0),this._options.hasOwnProperty("filter")||(this._options.filter=L.FILTER_LINEAR),this._options.hasOwnProperty("wrap")||(this._options.wrap=L.WRAP_REPEAT),this._numRenderBuffers=this._options.numRenderBuffers,this._colorTextures=[];for(let e=0;e<this._numRenderBuffers;e++)this._colorTextures[e]=new L(t,{name:"fb2 "+this.name+" "+e,isFloatingPointTexture:this._options.isFloatingPointTexture,filter:this._options.filter,wrap:this._options.wrap});let r=L.FILTER_NEAREST;this._options.shadowMap&&(r=L.FILTER_LINEAR);this._options.depth&&(this._textureDepth=new L(t,{name:"fb2 depth "+this.name,isDepthTexture:!0,filter:r,shadowMap:this._options.shadowMap||!1,width:e||512,height:i||512})),t.aborted||(this.setSize(e||512,i||512),this._cgl.printError("framebuffer2 constructor"))};B.prototype.getWidth=function(){return this._width},B.prototype.getHeight=function(){return this._height},B.prototype.getGlFrameBuffer=function(){return this._frameBuffer},B.prototype.getDepthRenderBuffer=function(){return this._depthRenderbuffer},B.prototype.getTextureColor=function(){return this._colorTextures[0]},B.prototype.getTextureColorNum=function(t){return this._colorTextures[t]},B.prototype.getTextureDepth=function(){return this._textureDepth},B.prototype.setFilter=function(t){for(let e=0;e<this._numRenderBuffers;e++)this._colorTextures[e].filter=t,this._colorTextures[e].setSize(this._width,this._height)},B.prototype.delete=B.prototype.dispose=function(){let t=0;for(t=0;t<this._numRenderBuffers;t++)this._colorTextures[t].delete();for(this._textureDepth&&this._textureDepth.delete(),t=0;t<this._numRenderBuffers;t++)this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffers[t]);this._cgl.gl.deleteRenderbuffer(this._depthRenderbuffer),this._cgl.gl.deleteFramebuffer(this._frameBuffer),this._cgl.gl.deleteFramebuffer(this._textureFrameBuffer)},B.prototype.setSize=function(t,e){this._cgl.profileData.addHeavyEvent("framebuffer resize",this.name);let i=0;if(this._width=Math.floor(t),this._height=Math.floor(e),this._width=Math.min(this._width,this._cgl.maxTexSize),this._height=Math.min(this._height,this._cgl.maxTexSize),this._cgl.profileData.profileFrameBuffercreate++,this._frameBuffer){for(i=0;i<this._numRenderBuffers;i++)this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffers[i]);this._cgl.gl.deleteRenderbuffer(this._depthRenderbuffer),this._cgl.gl.deleteFramebuffer(this._frameBuffer),this._cgl.gl.deleteFramebuffer(this._textureFrameBuffer)}this._frameBuffer=this._cgl.gl.createFramebuffer(),this._textureFrameBuffer=this._cgl.gl.createFramebuffer();const s=this._options.depth;for(i=0;i<this._numRenderBuffers;i++)this._colorTextures[i].setSize(this._width,this._height);for(i=0;i<this._numRenderBuffers;i++){const t=this._cgl.gl.createRenderbuffer();this._cgl.gl.getExtension("EXT_color_buffer_float");if(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuffer),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,t),this._options.isFloatingPointTexture){this._cgl.gl.getExtension("EXT_color_buffer_float"),this._cgl.gl.getExtension("EXT_color_buffer_float_linear"),this._cgl.gl.getExtension("OES_texture_float_linear");if(this._options.multisampling&&this._options.multisamplingSamples)this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER,this._options.multisamplingSamples,this._cgl.gl.RGBA32F,this._width,this._height);else{let t=this._cgl.gl.RGBA32F;this._cgl._isSafariCrap&&(t=this._cgl.gl.RGBA16F),this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,t,this._width,this._height)}}else this._options.multisampling&&this._options.multisamplingSamples?this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER,this._options.multisamplingSamples,this._cgl.gl.RGBA8,this._width,this._height):this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.RGBA8,this._width,this._height);this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0+i,this._cgl.gl.RENDERBUFFER,t),this._colorRenderbuffers[i]=t}for(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._textureFrameBuffer),i=0;i<this._numRenderBuffers;i++)this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0+i,this._cgl.gl.TEXTURE_2D,this._colorTextures[i].tex,0);this._options.depth&&this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.TEXTURE_2D,this._textureDepth.tex,0),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuffer);let r=this._cgl.gl.DEPTH_COMPONENT32F;for(this._cgl.glSlowRenderer&&(r=this._cgl.gl.DEPTH_COMPONENT16),s&&(this._textureDepth.setSize(this._width,this._height),this._depthRenderbuffer=this._cgl.gl.createRenderbuffer(),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._depthRenderbuffer),this._options.isFloatingPointTexture,this._options.multisampling?this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER,this._options.multisamplingSamples,r,this._width,this._height):this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,r,this._width,this._height),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthRenderbuffer)),this._drawTargetArray.length=0,i=0;i<this._numRenderBuffers;i++)this._drawTargetArray.push(this._cgl.gl.COLOR_ATTACHMENT0+i);this._cgl.gl.isFramebuffer(this._textureFrameBuffer)||this._this._log.warn("invalid framebuffer");const n=this._cgl.gl.checkFramebufferStatus(this._cgl.gl.FRAMEBUFFER);if(n!=this._cgl.gl.FRAMEBUFFER_COMPLETE)switch(this._log.error("framebuffer incomplete: "+this.name,this),n){case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_ATTACHMENT...",this),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_DIMENSIONS"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");case this._cgl.gl.FRAMEBUFFER_UNSUPPORTED:throw this._log.warn("FRAMEBUFFER_UNSUPPORTED"),new Error("Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED");default:throw this._log.warn("incomplete framebuffer",n),new Error("Incomplete framebuffer: "+n)}this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null)},B.prototype.renderStart=function(){this._cgl.checkFrameStarted("fb2 renderstart"),this._cgl.pushModelMatrix(),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuffer),this._cgl.pushGlFrameBuffer(this._frameBuffer),this._cgl.pushFrameBuffer(this),this._cgl.pushPMatrix(),this._cgl.gl.viewport(0,0,this._width,this._height),this._cgl.gl.drawBuffers(this._drawTargetArray),this._options.clear&&(this._cgl.gl.clearColor(0,0,0,0),this._cgl.gl.clear(this._cgl.gl.COLOR_BUFFER_BIT|this._cgl.gl.DEPTH_BUFFER_BIT))},B.prototype.renderEnd=function(){if(this._cgl.popPMatrix(),this._cgl.profileData.profileFramebuffer++,this._numRenderBuffers<=1)this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER,this._frameBuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER,this._textureFrameBuffer),this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR,0,[0,0,0,1]),this._cgl.gl.blitFramebuffer(0,0,this._width,this._height,0,0,this._width,this._height,this._cgl.gl.COLOR_BUFFER_BIT|this._cgl.gl.DEPTH_BUFFER_BIT,this._cgl.gl.NEAREST);else{this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2BlittingFramebuffer),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthRenderbuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2FinalFramebuffer),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.TEXTURE_2D,this._textureDepth.tex,0);for(let t=0;t<this._numRenderBuffers;t++){this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2BlittingFramebuffer),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.RENDERBUFFER,this._colorRenderbuffers[t]),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2FinalFramebuffer),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.TEXTURE_2D,this._colorTextures[t].tex,0),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER,this.Framebuffer2BlittingFramebuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER,this.Framebuffer2FinalFramebuffer),this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR,0,[0,0,0,1]);let e=this._cgl.gl.COLOR_BUFFER_BIT;0==t&&(e|=this._cgl.gl.DEPTH_BUFFER_BIT),this._cgl.gl.blitFramebuffer(0,0,this._width,this._height,0,0,this._width,this._height,e,this._cgl.gl.NEAREST)}}if(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.popGlFrameBuffer()),this._cgl.popFrameBuffer(),this._cgl.popModelMatrix(),this._cgl.resetViewPort(),this._colorTextures[0].filter==L.FILTER_MIPMAP)for(let t=0;t<this._numRenderBuffers;t++)this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,this._colorTextures[t].tex),this._colorTextures[t].updateMipMap(),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null)};const k="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",D=new Uint8Array(256);for(let t=0;t<k.length;t++)D[k.charCodeAt(t)]=t;const V=D,G=function(t){t.buffer&&(t=t.buffer);let e,i=new Uint8Array(t),s=i.length,r="";for(e=0;e<s;e+=3)r+=k[i[e]>>2],r+=k[(3&i[e])<<4|i[e+1]>>4],r+=k[(15&i[e+1])<<2|i[e+2]>>6],r+=k[63&i[e+2]];return s%3==2?r=r.substring(0,r.length-1)+"=":s%3==1&&(r=r.substring(0,r.length-2)+"=="),r},H=function(t){let e,i,s,r,n,o=.75*t.length,h=t.length,a=0;"="===t[t.length-1]&&(o--,"="===t[t.length-2]&&o--);let l=new ArrayBuffer(o),c=new Uint8Array(l);for(e=0;e<h;e+=4)i=V[t.charCodeAt(e)],s=V[t.charCodeAt(e+1)],r=V[t.charCodeAt(e+2)],n=V[t.charCodeAt(e+3)],c[a++]=i<<2|s>>4,c[a++]=(15&s)<<4|r>>2,c[a++]=(3&r)<<6|63&n;return l};class z{constructor(t){this._init(),this._first=!0,this._wireMesh=null,t&&this.apply(t)}_init(){this._max=[-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE],this._min=[Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE],this._center=[0,0,0],this._size=[0,0,0],this._maxAxis=0,this._first=!0}get maxAxis(){return this._maxAxis||1}get size(){return this._size}get center(){return this._center}get x(){return this._center[0]}get y(){return this._center[1]}get z(){return this._center[2]}get minX(){return this._min[0]}get minY(){return this._min[1]}get minZ(){return this._min[2]}get maxX(){return this._max[0]}get maxY(){return this._max[1]}get maxZ(){return this._max[2]}apply(t,e){if(t){if(t instanceof z){const e=t;this.applyPos(e.maxX,e.maxY,e.maxZ),this.applyPos(e.minX,e.minY,e.minZ)}else for(let e=0;e<t.vertices.length;e+=3)this.applyPos(t.vertices[e],t.vertices[e+1],t.vertices[e+2]);this.calcCenterSize()}}copy(){return new z(this)}get changed(){return!(this._max[0]==-Number.MAX_VALUE&&this._max[1]==-Number.MAX_VALUE&&this._max[2]==-Number.MAX_VALUE)}applyPos(t,e,i){if(t!=Number.MAX_VALUE&&t!=-Number.MAX_VALUE&&e!=Number.MAX_VALUE&&e!=-Number.MAX_VALUE&&i!=Number.MAX_VALUE&&i!=-Number.MAX_VALUE&&CABLES.UTILS.isNumeric(t)&&CABLES.UTILS.isNumeric(e)&&CABLES.UTILS.isNumeric(i)){if(this._first)return this._max[0]=t,this._max[1]=e,this._max[2]=i,this._min[0]=t,this._min[1]=e,this._min[2]=i,void(this._first=!1);this._max[0]=Math.max(this._max[0],t),this._max[1]=Math.max(this._max[1],e),this._max[2]=Math.max(this._max[2],i),this._min[0]=Math.min(this._min[0],t),this._min[1]=Math.min(this._min[1],e),this._min[2]=Math.min(this._min[2],i)}}calcCenterSize(){this._first||(this._size[0]=this._max[0]-this._min[0],this._size[1]=this._max[1]-this._min[1],this._size[2]=this._max[2]-this._min[2],this._center[0]=(this._min[0]+this._max[0])/2,this._center[1]=(this._min[1]+this._max[1])/2,this._center[2]=(this._min[2]+this._max[2])/2,this._maxAxis=Math.max(this._size[2],Math.max(this._size[0],this._size[1])))}mulMat4(t){this._first&&(this._max[0]=0,this._max[1]=0,this._max[2]=0,this._min[0]=0,this._min[1]=0,this._min[2]=0,this._first=!1),vec3.transformMat4(this._max,this._max,t),vec3.transformMat4(this._min,this._min,t),this.calcCenterSize()}render(t,e){this._wireMesh||(this._wireMesh=new CGL.WireCube(t)),t.pushModelMatrix(),mat4.translate(t.mMatrix,t.mMatrix,this._center),this._wireMesh.render(t,this._size[0]/2,this._size[1]/2,this._size[2]/2),t.popModelMatrix()}}const Y=function(t){this.name=t||"unknown",this._log=new h("cgl_geometry"),this.faceVertCount=3,this._vertices=[],this.verticesIndices=[],this.texCoords=new Float32Array,this.texCoordsIndices=[],this.vertexNormals=[],this.tangents=[],this.biTangents=[],this.morphTargets=[],this.vertexColors=[],this._attributes={},this.glPrimitive=null,Object.defineProperty(this,"vertices",{get(){return this._vertices},set(t){this.setVertices(t)}})};Y.prototype.clear=function(){this.vertices=new Float32Array([]),this.verticesIndices.length=0,this.texCoords=new Float32Array([]),this.texCoordsIndices.length=0,this.vertexNormals=new Float32Array([])},Y.prototype.getAttributes=function(){return this._attributes},Y.prototype.getAttribute=function(t){for(const e in this._attributes)if(this._attributes[e].name==t)return this._attributes[e];return null},Y.prototype.setAttribute=function(t,e,i){let s="";1==i?s="float":2==i?s="vec2":3==i?s="vec3":4==i&&(s="vec4");const r={name:t,data:e,itemSize:i,type:s};this._attributes[t]=r},Y.prototype.setVertices=function(t){t instanceof Float32Array?this._vertices=t:this._vertices=new Float32Array(t)},Y.prototype.setTexCoords=function(t){t instanceof Float32Array?this.texCoords=t:this.texCoords=new Float32Array(t)},Y.prototype.calcNormals=function(t){t||this.unIndex(),this.calculateNormals({})},Y.prototype.flipNormals=function(t,e,i){let s=vec3.create();null==t&&(t=1),null==e&&(e=1),null==i&&(i=1);for(let r=0;r<this.vertexNormals.length;r+=3)vec3.set(s,this.vertexNormals[r+0],this.vertexNormals[r+1],this.vertexNormals[r+2]),s[0]*=-t,s[1]*=-e,s[2]*=-i,vec3.normalize(s,s),this.vertexNormals[r+0]=s[0],this.vertexNormals[r+1]=s[1],this.vertexNormals[r+2]=s[2]},Y.prototype.getNumTriangles=function(){return this.verticesIndices&&this.verticesIndices.length?this.verticesIndices.length/3:this.vertices.length/3},Y.prototype.flipVertDir=function(){const t=[];t.length=this.verticesIndices.length;for(let e=0;e<this.verticesIndices.length;e+=3)t[e]=this.verticesIndices[e+2],t[e+1]=this.verticesIndices[e+1],t[e+2]=this.verticesIndices[e];this.verticesIndices=t},Y.prototype.setPointVertices=function(t){if(t.length%3==0){t instanceof Float32Array?this.vertices=t:this.vertices=new Float32Array(t),this.texCoords instanceof Float32Array||(this.texCoords=new Float32Array(t.length/3*2)),this.verticesIndices.length=t.length/3;for(let e=0;e<t.length/3;e++)this.verticesIndices[e]=e,this.texCoords[2*e]=0,this.texCoords[2*e+1]=0}else this._log.error("SetPointVertices: Array must be multiple of three.")},Y.prototype.merge=function(t){if(!t)return;const e=this.verticesIndices.length,i=this.vertices.length/3;this.verticesIndices.length=this.verticesIndices.length+t.verticesIndices.length;for(let s=0;s<t.verticesIndices.length;s++)this.verticesIndices[e+s]=t.verticesIndices[s]+i;this.vertices=g.float32Concat(this.vertices,t.vertices),this.texCoords=g.float32Concat(this.texCoords,t.texCoords),this.vertexNormals=g.float32Concat(this.vertexNormals,t.vertexNormals),this.tangents=g.float32Concat(this.tangents,t.tangents),this.biTangents=g.float32Concat(this.biTangents,t.biTangents)},Y.prototype.copy=function(){let t=0;const e=new Y(this.name+" copy");if(e.faceVertCount=this.faceVertCount,e.glPrimitive=this.glPrimitive,e.setVertices(this._vertices.slice(0)),this.verticesIndices)for(e.verticesIndices.length=this.verticesIndices.length,t=0;t<this.verticesIndices.length;t++)e.verticesIndices[t]=this.verticesIndices[t];if(this.texCoords)for(e.texCoords=new Float32Array(this.texCoords.length),t=0;t<this.texCoords.length;t++)e.texCoords[t]=this.texCoords[t];if(this.texCoordsIndices)for(e.texCoordsIndices.length=this.texCoordsIndices.length,t=0;t<this.texCoordsIndices.length;t++)e.texCoordsIndices[t]=this.texCoordsIndices[t];if(this.vertexNormals)for(e.vertexNormals=new Float32Array(this.vertexNormals.length),t=0;t<this.vertexNormals.length;t++)e.vertexNormals[t]=this.vertexNormals[t];if(this.tangents)for(e.tangents=[],e.tangents.length=this.tangents.length,t=0;t<this.tangents.length;t++)e.tangents[t]=this.tangents[t];if(this.biTangents)for(e.biTangents=[],e.biTangents.length=this.biTangents.length,t=0;t<this.biTangents.length;t++)e.biTangents[t]=this.biTangents[t];for(e.morphTargets.length=this.morphTargets.length,t=0;t<this.morphTargets.length;t++)e.morphTargets[t]=this.morphTargets[t];for(e.vertexColors.length=this.vertexColors.length,t=0;t<this.vertexColors.length;t++)e.vertexColors[t]=this.vertexColors[t];return e},Y.prototype.calculateNormals=function(t){const e=vec3.create(),i=vec3.create(),s=vec3.create();function r(r){return vec3.subtract(e,r[0],r[1]),vec3.subtract(i,r[0],r[2]),vec3.cross(s,e,i),vec3.normalize(s,s),t&&t.forceZUp&&s[2]<0&&(s[0]*=-1,s[1]*=-1,s[2]*=-1),s}this.getVertexVec=function(t){const e=[0,0,0];return e[0]=this.vertices[3*t+0],e[1]=this.vertices[3*t+1],e[2]=this.vertices[3*t+2],e},this.vertexNormals instanceof Float32Array&&this.vertexNormals.length==this.vertices.length||(this.vertexNormals=new Float32Array(this.vertices.length));for(let t=0;t<this.vertices.length;t++)this.vertexNormals[t]=0;if(this.isIndexed()){const t=[];t.length=Math.floor(this.verticesIndices.length/3);for(let e=0;e<this.verticesIndices.length;e+=3){const i=[this.getVertexVec(this.verticesIndices[e+0]),this.getVertexVec(this.verticesIndices[e+1]),this.getVertexVec(this.verticesIndices[e+2])];t[e/3]=r(i),this.vertexNormals[3*this.verticesIndices[e+0]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+0]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+0]+2]+=t[e/3][2],this.vertexNormals[3*this.verticesIndices[e+1]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+1]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+1]+2]+=t[e/3][2],this.vertexNormals[3*this.verticesIndices[e+2]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+2]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+2]+2]+=t[e/3][2]}for(let t=0;t<this.verticesIndices.length;t+=3)for(let e=0;e<3;e++){const i=[this.vertexNormals[3*this.verticesIndices[t+e]+0],this.vertexNormals[3*this.verticesIndices[t+e]+1],this.vertexNormals[3*this.verticesIndices[t+e]+2]];vec3.normalize(i,i),this.vertexNormals[3*this.verticesIndices[t+e]+0]=i[0],this.vertexNormals[3*this.verticesIndices[t+e]+1]=i[1],this.vertexNormals[3*this.verticesIndices[t+e]+2]=i[2]}}else{const t=[];for(let e=0;e<this.vertices.length;e+=9){const i=r([[this.vertices[e+0],this.vertices[e+1],this.vertices[e+2]],[this.vertices[e+3],this.vertices[e+4],this.vertices[e+5]],[this.vertices[e+6],this.vertices[e+7],this.vertices[e+8]]]);t.push(i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2])}this.vertexNormals=t}},Y.prototype.calcTangentsBitangents=function(){if(!this.vertices.length)return void this._log.error("Cannot calculate tangents/bitangents without vertices.");if(!this.vertexNormals.length)return void this._log.error("Cannot calculate tangents/bitangents without normals.");if(!this.texCoords.length){const t=this.vertices.length/3*2;this.texCoords=new Float32Array(t);for(let e=0;e<t;e+=1)this.texCoords[e]=0}if(!this.verticesIndices||!this.verticesIndices.length)return void this._log.error("Cannot calculate tangents/bitangents without vertex indices.");if(this.verticesIndices.length%3!=0)return void this._log.error("Vertex indices mismatch!");const t=this.verticesIndices.length/3,e=this.vertices.length/3;this.tangents=new Float32Array(this.vertexNormals.length),this.biTangents=new Float32Array(this.vertexNormals.length);const i=[];i.length=2*e;const s=vec3.create(),r=vec3.create(),n=vec3.create(),o=vec2.create(),h=vec2.create(),a=vec2.create(),l=vec3.create(),c=vec3.create();for(let u=0;u<t;u+=1){const t=this.verticesIndices[3*u],g=this.verticesIndices[3*u+1],_=this.verticesIndices[3*u+2];vec3.set(s,this.vertices[3*t],this.vertices[3*t+1],this.vertices[3*t+2]),vec3.set(r,this.vertices[3*g],this.vertices[3*g+1],this.vertices[3*g+2]),vec3.set(n,this.vertices[3*_],this.vertices[3*_+1],this.vertices[3*_+2]),vec2.set(o,this.texCoords[2*t],this.texCoords[2*t+1]),vec2.set(h,this.texCoords[2*g],this.texCoords[2*g+1]),vec2.set(a,this.texCoords[2*_],this.texCoords[2*_+1]);const p=r[0]-s[0],d=n[0]-s[0],f=r[1]-s[1],m=n[1]-s[1],E=r[2]-s[2],T=n[2]-s[2],A=h[0]-o[0],b=a[0]-o[0],y=h[1]-o[1],v=a[1]-o[1],x=1/(A*v-b*y);vec3.set(l,(v*p-y*d)*x,(v*f-y*m)*x,(v*E-y*T)*x),vec3.set(c,(A*d-b*p)*x,(A*m-b*f)*x,(A*T-b*E)*x),i[t]=l,i[g]=l,i[_]=l,i[t+e]=c,i[g+e]=c,i[_+e]=c}const u=vec3.create(),g=vec3.create(),_=vec3.create(),p=vec3.create(),d=vec3.create(),f=vec3.create(),m=vec3.create(),E=vec3.create();for(let t=0;t<e;t+=1){if(!i[t])continue;vec3.set(u,this.vertexNormals[3*t],this.vertexNormals[3*t+1],this.vertexNormals[3*t+2]),vec3.set(g,i[t][0],i[t][1],i[t][2]);const s=vec3.dot(u,g);vec3.scale(d,u,s),vec3.subtract(f,g,d),vec3.normalize(E,f),vec3.cross(m,u,g);vec3.dot(m,i[t+e]);const r=1;vec3.scale(_,E,1/r),vec3.cross(p,u,_),this.tangents[3*t+0]=_[0],this.tangents[3*t+1]=_[1],this.tangents[3*t+2]=_[2],this.biTangents[3*t+0]=p[0],this.biTangents[3*t+1]=p[1],this.biTangents[3*t+2]=p[2]}},Y.prototype.isIndexed=function(){return 0!=this.verticesIndices.length},Y.prototype.unIndex=function(t,e){const i=[],s=[],r=[],n=[],o=[],h=[];let a=0,l=0;for(l=0;l<this.verticesIndices.length;l+=3)i.push(this.vertices[3*this.verticesIndices[l+0]+0],this.vertices[3*this.verticesIndices[l+0]+1],this.vertices[3*this.verticesIndices[l+0]+2]),n.push(this.vertexNormals[3*this.verticesIndices[l+0]+0],this.vertexNormals[3*this.verticesIndices[l+0]+1],this.vertexNormals[3*this.verticesIndices[l+0]+2]),this.tangents.length>0&&o.push(this.tangents[3*this.verticesIndices[l+0]+0],this.tangents[3*this.verticesIndices[l+0]+1],this.tangents[3*this.verticesIndices[l+0]+2]),this.biTangents.length>0&&h.push(this.biTangents[3*this.verticesIndices[l+0]+0],this.biTangents[3*this.verticesIndices[l+0]+1],this.biTangents[3*this.verticesIndices[l+0]+2]),this.texCoords?r.push(this.texCoords[2*this.verticesIndices[l+0]+0],this.texCoords[2*this.verticesIndices[l+0]+1]):r.push(0,0),s.push(a),a++,i.push(this.vertices[3*this.verticesIndices[l+1]+0],this.vertices[3*this.verticesIndices[l+1]+1],this.vertices[3*this.verticesIndices[l+1]+2]),n.push(this.vertexNormals[3*this.verticesIndices[l+1]+0],this.vertexNormals[3*this.verticesIndices[l+1]+1],this.vertexNormals[3*this.verticesIndices[l+1]+2]),this.tangents.length>0&&o.push(this.tangents[3*this.verticesIndices[l+1]+0],this.tangents[3*this.verticesIndices[l+1]+1],this.tangents[3*this.verticesIndices[l+1]+2]),this.biTangents.length>0&&h.push(this.biTangents[3*this.verticesIndices[l+1]+0],this.biTangents[3*this.verticesIndices[l+1]+1],this.biTangents[3*this.verticesIndices[l+1]+2]),this.texCoords?r.push(this.texCoords[2*this.verticesIndices[l+1]+0],this.texCoords[2*this.verticesIndices[l+1]+1]):r.push(0,0),s.push(a),a++,i.push(this.vertices[3*this.verticesIndices[l+2]+0],this.vertices[3*this.verticesIndices[l+2]+1],this.vertices[3*this.verticesIndices[l+2]+2]),n.push(this.vertexNormals[3*this.verticesIndices[l+2]+0],this.vertexNormals[3*this.verticesIndices[l+2]+1],this.vertexNormals[3*this.verticesIndices[l+2]+2]),this.tangents.length>0&&o.push(this.tangents[3*this.verticesIndices[l+2]+0],this.tangents[3*this.verticesIndices[l+2]+1],this.tangents[3*this.verticesIndices[l+2]+2]),this.biTangents.length>0&&h.push(this.biTangents[3*this.verticesIndices[l+2]+0],this.biTangents[3*this.verticesIndices[l+2]+1],this.biTangents[3*this.verticesIndices[l+2]+2]),this.texCoords?r.push(this.texCoords[2*this.verticesIndices[l+2]+0],this.texCoords[2*this.verticesIndices[l+2]+1]):r.push(0,0),s.push(a),a++;this.vertices=i,this.texCoords=r,this.vertexNormals=n,o.length>0&&(this.tangents=o),h.length>0&&(this.biTangents=h),this.verticesIndices.length=0,t&&(this.verticesIndices=s),e||this.calculateNormals()},Y.prototype.calcBarycentric=function(){let t=[];t.length=this.vertices.length;for(let e=0;e<this.vertices.length;e++)t[e]=0;let e=0;for(let i=0;i<this.vertices.length;i+=3)t[i+e]=1,e++,3==e&&(e=0);this.setAttribute("attrBarycentric",t,3)},Y.prototype.getBounds=function(){return new z(this)},Y.prototype.center=function(t,e,i){void 0===t&&(t=!0,e=!0,i=!0);let s=0;const r=this.getBounds(),n=[r.minX+(r.maxX-r.minX)/2,r.minY+(r.maxY-r.minY)/2,r.minZ+(r.maxZ-r.minZ)/2];for(s=0;s<this.vertices.length;s+=3)this.vertices[s+0]==this.vertices[s+0]&&(t&&(this.vertices[s+0]-=n[0]),e&&(this.vertices[s+1]-=n[1]),i&&(this.vertices[s+2]-=n[2]));return n},Y.prototype.mapTexCoords2d=function(){const t=this.getBounds(),e=this.vertices.length/3;this.texCoords=new Float32Array(2*e);for(let i=0;i<e;i++){const e=this.vertices[3*i+0],s=this.vertices[3*i+1];this.texCoords[2*i+0]=e/(t.maxX-t.minX)+.5,this.texCoords[2*i+1]=1-s/(t.maxY-t.minY)+.5}},Y.prototype.getInfo=function(){const t={};return this.verticesIndices?t.numFaces=this.verticesIndices.length/3:t.numFaces=0,this.vertices?t.numVerts=this.vertices.length/3:t.numVerts=0,this.vertexNormals?t.numNormals=this.vertexNormals.length/3:t.numNormals=0,this.texCoords?t.numTexCoords=this.texCoords.length/2:t.numTexCoords=0,this.tangents?t.numTangents=this.tangents.length/3:t.numTangents=0,this.biTangents?t.numBiTangents=this.biTangents.length/3:t.numBiTangents=0,this.biTangents?t.numBiTangents=this.biTangents.length/3:t.numBiTangents=0,this.vertexColors?t.numVertexColors=this.vertexColors.length/4:t.numVertexColors=0,this.getAttributes()?t.numAttribs=Object.keys(this.getAttributes()).length:t.numAttribs=0,t.isIndexed=this.isIndexed(),t},Y.buildFromFaces=function(t,e,i){const s=[],r=[];for(let e=0;e<t.length;e+=3){const n=t[e+0],o=t[e+1],h=t[e+2],a=[-1,-1,-1];if(i)for(let t=0;t<s.length;t+=3)s[t+0]==n[0]&&s[t+1]==n[1]&&s[t+2]==n[2]&&(a[0]=t/3),s[t+0]==o[0]&&s[t+1]==o[1]&&s[t+2]==o[2]&&(a[1]=t/3),s[t+0]==h[0]&&s[t+1]==h[1]&&s[t+2]==h[2]&&(a[2]=t/3);-1==a[0]&&(s.push(n[0],n[1],n[2]),a[0]=(s.length-1)/3),-1==a[1]&&(s.push(o[0],o[1],o[2]),a[1]=(s.length-1)/3),-1==a[2]&&(s.push(h[0],h[1],h[2]),a[2]=(s.length-1)/3),r.push(parseInt(a[0],10)),r.push(parseInt(a[1],10)),r.push(parseInt(a[2],10))}const n=new Y(e);return n.name=e,n.vertices=s,n.verticesIndices=r,n},Y.json2geom=function(t){const e=new Y("jsonMeshGeom");if(e.verticesIndices=[],e.vertices=t.vertices||[],e.vertexNormals=t.normals||[],e.vertexColors=t.colors||[],e.tangents=t.tangents||[],e.biTangents=t.bitangents||[],t.texturecoords&&e.setTexCoords(t.texturecoords[0]),t.vertices_b64&&(e.vertices=new Float32Array(H(t.vertices_b64))),t.normals_b64&&(e.vertexNormals=new Float32Array(H(t.normals_b64))),t.tangents_b64&&(e.tangents=new Float32Array(H(t.tangents_b64))),t.bitangents_b64&&(e.biTangents=new Float32Array(H(t.bitangents_b64))),t.texturecoords_b64&&e.setTexCoords(new Float32Array(H(t.texturecoords_b64[0]))),t.faces_b64)e.verticesIndices=new Uint32Array(H(t.faces_b64));else{e.verticesIndices.length=3*t.faces.length;for(let i=0;i<t.faces.length;i++)e.verticesIndices[3*i]=t.faces[i][0],e.verticesIndices[3*i+1]=t.faces[i][1],e.verticesIndices[3*i+2]=t.faces[i][2]}return e};const W=function(){this._log=new h("eventtaget"),this._eventCallbacks={},this._logName="",this._logEvents=!1,this._listeners={},this.addEventListener=this.on=function(t,e,i){const s={id:(i||"")+CABLES.uuid(),name:t,cb:e};return this._eventCallbacks[t]?this._eventCallbacks[t].push(s):this._eventCallbacks[t]=[s],this._listeners[s.id]=s,s.id},this.hasEventListener=function(t,e){if(t&&!e)return!!this._listeners[t];if(this._log.warn("old eventtarget function haseventlistener!"),t&&e&&this._eventCallbacks[t]){return-1!=this._eventCallbacks[t].indexOf(e)}},this.removeEventListener=this.off=function(t,e){if(null==t)return;if(!e){const e=this._listeners[t];if(!e)return;let i=!0;for(;i;){i=!1;let s=-1;for(let r=0;r<this._eventCallbacks[e.name].length;r++)0===this._eventCallbacks[e.name][r].id.indexOf(t)&&(i=!0,s=r);-1!==s&&(this._eventCallbacks[e.name].splice(s,1),delete this._listeners[t])}return}this._log.stack(" old function signature: removeEventListener! use listener id");let i=null;for(let s=0;s<this._eventCallbacks[t].length;s++)this._eventCallbacks[t][s].cb==e&&(i=s);null!==i?delete this._eventCallbacks[i]:this._log.warn("removeEventListener not found "+t)},this.logEvents=function(t,e){this._logEvents=t,this._logName=e},this.emitEvent=function(t,e,i,s,r,n,o){if(this._logEvents&&console.log("[event] ",this._logName,t,this._eventCallbacks),this._eventCallbacks[t])for(let h=0;h<this._eventCallbacks[t].length;h++)this._eventCallbacks[t][h]&&this._eventCallbacks[t][h].cb(e,i,s,r,n,o);else this._logEvents&&console.log("[event] has no event callback",t,this._eventCallbacks)}},X={Key:function(t){this.time=0,this.value=0,this.ui=null,this.onChange=null,this._easing=0,this.bezTangIn=0,this.bezTangOut=0,this.cb=null,this.cbTriggered=!1;this.setEasing(a.EASING_LINEAR),this.set(t)}};X.Key.cubicSpline=function(t,e,i){let s=t*t,r=s*t;return(2*r-3*s+1)*e.value+(r-2*s+t)*e.bezTangOut+(-2*r+3*s)*i.value+(r-s)*i.bezTangIn},X.Key.easeCubicSpline=function(t,e){return X.Key.cubicSpline(t,this,e)},X.Key.linear=function(t,e,i){return parseFloat(e.value)+parseFloat(i.value-e.value)*t},X.Key.easeLinear=function(t,e){return X.Key.linear(t,this,e)},X.Key.easeAbsolute=function(t,e){return this.value};const K=function(t){return Math.pow(2,10*(t-1))};X.Key.easeExpoIn=function(t,e){return t=K(t),X.Key.linear(t,this,e)};const j=function(t){return t=1-Math.pow(2,-10*t)};X.Key.easeExpoOut=function(t,e){return t=j(t),X.Key.linear(t,this,e)};const Q=function(t){return(t*=2)<1?t=.5*Math.pow(2,10*(t-1)):(t--,t=.5*(2-Math.pow(2,-10*t))),t};X.Key.easeExpoInOut=function(t,e){return t=Q(t),X.Key.linear(t,this,e)},X.Key.easeSinIn=function(t,e){return t=-1*Math.cos(t*Math.PI/2)+1,X.Key.linear(t,this,e)},X.Key.easeSinOut=function(t,e){return t=Math.sin(t*Math.PI/2),X.Key.linear(t,this,e)},X.Key.easeSinInOut=function(t,e){return t=-.5*(Math.cos(Math.PI*t)-1),X.Key.linear(t,this,e)};const q=function(t){return t*=t*t};X.Key.easeCubicIn=function(t,e){return t=q(t),X.Key.linear(t,this,e)},X.Key.easeInQuint=function(t,e){return t*=t*t*t*t,X.Key.linear(t,this,e)},X.Key.easeOutQuint=function(t,e){return t=(t-=1)*t*t*t*t+1,X.Key.linear(t,this,e)},X.Key.easeInOutQuint=function(t,e){return(t/=.5)<1?t*=.5*t*t*t*t:t=.5*((t-=2)*t*t*t*t+2),X.Key.linear(t,this,e)},X.Key.easeInQuart=function(t,e){return t*=t*t*t,X.Key.linear(t,this,e)},X.Key.easeOutQuart=function(t,e){return t=-1*((t-=1)*t*t*t-1),X.Key.linear(t,this,e)},X.Key.easeInOutQuart=function(t,e){return(t/=.5)<1?t*=.5*t*t*t:t=-.5*((t-=2)*t*t*t-2),X.Key.linear(t,this,e)},X.Key.bounce=function(t){return(t/=1)<1/2.75?t*=7.5625*t:t=t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375,t},X.Key.easeInBounce=function(t,e){return X.Key.linear(X.Key.bounce(t),this,e)},X.Key.easeOutBounce=function(t,e){return X.Key.linear(X.Key.bounce(t),this,e)},X.Key.easeInElastic=function(t,e){let i=1.70158,s=0,r=1;return 0===t?t=0:1==(t/=1)?t=1:(s||(s=.3),r<Math.abs(1)?(r=1,i=s/4):i=s/(2*Math.PI)*Math.asin(1/r),t=-r*Math.pow(2,10*(t-=1))*Math.sin((1*t-i)*(2*Math.PI)/s)+0),X.Key.linear(t,this,e)},X.Key.easeOutElastic=function(t,e){let i=1.70158,s=0,r=1;return 0===t?t=0:1==(t/=1)?t=1:(s||(s=.3),r<Math.abs(1)?(r=1,i=s/4):i=s/(2*Math.PI)*Math.asin(1/r),t=r*Math.pow(2,-10*t)*Math.sin((1*t-i)*(2*Math.PI)/s)+1+0),X.Key.linear(t,this,e)},X.Key.easeInBack=function(t,e){const i=1.70158;return t=t*t*((i+1)*t-i),X.Key.linear(t,this,e)},X.Key.easeOutBack=function(t,e){const i=1.70158;return t=(t=t/1-1)*t*((i+1)*t+i)+1,X.Key.linear(t,this,e)},X.Key.easeInOutBack=function(t,e){let i=1.70158;return t=(t/=.5)<1?t*t*((1+(i*=1.525))*t-i)*.5:.5*((t-=2)*t*((1+(i*=1.525))*t+i)+2),X.Key.linear(t,this,e)};const J=function(t){return t=--t*t*t+1};X.Key.easeCubicOut=function(t,e){return t=J(t),X.Key.linear(t,this,e)};const Z=function(t){return(t*=2)<1?t*=.5*t*t:t=.5*((t-=2)*t*t+2),t};X.Key.easeCubicInOut=function(t,e){return t=Z(t),X.Key.linear(t,this,e)},X.Key.easeSmoothStep=function(t,e){const i=Math.max(0,Math.min(1,t));return t=i*i*(3-2*i),X.Key.linear(t,this,e)},X.Key.easeSmootherStep=function(t,e){const i=Math.max(0,Math.min(1,(t-0)/1));return t=i*i*i*(i*(6*i-15)+10),X.Key.linear(t,this,e)},X.Key.prototype.setEasing=function(t){this._easing=t,this._easing==a.EASING_LINEAR?this.ease=X.Key.easeLinear:this._easing==a.EASING_ABSOLUTE?this.ease=X.Key.easeAbsolute:this._easing==a.EASING_SMOOTHSTEP?this.ease=X.Key.easeSmoothStep:this._easing==a.EASING_SMOOTHERSTEP?this.ease=X.Key.easeSmootherStep:this._easing==a.EASING_CUBIC_IN?this.ease=X.Key.easeCubicIn:this._easing==a.EASING_CUBIC_OUT?this.ease=X.Key.easeCubicOut:this._easing==a.EASING_CUBIC_INOUT?this.ease=X.Key.easeCubicInOut:this._easing==a.EASING_EXPO_IN?this.ease=X.Key.easeExpoIn:this._easing==a.EASING_EXPO_OUT?this.ease=X.Key.easeExpoOut:this._easing==a.EASING_EXPO_INOUT?this.ease=X.Key.easeExpoInOut:this._easing==a.EASING_SIN_IN?this.ease=X.Key.easeSinIn:this._easing==a.EASING_SIN_OUT?this.ease=X.Key.easeSinOut:this._easing==a.EASING_SIN_INOUT?this.ease=X.Key.easeSinInOut:this._easing==a.EASING_BACK_OUT?this.ease=X.Key.easeOutBack:this._easing==a.EASING_BACK_IN?this.ease=X.Key.easeInBack:this._easing==a.EASING_BACK_INOUT?this.ease=X.Key.easeInOutBack:this._easing==a.EASING_ELASTIC_IN?this.ease=X.Key.easeInElastic:this._easing==a.EASING_ELASTIC_OUT?this.ease=X.Key.easeOutElastic:this._easing==a.EASING_ELASTIC_INOUT?this.ease=X.Key.easeElasticInOut:this._easing==a.EASING_BOUNCE_IN?this.ease=X.Key.easeInBounce:this._easing==a.EASING_BOUNCE_OUT?this.ease=X.Key.easeOutBounce:this._easing==a.EASING_QUART_OUT?this.ease=X.Key.easeOutQuart:this._easing==a.EASING_QUART_IN?this.ease=X.Key.easeInQuart:this._easing==a.EASING_QUART_INOUT?this.ease=X.Key.easeInOutQuart:this._easing==a.EASING_QUINT_OUT?this.ease=X.Key.easeOutQuint:this._easing==a.EASING_QUINT_IN?this.ease=X.Key.easeInQuint:this._easing==a.EASING_QUINT_INOUT?this.ease=X.Key.easeInOutQuint:this._easing==a.EASING_CUBICSPLINE?this.ease=X.Key.easeCubicSpline:(this._easing=a.EASING_LINEAR,this.ease=X.Key.easeLinear)},X.Key.prototype.trigger=function(){this.cb(),this.cbTriggered=!0},X.Key.prototype.setValue=function(t){this.value=t,null!==this.onChange&&this.onChange()},X.Key.prototype.set=function(t){t&&(t.e&&this.setEasing(t.e),t.cb&&(this.cb=t.cb,this.cbTriggered=!1),t.b,t.hasOwnProperty("t")&&(this.time=t.t),t.hasOwnProperty("time")&&(this.time=t.time),t.hasOwnProperty("v")?this.value=t.v:t.hasOwnProperty("value")&&(this.value=t.value)),null!==this.onChange&&this.onChange()},X.Key.prototype.getSerialized=function(){const t={};return t.t=this.time,t.v=this.value,t.e=this._easing,t},X.Key.prototype.getEasing=function(){return this._easing};const $=function(t){W.apply(this),t=t||{},this.keys=[],this.onChange=null,this.stayInTimeline=!1,this.loop=!1,this._log=new h("Anim"),this.defaultEasing=t.defaultEasing||a.EASING_LINEAR,this.onLooped=null,this._timesLooped=0,this._needsSort=!1};$.prototype.forceChangeCallback=function(){null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this)},$.prototype.getLoop=function(){return this.loop},$.prototype.setLoop=function(t){this.loop=t,this.emitEvent("onChange",this)},$.prototype.hasEnded=function(t){return 0===this.keys.length||this.keys[this.keys.length-1].time<=t},$.prototype.isRising=function(t){if(this.hasEnded(t))return!1;const e=this.getKeyIndex(t);return this.keys[e].value<this.keys[e+1].value},$.prototype.clearBefore=function(t){const e=this.getValue(t),i=this.getKeyIndex(t);this.setValue(t,e),i>1&&this.keys.splice(0,i)},$.prototype.clear=function(t){let e=0;t&&(e=this.getValue(t)),this.keys.length=0,t&&this.setValue(t,e),null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this)},$.prototype.sortKeys=function(){this.keys.sort((t,e)=>parseFloat(t.time)-parseFloat(e.time)),this._needsSort=!1},$.prototype.getLength=function(){return 0===this.keys.length?0:this.keys[this.keys.length-1].time},$.prototype.getKeyIndex=function(t){let e=0;for(let i=0;i<this.keys.length;i++)if(t>=this.keys[i].time&&(e=i),this.keys[i].time>t)return e;return e},$.prototype.setValue=function(t,e,i){let s=null;for(const r in this.keys)if(this.keys[r].time==t){s=this.keys[r],this.keys[r].setValue(e),this.keys[r].cb=i;break}return s||(s=new X.Key({time:t,value:e,e:this.defaultEasing,cb:i}),this.keys.push(s)),this.onChange&&this.onChange(),this.emitEvent("onChange",this),this._needsSort=!0,s},$.prototype.setKeyEasing=function(t,e){this.keys[t]&&(this.keys[t].setEasing(e),this.emitEvent("onChange",this))},$.prototype.getSerialized=function(){const t={keys:[]};t.loop=this.loop;for(const e in this.keys)t.keys.push(this.keys[e].getSerialized());return t},$.prototype.getKey=function(t){const e=this.getKeyIndex(t);return this.keys[e]},$.prototype.getNextKey=function(t){let e=this.getKeyIndex(t)+1;return e>=this.keys.length&&(e=this.keys.length-1),this.keys[e]},$.prototype.isFinished=function(t){return this.keys.length<=0||t>this.keys[this.keys.length-1].time},$.prototype.isStarted=function(t){return!(this.keys.length<=0)&&t>=this.keys[0].time},$.prototype.getValue=function(t){if(0===this.keys.length)return 0;if(this._needsSort&&this.sortKeys(),t<this.keys[0].time)return this.keys[0].value;const e=this.keys.length-1;if(this.loop&&t>this.keys[e].time){t/this.keys[e].time>this._timesLooped&&(this._timesLooped++,this.onLooped&&this.onLooped()),t=(t-this.keys[0].time)%(this.keys[e].time-this.keys[0].time),t+=this.keys[0].time}const i=this.getKeyIndex(t);if(i>=e)return this.keys[e].cb&&!this.keys[e].cbTriggered&&this.keys[e].trigger(),this.keys[e].value;const s=parseInt(i,10)+1,r=this.keys[i],n=this.keys[s];if(r.cb&&!r.cbTriggered&&r.trigger(),!n)return-1;const o=(t-r.time)/(n.time-r.time);return r.ease||this.log._warn("has no ease",r,n),r.ease(o,n)},$.prototype.addKey=function(t){void 0===t.time?this.log.warn("key time undefined, ignoring!"):(this.keys.push(t),null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this))},$.prototype.easingFromString=function(t){return"linear"==t?a.EASING_LINEAR:"absolute"==t?a.EASING_ABSOLUTE:"smoothstep"==t?a.EASING_SMOOTHSTEP:"smootherstep"==t?a.EASING_SMOOTHERSTEP:"Cubic In"==t?a.EASING_CUBIC_IN:"Cubic Out"==t?a.EASING_CUBIC_OUT:"Cubic In Out"==t?a.EASING_CUBIC_INOUT:"Expo In"==t?a.EASING_EXPO_IN:"Expo Out"==t?a.EASING_EXPO_OUT:"Expo In Out"==t?a.EASING_EXPO_INOUT:"Sin In"==t?a.EASING_SIN_IN:"Sin Out"==t?a.EASING_SIN_OUT:"Sin In Out"==t?a.EASING_SIN_INOUT:"Back In"==t?a.EASING_BACK_IN:"Back Out"==t?a.EASING_BACK_OUT:"Back In Out"==t?a.EASING_BACK_INOUT:"Elastic In"==t?a.EASING_ELASTIC_IN:"Elastic Out"==t?a.EASING_ELASTIC_OUT:"Bounce In"==t?a.EASING_BOUNCE_IN:"Bounce Out"==t?a.EASING_BOUNCE_OUT:"Quart Out"==t?a.EASING_QUART_OUT:"Quart In"==t?a.EASING_QUART_IN:"Quart In Out"==t?a.EASING_QUART_INOUT:"Quint Out"==t?a.EASING_QUINT_OUT:"Quint In"==t?a.EASING_QUINT_IN:"Quint In Out"==t?a.EASING_QUINT_INOUT:void 0},$.prototype.createPort=function(t,e,i){const s=t.inDropDown(e,a.EASINGS);return s.set("linear"),s.defaultValue="linear",s.onChange=function(){this.defaultEasing=this.easingFromString(s.get()),i&&i()}.bind(this),s},$.slerpQuaternion=function(t,e,i,s,r,n){$.slerpQuaternion.q1||($.slerpQuaternion.q1=quat.create(),$.slerpQuaternion.q2=quat.create());const o=i.getKeyIndex(t);let h=o+1;if(h>=i.keys.length&&(h=i.keys.length-1),o==h)quat.set(e,i.keys[o].value,s.keys[o].value,r.keys[o].value,n.keys[o].value);else{const a=i.keys[o].time,l=(t-a)/(i.keys[h].time-a);quat.set($.slerpQuaternion.q1,i.keys[o].value,s.keys[o].value,r.keys[o].value,n.keys[o].value),quat.set($.slerpQuaternion.q2,i.keys[h].value,s.keys[h].value,r.keys[h].value,n.keys[h].value),quat.slerp(e,$.slerpQuaternion.q1,$.slerpQuaternion.q2,l)}return e};const tt=X;tt.Anim=$;const et=function(t,e,i,s){W.apply(this),this.data={},this._log=new h("core_port"),this.direction=c.PORT_DIR_IN,this.id=A(),this.parent=t,this.links=[],this.value=0,this.name=e,this.type=i||l.OP_PORT_TYPE_VALUE,this.uiAttribs=s||{},this.anim=null,this._oldAnimVal=-5711,this.defaultValue=null,this._uiActiveState=!0,this.ignoreValueSerialize=!1,this.onLinkChanged=null,this.crashed=!1,this._valueBeforeLink=null,this._lastAnimFrame=-1,this._animated=!1,this.onValueChanged=null,this.onTriggered=null,this.onUiActiveStateChange=null,this.changeAlways=!1,this._warnedDeprecated=!1,this._useVariableName=null,this.activityCounter=0,this._tempLastUiValue=null,Object.defineProperty(this,"val",{get(){return this._log.warn("val getter deprecated!",this),this._log.stack("val getter deprecated"),this._warnedDeprecated=!0,this.get()},set(t){this._log.warn("val setter deprecated!",this),this._log.stack("val setter deprecated"),this.setValue(t),this._warnedDeprecated=!0}})};et.prototype.getValueForDisplay=function(){let t=String(this.value);return this.uiAttribs&&"boolnum"==this.uiAttribs.display&&(t+=" - ",this.value?t+="true":t+="false"),t=t.replace(/(<([^>]+)>)/gi,""),t.length>100&&(t=t.substring(0,100)),t},et.prototype.onAnimToggle=function(){},et.prototype._onAnimToggle=function(){this.onAnimToggle()},et.prototype.remove=function(){this.removeLinks(),this.parent.removePort(this)},et.prototype.setUiAttribs=function(t){let e=!1;this.uiAttribs||(this.uiAttribs={});for(const i in t)this.uiAttribs[i]!=t[i]&&(e=!0),this.uiAttribs[i]=t[i],"group"==i&&this.indexPort&&this.indexPort.setUiAttribs({group:t[i]});e&&this.emitEvent("onUiAttrChange",t)},et.prototype.getUiAttribs=function(){return this.uiAttribs},et.prototype.getUiAttrib=function(t){return this.uiAttribs&&this.uiAttribs.hasOwnProperty(t)?this.uiAttribs[t]:null},et.prototype.get=function(){return this._animated&&this._lastAnimFrame!=this.parent.patch.getFrameNum()&&(this._lastAnimFrame=this.parent.patch.getFrameNum(),this.value=this.anim.getValue(this.parent.patch.timer.getTime()),this._oldAnimVal=this.value,this.forceChange()),this.value},et.prototype.set=et.prototype.setValue=function(t){if(void 0!==t&&this.parent.enabled&&!this.crashed&&(t!==this.value||this.changeAlways||this.type==l.OP_PORT_TYPE_TEXTURE||this.type==l.OP_PORT_TYPE_ARRAY)){if(this._animated)this.anim.setValue(this.parent.patch.timer.getTime(),t);else{try{this.value=t,this.forceChange()}catch(t){this.crashed=!0,this.setValue=function(t){},this.onTriggered=function(){},this._log.error("onvaluechanged exception cought",t),this._log.error(t.stack),this._log.warn("exception in: "+this.parent.name),this.parent.patch.isEditorMode()&&gui.showOpCrash(this.parent),this.parent.patch.emitEvent("exception",t,this.parent),this.parent.onError&&this.parent.onError(t)}this.parent&&this.parent.patch&&this.parent.patch.isEditorMode()&&this.type==l.OP_PORT_TYPE_TEXTURE&&gui.texturePreview().updateTexturePort(this)}if(this.direction==c.PORT_DIR_OUT)for(let t=0;t<this.links.length;++t)this.links[t].setValue()}},et.prototype.updateAnim=function(){this._animated&&(this.value=this.get(),(this._oldAnimVal!=this.value||this.changeAlways)&&(this._oldAnimVal=this.value,this.forceChange()),this._oldAnimVal=this.value)},et.args=function(t){return(t+"").replace(/[/][/].*$/gm,"").replace(/\s+/g,"").replace(/[/][*][^/*]*[*][/]/g,"").split("){",1)[0].replace(/^[^(]*[(]/,"").replace(/=[^,]+/g,"").split(",").filter(Boolean)},et.prototype.forceChange=function(){this.onValueChanged||this.onChange,this._activity(),this.emitEvent("change",this.value,this),this.onChange?this.onChange(this,this.value):this.onValueChanged&&this.onValueChanged(this,this.value)},et.prototype.getTypeString=function(){return this.type==l.OP_PORT_TYPE_VALUE?"Number":this.type==l.OP_PORT_TYPE_FUNCTION?"Trigger":this.type==l.OP_PORT_TYPE_OBJECT?"Object":this.type==l.OP_PORT_TYPE_DYNAMIC?"Dynamic":this.type==l.OP_PORT_TYPE_ARRAY?"Array":this.type==l.OP_PORT_TYPE_STRING?"String":"Unknown"},et.prototype.deSerializeSettings=function(t){if(t&&(t.animated&&this.setAnimated(t.animated),t.useVariable&&this.setVariableName(t.useVariable),t.anim)){this.anim||(this.anim=new $),this.anim.addEventListener("onChange",()=>{this.parent.patch.emitEvent("portAnimUpdated",this.parent,this,this.anim)}),t.anim.loop&&(this.anim.loop=t.anim.loop);for(const e in t.anim.keys)this.anim.keys.push(new X.Key(t.anim.keys[e]))}},et.prototype.getSerialized=function(){const t={};if(t.name=this.getName(),this.ignoreValueSerialize||0!==this.links.length||this.type==l.OP_PORT_TYPE_OBJECT&&this.value&&this.value.tex||(t.value=this.value),this._useVariableName&&(t.useVariable=this._useVariableName),this._animated&&(t.animated=!0),this.anim&&(t.anim=this.anim.getSerialized()),"file"==this.uiAttribs.display&&(t.display=this.uiAttribs.display),this.direction==c.PORT_DIR_OUT&&this.links.length>0){t.links=[];for(const e in this.links)!this.links[e].ignoreInSerialize&&this.links[e].portIn&&this.links[e].portOut&&t.links.push(this.links[e].getSerialized())}return t},et.prototype.shouldLink=function(){return!0},et.prototype.removeLinks=function(){let t=0;for(;this.links.length>0;){if(t++,t>5e3){this._log.warn("could not delete links... / infinite loop"),this.links.length=0;break}this.links[0].remove()}},et.prototype.removeLink=function(t){for(const e in this.links)this.links[e]==t&&this.links.splice(e,1);this.direction==c.PORT_DIR_IN&&(this.type==l.OP_PORT_TYPE_VALUE?this.setValue(this._valueBeforeLink||0):this.setValue(this._valueBeforeLink||null)),this.onLinkChanged&&this.onLinkChanged(),this.emitEvent("onLinkChanged")},et.prototype.getName=function(){return this.name},et.prototype.addLink=function(t){this._valueBeforeLink=this.value,this.links.push(t),this.onLinkChanged&&this.onLinkChanged(),this.emitEvent("onLinkChanged")},et.prototype.getLinkTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return this.links[e]},et.prototype.removeLinkTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return this.links[e].remove(),this.onLinkChanged&&this.onLinkChanged(),void this.emitEvent("onLinkChanged")},et.prototype.isLinkedTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return!0;return!1},et.prototype._activity=function(){this.activityCounter++},et.prototype.trigger=function(){if(this._activity(),0===this.links.length)return;if(!this.parent.enabled)return;let t=null;try{for(let e=0;e<this.links.length;++e)this.links[e].portIn&&(t=this.links[e].portIn,t.parent.patch.pushTriggerStack(t),t._onTriggered(),t.parent.patch.popTriggerStack()),this.links[e]&&this.links[e].activity()}catch(e){this.parent.enabled=!1,this.parent.patch.isEditorMode()&&(this.parent.patch.emitEvent("exception",e,t.parent),this.parent.patch.emitEvent("opcrash",t),t.parent.onError&&t.parent.onError(e)),this._log.warn("exception!"),this._log.error("ontriggered exception cought",e),this._log.error(e.stack),this._log.warn("exception in: "+t.parent.name)}},et.prototype.call=function(){this._log.warn("call deprecated - use trigger() "),this.trigger()},et.prototype.execute=function(){this._log.warn("### execute port: "+this.getName(),this.goals.length)},et.prototype.setVariableName=function(t){this._useVariableName=t},et.prototype.getVariableName=function(){return this._useVariableName},et.prototype.setVariable=function(t){this.setAnimated(!1);const e={useVariable:!1};this._variableIn&&(this._variableIn.removeListener(this.set.bind(this)),this._variableIn=null),t?(this._variableIn=this.parent.patch.getVar(t),this._variableIn?(this.type==l.OP_PORT_TYPE_OBJECT?this._variableIn.addListener(()=>{this.set(null),this.set(this._variableIn.getValue())}):this._variableIn.addListener(this.set.bind(this)),this.set(this._variableIn.getValue())):this._log.warn("PORT VAR NOT FOUND!!!",t),this._useVariableName=t,e.useVariable=!0,e.variableName=this._useVariableName):(e.variableName=this._useVariableName=null,e.useVariable=!1),this.setUiAttribs(e),this.parent.patch.emitEvent("portSetVariable",this.parent,this,t)},et.prototype._handleNoTriggerOpAnimUpdates=function(t){let e=!1;for(let t=0;t<this.parent.portsIn.length;t++)if(this.parent.portsIn.type==l.OP_PORT_TYPE_FUNCTION){e=!0;break}e||(t?this._notriggerAnimUpdate=this.parent.patch.on("onRenderFrame",()=>{this.updateAnim()}):this.parent.patch.removeEventListener(this._notriggerAnimUpdate))},et.prototype.setAnimated=function(t){this._animated!=t&&(this._animated=t,this._animated&&!this.anim&&(this.anim=new $,this.anim.addEventListener("onChange",()=>{this.parent.patch.emitEvent("portAnimUpdated",this.parent,this,this.anim)})),this._onAnimToggle()),this._handleNoTriggerOpAnimUpdates(t),this.setUiAttribs({isAnimated:this._animated})},et.prototype.toggleAnim=function(t){this._animated=!this._animated,this._animated&&!this.anim&&(this.anim=new $,this.anim.addEventListener("onChange",()=>{this.parent.patch.emitEvent("portAnimUpdated",this.parent,this,this.anim)})),this.setAnimated(this._animated),this._onAnimToggle(),this.setUiAttribs({isAnimated:this._animated})},et.prototype.getType=function(){return this.type},et.prototype.isLinked=function(){return this.links.length>0},et.prototype.isBoundToVar=function(){return null!=this._useVariableName},et.prototype.isAnimated=function(){return this._animated},et.prototype.isHidden=function(){return this.uiAttribs.hidePort},et.prototype._onTriggered=function(t){this._activity(),this.parent.updateAnims(),this.parent.enabled&&this.onTriggered&&this.onTriggered(t)},et.prototype._onSetProfiling=function(t){this.parent.patch.profiler.add("port",this),this.setValue(t),this.parent.patch.profiler.add("port",null)},et.prototype._onTriggeredProfiling=function(){this.parent.enabled&&this.onTriggered&&(this.parent.patch.profiler.add("port",this),this.onTriggered(),this.parent.patch.profiler.add("port",null))},et.prototype.onValueChange=function(t){this.onChange=t},et.prototype.getUiActiveState=function(){return this._uiActiveState},et.prototype.setUiActiveState=function(t){this._uiActiveState=t,this.onUiActiveStateChange&&this.onUiActiveStateChange()},et.prototype.hidePort=function(){this._log.warn("op.hideport() is deprecated, do not use it!")},et.portTypeNumberToString=function(t){return t==l.OP_PORT_TYPE_VALUE?"value":t==l.OP_PORT_TYPE_FUNCTION?"function":t==l.OP_PORT_TYPE_OBJECT?"object":t==l.OP_PORT_TYPE_ARRAY?"array":t==l.OP_PORT_TYPE_STRING?"string":t==l.OP_PORT_TYPE_DYNAMIC?"dynamic":"unknown"};class it extends et{constructor(t,e,i,s,r){super(t,e,i,s),this.indexPort=r,this.indexPort.set=t=>{const e=s.values;if(!e)return;let i=Math.floor(t);i=Math.min(i,e.length-1),i=Math.max(i,0),this.indexPort.setValue(i),this.set(e[i]),this.parent.patch.isEditorMode()&&window.gui&&gui.patchView.isCurrentOp(this.parent)&&gui.opParams.show(this.parent)}}setUiAttribs(t){const e=t.hidePort;t.hidePort=!0,super.setUiAttribs(t),void 0!==e&&this.indexPort.setUiAttribs({hidePort:e})}}class st extends it{setUiAttribs(t){if(this.indexPort.isLinked())for(const e in t)"greyout"!=e||t[e]||(t[e]="true");super.setUiAttribs(t)}}const rt=function(t,e,i,s,r,n,o,a,l,c){if(this._loc=-1,this._log=new h("cgl_uniform"),this._type=e,this._cgl=t._cgl,this._name=i,this._shader=t,this._value=1e-5,this._oldValue=null,this._port=null,this._structName=l,this._structUniformName=a,this._propertyName=c,this._shader._addUniform(this),this.needsUpdate=!0,this.shaderType=null,this.comment=null,"f"==e)this.set=this.setValue=this.setValueF.bind(this),this.updateValue=this.updateValueF.bind(this);else if("f[]"==e)this.set=this.setValue=this.setValueArrayF.bind(this),this.updateValue=this.updateValueArrayF.bind(this);else if("2f[]"==e)this.set=this.setValue=this.setValueArray2F.bind(this),this.updateValue=this.updateValueArray2F.bind(this);else if("3f[]"==e)this.set=this.setValue=this.setValueArray3F.bind(this),this.updateValue=this.updateValueArray3F.bind(this);else if("4f[]"==e)this.set=this.setValue=this.setValueArray4F.bind(this),this.updateValue=this.updateValueArray4F.bind(this);else if("i"==e)this.set=this.setValue=this.setValueI.bind(this),this.updateValue=this.updateValueI.bind(this);else if("2i"==e)this.set=this.setValue=this.setValue2I.bind(this),this.updateValue=this.updateValue2I.bind(this);else if("3i"==e)this.set=this.setValue=this.setValue3I.bind(this),this.updateValue=this.updateValue3I.bind(this);else if("4i"==e)this.set=this.setValue=this.setValue4I.bind(this),this.updateValue=this.updateValue4I.bind(this);else if("b"==e)this.set=this.setValue=this.setValueBool.bind(this),this.updateValue=this.updateValueBool.bind(this);else if("4f"==e)this.set=this.setValue=this.setValue4F.bind(this),this.updateValue=this.updateValue4F.bind(this);else if("3f"==e)this.set=this.setValue=this.setValue3F.bind(this),this.updateValue=this.updateValue3F.bind(this);else if("2f"==e)this.set=this.setValue=this.setValue2F.bind(this),this.updateValue=this.updateValue2F.bind(this);else if("t"==e)this.set=this.setValue=this.setValueT.bind(this),this.updateValue=this.updateValueT.bind(this);else if("tc"==e)this.set=this.setValue=this.setValueT.bind(this),this.updateValue=this.updateValueT.bind(this);else if("t[]"==e)this.set=this.setValue=this.setValueArrayT.bind(this),this.updateValue=this.updateValueArrayT.bind(this);else{if("m4"!=e&&"m4[]"!=e)throw new Error("Unknown uniform type");this.set=this.setValue=this.setValueM4.bind(this),this.updateValue=this.updateValueM4.bind(this)}"object"==typeof s&&s instanceof et?(this._port=s,this._value=this._port.get(),r&&n&&o?(r instanceof et&&n instanceof et&&o instanceof et||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0,0,0],this._port2=r,this._port3=n,this._port4=o,this._port.on("change",this.updateFromPort4f.bind(this)),this._port2.on("change",this.updateFromPort4f.bind(this)),this._port3.on("change",this.updateFromPort4f.bind(this)),this._port4.on("change",this.updateFromPort4f.bind(this)),this.updateFromPort4f()):r&&n?(r instanceof et&&n instanceof et||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0,0],this._port2=r,this._port3=n,this._port.on("change",this.updateFromPort3f.bind(this)),this._port2.on("change",this.updateFromPort3f.bind(this)),this._port3.on("change",this.updateFromPort3f.bind(this)),this.updateFromPort3f()):r?(r instanceof et||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0],this._port2=r,this._port.on("change",this.updateFromPort2f.bind(this)),this._port2.on("change",this.updateFromPort2f.bind(this)),this.updateFromPort2f()):this._port.on("change",this.updateFromPort.bind(this))):this._value=s,this.setValue(this._value),this.needsUpdate=!0};rt.prototype.copy=function(t){const e=new rt(t,this._type,this._name,this._value,this._port2,this._port3,this._port4,this._structUniformName,this._structName,this._propertyName);return e.shaderType=this.shaderType,e},rt.prototype.getGlslTypeString=function(){return"f"==this._type?"float":"b"==this._type?"bool":"i"==this._type?"int":"2i"==this._type?"ivec2":"2f"==this._type?"vec2":"3f"==this._type?"vec3":"4f"==this._type?"vec4":"m4"==this._type?"mat4":"t"==this._type?"sampler2D":"tc"==this._type?"samplerCube":"3f[]"==this._type||"m4[]"==this._type?null:void this._log.warn("[CGL UNIFORM] unknown glsl type string ",this._type)},rt.prototype._isValidLoc=function(){return-1!=this._loc},rt.prototype.getType=function(){return this._type},rt.prototype.getName=function(){return this._name},rt.prototype.getValue=function(){return this._value},rt.prototype.getShaderType=function(){return this.shaderType},rt.prototype.isStructMember=function(){return!!this._structName},rt.prototype.resetLoc=function(){this._loc=-1,this.needsUpdate=!0},rt.prototype.bindTextures=function(){return this._value},rt.prototype.resetLoc=function(){this._loc=-1,this.needsUpdate=!0},rt.prototype.bindTextures=function(){},rt.prototype.getLoc=function(){return this._loc},rt.prototype.updateFromPort4f=function(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this._value[3]=this._port4.get(),this.setValue(this._value)},rt.prototype.updateFromPort3f=function(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this.setValue(this._value)},rt.prototype.updateFromPort2f=function(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this.setValue(this._value)},rt.prototype.updateFromPort=function(){this.setValue(this._port.get())},rt.prototype.updateValueF=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1f(this._loc,this._value),this._cgl.profileData.profileUniformCount++},rt.prototype.setValueF=function(t){t!=this._value&&(this.needsUpdate=!0,this._value=t)},rt.prototype.updateValueI=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1i(this._loc,this._value),this._cgl.profileData.profileUniformCount++},rt.prototype.updateValue2I=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform2i(this._loc,this._value[0],this._value[1]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},rt.prototype.updateValue3I=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform3i(this._loc,this._value[0],this._value[1],this._value[2]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},rt.prototype.updateValue4I=function(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform4i(this._loc,this._value[0],this._value[1],this._value[2],this._value[3]),this._cgl.profileData.profileUniformCount++},rt.prototype.setValueI=function(t){t!=this._value&&(this.needsUpdate=!0,this._value=t)},rt.prototype.setValue2I=function(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1],this.needsUpdate=!0),this._value=t)},rt.prototype.setValue3I=function(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]&&t[2]==this._oldValue[2]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this._oldValue[2]=t[2],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1,2],this.needsUpdate=!0),this._value=t)},rt.prototype.setValue4I=function(t){this.needsUpdate=!0,this._value=t||vec4.create()},rt.prototype.updateValueBool=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1i(this._loc,this._value?1:0),this._cgl.profileData.profileUniformCount++},rt.prototype.setValueBool=function(t){t!=this._value&&(this.needsUpdate=!0,this._value=t)},rt.prototype.setValueArray4F=function(t){this.needsUpdate=!0,this._value=t},rt.prototype.updateValueArray4F=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform4fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},rt.prototype.setValueArray3F=function(t){this.needsUpdate=!0,this._value=t},rt.prototype.updateValueArray3F=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform3fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},rt.prototype.setValueArray2F=function(t){this.needsUpdate=!0,this._value=t},rt.prototype.updateValueArray2F=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform2fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},rt.prototype.setValueArrayF=function(t){this.needsUpdate=!0,this._value=t},rt.prototype.updateValueArrayF=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform1fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},rt.prototype.setValueArrayT=function(t){this.needsUpdate=!0,this._value=t},rt.prototype.updateValue3F=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform3f(this._loc,this._value[0],this._value[1],this._value[2]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},rt.prototype.setValue3F=function(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]&&t[2]==this._oldValue[2]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this._oldValue[2]=t[2],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1,2],this.needsUpdate=!0),this._value=t)},rt.prototype.updateValue2F=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform2f(this._loc,this._value[0],this._value[1]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},rt.prototype.setValue2F=function(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1],this.needsUpdate=!0),this._value=t)},rt.prototype.updateValue4F=function(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._value||(this._log.warn("no value for uniform",this._name,this),this._value=[0,0,0,0]),this.needsUpdate=!1,this._shader.getCgl().gl.uniform4f(this._loc,this._value[0],this._value[1],this._value[2],this._value[3]),this._cgl.profileData.profileUniformCount++},rt.prototype.setValue4F=function(t){"number"==typeof this.value&&(this.value=vec4.create()),t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]&&t[2]==this._oldValue[2]&&t[3]==this._oldValue[3]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this._oldValue[2]=t[2],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1,2,3],this.needsUpdate=!0),this._value=t)},rt.prototype.updateValueM4=function(){if(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),!this._value||this._value.length%16!=0)return console.log("this.name",this._name,this._value);this._shader.getCgl().gl.uniformMatrix4fv(this._loc,!1,this._value),this._cgl.profileData.profileUniformCount++},rt.prototype.setValueM4=function(t){this.needsUpdate=!0,this._value=t||mat4.create()},rt.prototype.updateValueArrayT=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform1iv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},rt.prototype.updateValueT=function(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._cgl.profileData.profileUniformCount++,this._shader.getCgl().gl.uniform1i(this._loc,this._value),this.needsUpdate=!1},rt.prototype.setValueT=function(t){this.needsUpdate=!0,this._value=t};const nt=180/Math.PI,ot={MATH:{DEG2RAD:Math.PI/180,RAD2DEG:nt},SHADER:{SHADERVAR_VERTEX_POSITION:"vPosition",SHADERVAR_VERTEX_NUMBER:"attrVertIndex",SHADERVAR_VERTEX_NORMAL:"attrVertNormal",SHADERVAR_VERTEX_TEXCOORD:"attrTexCoord",SHADERVAR_INSTANCE_MMATRIX:"instMat",SHADERVAR_VERTEX_COLOR:"attrVertColor",SHADERVAR_UNI_PROJMAT:"projMatrix",SHADERVAR_UNI_VIEWMAT:"viewMatrix",SHADERVAR_UNI_MODELMAT:"modelMatrix",SHADERVAR_UNI_NORMALMAT:"normalMatrix",SHADERVAR_UNI_INVVIEWMAT:"inverseViewMatrix",SHADERVAR_UNI_VIEWPOS:"camPos"},BLEND_MODES:{BLEND_NONE:0,BLEND_NORMAL:1,BLEND_ADD:2,BLEND_SUB:3,BLEND_MUL:4}};const ht={lastMesh:null},at=function(t,e,i){this._cgl=t,this._log=new h("cgl_mesh"),this._bufVertexAttrib=null,this._bufVerticesIndizes=this._cgl.gl.createBuffer(),this._indexType=this._cgl.gl.UNSIGNED_SHORT,this._attributes=[],this._attribLocs={},this._geom=null,this._lastShader=null,this._numInstances=0,this._glPrimitive=i,this._preWireframeGeom=null,this.addVertexNumbers=!1,this.feedBackAttributes=[],this.setGeom(e),this._feedBacks=[],this._feedBacksChanged=!1,this._transformFeedBackLoc=-1,this._lastAttrUpdate=0,this._name="unknown",this._cgl.profileData.addHeavyEvent("mesh constructed",this._name),this._queryExt=null,Object.defineProperty(this,"numInstances",{get(){return this._numInstances},set(t){this.setNumInstances(t)}})};at.prototype.updateVertices=function(t){this.setAttribute(ot.SHADER.SHADERVAR_VERTEX_POSITION,t.vertices,3),this._numVerts=t.vertices.length/3},at.prototype.setAttributePointer=function(t,e,i,s){for(let r=0;r<this._attributes.length;r++)this._attributes[r].name==t&&(this._attributes[r].pointer||(this._attributes[r].pointer=[]),this._attributes[r].pointer.push({loc:-1,name:e,stride:i,offset:s,instanced:t==ot.SHADER.SHADERVAR_INSTANCE_MMATRIX}))},at.prototype.getAttribute=function(t){for(let e=0;e<this._attributes.length;e++)if(this._attributes[e].name==t)return this._attributes[e]},at.prototype.setAttributeRange=function(t,e,i,s){t&&(i||s)&&(t.name||(console.log(t),this._log.stack("no attrname?!")),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,t.buffer),this._cgl.profileData.profileMeshAttributes+=s-i||0,this._cgl.profileData.profileSingleMeshAttribute[this._name]=this._cgl.profileData.profileSingleMeshAttribute[this._name]||0,this._cgl.profileData.profileSingleMeshAttribute[this._name]+=s-i||0,t.numItems<e.length/t.itemSize&&this._resizeAttr(e,t),s>=e.length-1&&this._log.log(this._cgl.canvas.id+" "+t.name+" buffersubdata out of bounds ?",e.length,s,i,t),1==this._cgl.glVersion?this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER,0,e):this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER,4*i,e,i,s-i))},at.prototype._resizeAttr=function(t,e){e.buffer&&this._cgl.gl.deleteBuffer(e.buffer),e.buffer=this._cgl.gl.createBuffer(),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,e.buffer),this._bufferArray(t,e),e.numItems=t.length/e.itemSize},at.prototype._bufferArray=function(t,e){let i=null;t&&(this._cgl.debugOneFrame&&console.log("_bufferArray",t.length,e.name),t instanceof Float32Array?i=t:e&&i&&i.length==t.length?i.set(t):(i=new Float32Array(t),this._cgl.debugOneFrame&&console.log("_bufferArray create new float32array",t.length,e.name),this._cgl.profileData.profileNonTypedAttrib++,this._cgl.profileData.profileNonTypedAttribNames="("+this._name+":"+e.name+")"),e.arrayLength=i.length,this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,i,this._cgl.gl.DYNAMIC_DRAW))},at.prototype.addAttribute=at.prototype.updateAttribute=at.prototype.setAttribute=function(t,e,i,s){if(!e)throw this._log.error("mesh addAttribute - no array given! "+t),new Error;let r=null,n=!1,o=0;const h=e.length/i;for(this._cgl.profileData.profileMeshAttributes+=h||0,"function"==typeof s&&(r=s),"object"==typeof s&&(s.cb&&(r=s.cb),s.instanced&&(n=s.instanced)),t==ot.SHADER.SHADERVAR_INSTANCE_MMATRIX&&(n=!0),o=0;o<this._attributes.length;o++){const i=this._attributes[o];if(i.name==t)return i.numItems===h||this._resizeAttr(e,i),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,i.buffer),this._bufferArray(e,i),i}const a=this._cgl.gl.createBuffer();this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,a);let l=this._cgl.gl.FLOAT;s&&s.type&&(l=s.type);const c={buffer:a,name:t,cb:r,itemSize:i,numItems:h,startItem:0,instanced:n,type:l};return this._bufferArray(e,c),t==ot.SHADER.SHADERVAR_VERTEX_POSITION&&(this._bufVertexAttrib=c),this._attributes.push(c),this._attribLocs={},c},at.prototype.getAttributes=function(){return this._attributes},at.prototype.updateTexCoords=function(t){if(t.texCoords&&t.texCoords.length>0)this.setAttribute(ot.SHADER.SHADERVAR_VERTEX_TEXCOORD,t.texCoords,2);else{const e=new Float32Array(Math.round(t.vertices.length/3*2));this.setAttribute(ot.SHADER.SHADERVAR_VERTEX_TEXCOORD,e,2)}},at.prototype.updateNormals=function(t){if(t.vertexNormals&&t.vertexNormals.length>0)this.setAttribute("attrVertNormal",t.vertexNormals,3);else{const e=new Float32Array(Math.round(t.vertices.length));this.setAttribute("attrVertNormal",e,3)}},at.prototype._setVertexNumbers=function(t){if(!this._verticesNumbers||this._verticesNumbers.length!=this._numVerts||t){if(t)this._verticesNumbers=t;else{this._verticesNumbers=new Float32Array(this._numVerts);for(let t=0;t<this._numVerts;t++)this._verticesNumbers[t]=t}this.setAttribute(ot.SHADER.SHADERVAR_VERTEX_NUMBER,this._verticesNumbers,1,(t,e,i)=>{i.uniformNumVertices||(i.uniformNumVertices=new rt(i,"f","numVertices",this._numVerts)),i.uniformNumVertices.setValue(this._numVerts)})}},at.prototype.setVertexIndices=function(t){if(this._bufVerticesIndizes)if(t.length>0){for(let e=0;e<t.length;e++)if(t[e]>=this._numVerts)return void this._log.warn("invalid index in "+this._name);this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this._bufVerticesIndizes),t instanceof Float32Array&&this._log.warn("vertIndices float32Array: "+this._name),t instanceof Uint32Array?(this.vertIndicesTyped=t,this._indexType=this._cgl.gl.UNSIGNED_INT):t instanceof Uint16Array?this.vertIndicesTyped=t:this.vertIndicesTyped=new Uint16Array(t),this._cgl.gl.bufferData(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this.vertIndicesTyped,this._cgl.gl.DYNAMIC_DRAW),this._bufVerticesIndizes.itemSize=1,this._bufVerticesIndizes.numItems=t.length}else this._bufVerticesIndizes.numItems=0;else this._log.warn("no bufVerticesIndizes: "+this._name)},at.prototype.setGeom=function(t,e){this._geom=t,null!=t.glPrimitive&&(this._glPrimitive=t.glPrimitive),this._geom&&this._geom.name&&(this._name="mesh "+this._geom.name),ht.lastMesh=null,this._cgl.profileData.profileMeshSetGeom++,this._disposeAttributes(),this.updateVertices(this._geom),this.setVertexIndices(this._geom.verticesIndices),this.updateTexCoords(this._geom),this.updateNormals(this._geom),this._geom.hasOwnProperty("tangents")&&this._geom.tangents&&this._geom.tangents.length>0&&this.setAttribute("attrTangent",this._geom.tangents,3),this._geom.hasOwnProperty("biTangents")&&this._geom.biTangents&&this._geom.biTangents.length>0&&this.setAttribute("attrBiTangent",this._geom.biTangents,3),this._geom.vertexColors.length>0&&(this._geom.vertexColors.flat&&this._geom.vertexColors.flat(100),this.setAttribute("attrVertColor",this._geom.vertexColors,4)),this.addVertexNumbers&&this._setVertexNumbers();const i=this._geom.getAttributes();for(const t in i)this.setAttribute(t,i[t].data,i[t].itemSize);e&&(this._geom=null)},at.prototype._preBind=function(t){for(let e=0;e<this._attributes.length;e++)this._attributes[e].cb&&this._attributes[e].cb(this._attributes[e],this._geom,t)},at.prototype._checkAttrLengths=function(){for(let t=0;t<this._attributes.length;t++)if(this._attributes[t].arrayLength/this._attributes[t].itemSize<this._attributes[0].arrayLength/this._attributes[0].itemSize){let t="unknown";this._geom&&(t=this._geom.name)}},at.prototype._bind=function(t){if(!t.isValid())return;let e=[];if(this._attribLocs[t.id]?e=this._attribLocs[t.id]:this._attribLocs[t.id]=e,this._lastShader=t,t.lastCompile>this._lastAttrUpdate||e.length!=this._attributes.length){this._lastAttrUpdate=t.lastCompile;for(let t=0;t<this._attributes.length;t++)e[t]=-1}for(let i=0;i<this._attributes.length;i++){const s=this._attributes[i];if(-1==e[i]&&s._attrLocationLastShaderTime!=t.lastCompile&&(s._attrLocationLastShaderTime=t.lastCompile,e[i]=this._cgl.glGetAttribLocation(t.getProgram(),s.name),this._cgl.profileData.profileAttrLoc++),-1!=e[i])if(this._cgl.gl.enableVertexAttribArray(e[i]),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,s.buffer),s.instanced)if(s.itemSize<=4)s.itemSize&&0!=s.itemSize||this._log.warn("instanced attrib itemsize error",this._geom.name,s),this._cgl.gl.vertexAttribPointer(e[i],s.itemSize,s.type,!1,4*s.itemSize,0),this._cgl.gl.vertexAttribDivisor(e[i],1);else if(16==s.itemSize){const t=64;this._cgl.gl.vertexAttribPointer(e[i],4,s.type,!1,t,0),this._cgl.gl.enableVertexAttribArray(e[i]+1),this._cgl.gl.vertexAttribPointer(e[i]+1,4,s.type,!1,t,16),this._cgl.gl.enableVertexAttribArray(e[i]+2),this._cgl.gl.vertexAttribPointer(e[i]+2,4,s.type,!1,t,32),this._cgl.gl.enableVertexAttribArray(e[i]+3),this._cgl.gl.vertexAttribPointer(e[i]+3,4,s.type,!1,t,48),this._cgl.gl.vertexAttribDivisor(e[i],1),this._cgl.gl.vertexAttribDivisor(e[i]+1,1),this._cgl.gl.vertexAttribDivisor(e[i]+2,1),this._cgl.gl.vertexAttribDivisor(e[i]+3,1)}else this._log.warn("unknown instance attrib size",s.name);else{if(s.itemSize&&0!=s.itemSize||this._log.warn("attrib itemsize error",this._name,s),this._cgl.gl.vertexAttribPointer(e[i],s.itemSize,s.type,!1,4*s.itemSize,0),s.pointer)for(let e=0;e<s.pointer.length;e++){const i=s.pointer[e];-1==i.loc&&(i.loc=this._cgl.glGetAttribLocation(t.getProgram(),i.name)),this._cgl.profileData.profileAttrLoc++,this._cgl.gl.enableVertexAttribArray(i.loc),this._cgl.gl.vertexAttribPointer(i.loc,s.itemSize,s.type,!1,i.stride,i.offset)}this.bindFeedback(s)}}0!==this._bufVerticesIndizes.numItems&&this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this._bufVerticesIndizes)},at.prototype.unBind=function(){const t=this._lastShader;if(this._lastShader=null,!t)return;let e=[];this._attribLocs[t.id]?e=this._attribLocs[t.id]:this._attribLocs[t.id]=e,ht.lastMesh=null;for(let t=0;t<this._attributes.length;t++)this._attributes[t].instanced&&(this._attributes[t].itemSize<=4?(-1!=e[t]&&this._cgl.gl.vertexAttribDivisor(e[t],0),e[t]>=0&&this._cgl.gl.disableVertexAttribArray(e[t])):(this._cgl.gl.vertexAttribDivisor(e[t],0),this._cgl.gl.vertexAttribDivisor(e[t]+1,0),this._cgl.gl.vertexAttribDivisor(e[t]+2,0),this._cgl.gl.vertexAttribDivisor(e[t]+3,0),this._cgl.gl.disableVertexAttribArray(e[t]+1),this._cgl.gl.disableVertexAttribArray(e[t]+2),this._cgl.gl.disableVertexAttribArray(e[t]+3))),-1!=e[t]&&this._cgl.gl.disableVertexAttribArray(e[t])},at.prototype.meshChanged=function(){return this._cgl.lastMesh&&this._cgl.lastMesh!=this},at.prototype.printDebug=function(t){console.log("--attributes");for(let t=0;t<this._attributes.length;t++)console.log("attribute "+t+" "+this._attributes[t].name)},at.prototype.setNumVertices=function(t){this._bufVertexAttrib.numItems=t},at.prototype.getNumVertices=function(){return this._bufVertexAttrib.numItems},at.prototype.render=function(t){if(!t||!t.isValid())return;if(this._checkAttrLengths(),this._geom&&(!this._preWireframeGeom||t.wireframe||this._geom.isIndexed()||(this.setGeom(this._preWireframeGeom),this._preWireframeGeom=null),t.wireframe)){let t=!1;this._geom.isIndexed()&&(this._preWireframeGeom||(this._preWireframeGeom=this._geom,this._geom=this._geom.copy()),this._geom.unIndex(),t=!0),this._geom.getAttribute("attrBarycentric")||(this._preWireframeGeom||(this._preWireframeGeom=this._geom,this._geom=this._geom.copy()),t=!0,this._geom.calcBarycentric()),t&&this.setGeom(this._geom)}let e=!1;ht.lastMesh!=this&&(ht.lastMesh&&ht.lastMesh.unBind(),e=!0),e&&this._preBind(t),t.bind(),t.bindTextures&&t.bindTextures(),this._bind(t),this.addVertexNumbers&&this._setVertexNumbers(),ht.lastMesh=this;let i=this._cgl.gl.TRIANGLES;void 0!==this._glPrimitive&&(i=this._glPrimitive),null!==t.glPrimitive&&(i=t.glPrimitive);let s=1,r=this._cgl.profileData.doProfileGlQuery,n=!1;if(r){let e=this._name+" "+t.getName()+" #"+t.id;this._numInstances&&(e+=" instanced "+this._numInstances+"x");let i=this._cgl.profileData.glQueryData[e];if(i||(i={id:e,num:0},this._cgl.profileData.glQueryData[e]=i),this._queryExt||!1===this._queryExt||(this._queryExt=this._cgl.gl.getExtension("EXT_disjoint_timer_query_webgl2")||!1),this._queryExt){if(i._drawQuery){if(this._cgl.gl.getQueryParameter(i._drawQuery,this._cgl.gl.QUERY_RESULT_AVAILABLE)){const t=this._cgl.gl.getQueryParameter(i._drawQuery,this._cgl.gl.QUERY_RESULT)/1e6;i._times+=t,i._numcount++,i.when=performance.now(),i._drawQuery=null,i.queryStarted=!1}}i.queryStarted||(i._drawQuery=this._cgl.gl.createQuery(),this._cgl.gl.beginQuery(this._queryExt.TIME_ELAPSED_EXT,i._drawQuery),n=i.queryStarted=!0)}}if(this.hasFeedbacks()?this.drawFeedbacks(t,i):0===this._bufVerticesIndizes.numItems?(i==this._cgl.gl.TRIANGLES&&(s=3),0===this._numInstances?this._cgl.gl.drawArrays(i,this._bufVertexAttrib.startItem,this._bufVertexAttrib.numItems-this._bufVertexAttrib.startItem):this._cgl.gl.drawArraysInstanced(i,this._bufVertexAttrib.startItem,this._bufVertexAttrib.numItems,this._numInstances)):0===this._numInstances?this._cgl.gl.drawElements(i,this._bufVerticesIndizes.numItems,this._indexType,0):this._cgl.gl.drawElementsInstanced(i,this._bufVerticesIndizes.numItems,this._indexType,0,this._numInstances),this._cgl.debugOneFrame&&this._cgl.gl.getError()!=this._cgl.gl.NO_ERROR){this._log.error("mesh draw gl error"),this._log.error("mesh",this),this._log.error("shader",t);for(let e=0;e<this._cgl.gl.getProgramParameter(t.getProgram(),this._cgl.gl.ACTIVE_ATTRIBUTES);e++){const i=this._cgl.gl.getActiveAttrib(t.getProgram(),e).name;this._log.error("attrib ",i)}}this._cgl.profileData.profileMeshNumElements+=this._bufVertexAttrib.numItems/s*(this._numInstances||1),this._cgl.profileData.profileMeshDraw++,r&&n&&this._cgl.gl.endQuery(this._queryExt.TIME_ELAPSED_EXT),this.unBind()},at.prototype.setNumInstances=function(t){if(t=Math.max(0,t),this._numInstances!=t){this._numInstances=t;const e=new Float32Array(t);for(let i=0;i<t;i++)e[i]=i;this.setAttribute("instanceIndex",e,1,{instanced:!0})}},at.prototype._disposeAttributes=function(){if(this._attributes){for(let t=0;t<this._attributes.length;t++)this._attributes[t].buffer&&(this._cgl.gl.deleteBuffer(this._attributes[t].buffer),this._attributes[t].buffer=null);this._attributes.length=0}},at.prototype.dispose=function(){this._bufVertexAttrib&&this._bufVertexAttrib.buffer&&this._cgl.gl.deleteBuffer(this._bufVertexAttrib.buffer),this._bufVerticesIndizes&&this._cgl.gl.deleteBuffer(this._bufVerticesIndizes),this._bufVerticesIndizes=null,this._disposeAttributes()},function(t){t.prototype.hasFeedbacks=function(){return this._feedBacks.length>0},t.prototype.removeFeedbacks=function(t){this._feedbacks&&(this._feedbacks.length=0,this._feedBacksChanged=!0)},t.prototype.setAttributeFeedback=function(){},t.prototype.setFeedback=function(t,e,i){let s={nameOut:e},r=!1;this.unBindFeedbacks();for(let t=0;t<this._feedBacks.length;t++)this._feedBacks[t].nameOut==e&&(s=this._feedBacks[t],r=!0);return r||(this._feedBacksChanged=!0),s.initialArr=i,s.attrib=t,s.outBuffer&&this._cgl.gl.deleteBuffer(s.outBuffer),s.outBuffer=this._cgl.gl.createBuffer(),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,s.outBuffer),this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,s.initialArr,this._cgl.gl.STATIC_DRAW),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,s.attrib.buffer),this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,s.initialArr,this._cgl.gl.STATIC_DRAW),r||this._feedBacks.push(s),s},t.prototype.bindFeedback=function(t){if(!this._feedBacks||0===this._feedBacks.length)return;-1==this._transformFeedBackLoc&&(this._transformFeedBackLoc=this._cgl.gl.createTransformFeedback()),this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,this._transformFeedBackLoc);let e=!1;for(let i=0;i<this._feedBacks.length;i++){const s=this._feedBacks[i];s.attrib==t&&(e=!0,this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER,i,s.outBuffer))}},t.prototype.drawFeedbacks=function(t,e){let i=0;if(this._feedBacksChanged){const e=[];for(this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,this._transformFeedBackLoc),i=0;i<this._feedBacks.length;i++)e.push(this._feedBacks[i].nameOut);return t.setFeedbackNames(e),console.log("feedbacknames",e),t.compile(),this._feedBacksChanged=!1,this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,null),void console.log("changed finished")}this._cgl.gl.beginTransformFeedback(this.glPrimitive),this._cgl.gl.drawArrays(e,0,this._feedBacks[0].attrib.numItems),this._cgl.gl.endTransformFeedback(),this.unBindFeedbacks(),this.feedBacksSwapBuffers()},t.prototype.unBindFeedbacks=function(){for(let t=0;t<this._feedBacks.length;t++)this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER,t,null);this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,null)},t.prototype.feedBacksSwapBuffers=function(){for(let t=0;t<this._feedBacks.length;t++){const e=this._feedBacks[t].attrib.buffer;this._feedBacks[t].attrib.buffer=this._feedBacks[t].outBuffer,this._feedBacks[t].outBuffer=e}}}(at);const lt={getSimpleRect:function(t,e){const i=new Y(e);return i.vertices=[1,1,0,-1,1,0,1,-1,0,-1,-1,0],i.texCoords=[1,1,0,1,1,0,0,0],i.verticesIndices=[0,1,2,2,1,3],i.vertexNormals=[0,0,0,0,0,0,0,0,0,0,0,0],new at(t,i)}},ct=function(t,e){this._cgl=t,this._log=new h("cgl_TextureEffect"),t.TextureEffectMesh||this.createMesh(),this._textureSource=null,this._options=e,this.imgCompVer=0,this.aspectRatio=1,this._textureTarget=null,this._frameBuf=this._cgl.gl.createFramebuffer(),this._frameBuf2=this._cgl.gl.createFramebuffer(),this._renderbuffer=this._cgl.gl.createRenderbuffer(),this._renderbuffer2=this._cgl.gl.createRenderbuffer(),this.switched=!1,this.depth=!1};ct.prototype.getWidth=function(){return this._textureSource.width},ct.prototype.getHeight=function(){return this._textureSource.height},ct.prototype.setSourceTexture=function(t){t.textureType==L.TYPE_FLOAT&&this._cgl.gl.getExtension("EXT_color_buffer_float"),null===t?(this._textureSource=new L(this._cgl),this._textureSource.setSize(16,16)):this._textureSource=t,this._textureSource.compareSettings(this._textureTarget)||(this._textureTarget&&this._textureTarget.delete(),this._textureTarget=this._textureSource.clone(),this._cgl.profileData.profileEffectBuffercreate++,this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._renderbuffer),this.depth&&this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.DEPTH_COMPONENT16,this._textureSource.width,this._textureSource.height),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.TEXTURE_2D,this._textureTarget.tex,0),this.depth&&this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._renderbuffer),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf2),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._renderbuffer2),this.depth&&this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.DEPTH_COMPONENT16,this._textureSource.width,this._textureSource.height),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.TEXTURE_2D,this._textureSource.tex,0),this.depth&&this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._renderbuffer2),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null)),this.aspectRatio=this._textureSource.width/this._textureSource.height},ct.prototype.continueEffect=function(){this._cgl.pushDepthTest(!1),this._cgl.pushModelMatrix(),this._cgl.pushPMatrix(),this._cgl.gl.viewport(0,0,this.getCurrentTargetTexture().width,this.getCurrentTargetTexture().height),mat4.perspective(this._cgl.pMatrix,45,this.getCurrentTargetTexture().width/this.getCurrentTargetTexture().height,.1,1100),this._cgl.pushPMatrix(),mat4.identity(this._cgl.pMatrix),this._cgl.pushViewMatrix(),mat4.identity(this._cgl.vMatrix),this._cgl.pushModelMatrix(),mat4.identity(this._cgl.mvMatrix)},ct.prototype.startEffect=function(t){this._textureTarget?(this.switched=!1,this.continueEffect(),t&&(this._bgTex=t),this._countEffects=0):this._log.warn("effect has no target")},ct.prototype.endEffect=function(){this._cgl.popDepthTest(),this._cgl.popModelMatrix(),this._cgl.popPMatrix(),this._cgl.popModelMatrix(),this._cgl.popViewMatrix(),this._cgl.popPMatrix(),this._cgl.resetViewPort()},ct.prototype.bind=function(){null!==this._textureSource?this.switched?(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf2),this._cgl.pushGlFrameBuffer(this._frameBuf2)):(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf),this._cgl.pushGlFrameBuffer(this._frameBuf)):this._log.warn("no base texture set!")},ct.prototype.finish=function(){null!==this._textureSource?(this._cgl.TextureEffectMesh.render(this._cgl.getShader()),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.popGlFrameBuffer()),this._cgl.profileData.profileTextureEffect++,this._textureTarget.filter==L.FILTER_MIPMAP&&(this.switched?(this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,this._textureSource.tex),this._textureSource.updateMipMap()):(this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,this._textureTarget.tex),this._textureTarget.updateMipMap()),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null)),this.switched=!this.switched,this._countEffects++):this._log.warn("no base texture set!")},ct.prototype.getCurrentTargetTexture=function(){return this.switched?this._textureSource:this._textureTarget},ct.prototype.getCurrentSourceTexture=function(){return 0==this._countEffects&&this._bgTex?this._bgTex:this.switched?this._textureTarget:this._textureSource},ct.prototype.delete=function(){this._textureTarget&&this._textureTarget.delete(),this._textureSource&&this._textureSource.delete(),this._cgl.gl.deleteRenderbuffer(this._renderbuffer),this._cgl.gl.deleteFramebuffer(this._frameBuf)},ct.prototype.createMesh=function(){this._cgl.TextureEffectMesh=lt.getSimpleRect(this._cgl,"texEffectRect")},ct.checkOpNotInTextureEffect=function(t){return t.uiAttribs.error&&!t.patch.cgl.currentTextureEffect?(t.setUiError("textureeffect",null),!0):!t.patch.cgl.currentTextureEffect||(t.patch.cgl.currentTextureEffect&&!t.uiAttribs.error?(t.setUiError("textureeffect","This op can not be a child of a ImageCompose/texture effect! imagecompose should only have textureeffect childs.",0),!1):!t.patch.cgl.currentTextureEffect)},ct.checkOpInEffect=function(t,e){if(e=e||0,t.patch.cgl.currentTextureEffect){if(t.uiAttribs.uierrors&&t.patch.cgl.currentTextureEffect.imgCompVer>=e)return t.setUiError("texeffect",null),!0;e&&t.patch.cgl.currentTextureEffect.imgCompVer<e&&t.setUiError("texeffect","This op must be a child of an ImageCompose op with version >="+e+' <span class="button-small" onclick="gui.patchView.downGradeOp(\''+t.id+"','"+t.name+"')\">Downgrade</span> to previous version",1)}return!!t.patch.cgl.currentTextureEffect||(t.patch.cgl.currentTextureEffect||t.uiAttribs.uierrors&&0!=t.uiAttribs.uierrors.length?!!t.patch.cgl.currentTextureEffect:(t.setUiError("texeffect",'This op must be a child of an ImageCompose op! More infos <a href="https://docs.cables.gl/image_composition/image_composition.html" target="_blank">here</a>. ',1),!1))},ct.getBlendCode=function(t){let e="".endl()+"vec3 _blend(vec3 base,vec3 blend)".endl()+"{".endl()+"   vec3 colNew=blend;".endl()+"   #ifdef BM_MULTIPLY".endl()+"       colNew=base*blend;".endl()+"   #endif".endl()+"   #ifdef BM_MULTIPLY_INV".endl()+"       colNew=base* vec3(1.0)-blend;".endl()+"   #endif".endl()+"   #ifdef BM_AVERAGE".endl()+"       colNew=((base + blend) / 2.0);".endl()+"   #endif".endl()+"   #ifdef BM_ADD".endl()+"       colNew=min(base + blend, vec3(1.0));".endl()+"   #endif".endl()+"   #ifdef BM_SUBTRACT_ONE".endl()+"       colNew=max(base + blend - vec3(1.0), vec3(0.0));".endl()+"   #endif".endl()+"   #ifdef BM_SUBTRACT".endl()+"       colNew=base - blend;".endl()+"   #endif".endl()+"   #ifdef BM_DIFFERENCE".endl()+"       colNew=abs(base - blend);".endl()+"   #endif".endl()+"   #ifdef BM_NEGATION".endl()+"       colNew=(vec3(1.0) - abs(vec3(1.0) - base - blend));".endl()+"   #endif".endl()+"   #ifdef BM_EXCLUSION".endl()+"       colNew=(base + blend - 2.0 * base * blend);".endl()+"   #endif".endl()+"   #ifdef BM_LIGHTEN".endl()+"       colNew=max(blend, base);".endl()+"   #endif".endl()+"   #ifdef BM_DARKEN".endl()+"       colNew=min(blend, base);".endl()+"   #endif".endl()+"   #ifdef BM_OVERLAY".endl()+"      #define BlendOverlayf(base, blend)  (base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)))".endl()+"      colNew=vec3(BlendOverlayf(base.r, blend.r),BlendOverlayf(base.g, blend.g),BlendOverlayf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_SCREEN".endl()+"      #define BlendScreenf(base, blend)       (1.0 - ((1.0 - base) * (1.0 - blend)))".endl()+"      colNew=vec3(BlendScreenf(base.r, blend.r),BlendScreenf(base.g, blend.g),BlendScreenf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_SOFTLIGHT".endl()+"      #define BlendSoftLightf(base, blend)    ((blend < 0.5) ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend)) : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend)))".endl()+"      colNew=vec3(BlendSoftLightf(base.r, blend.r),BlendSoftLightf(base.g, blend.g),BlendSoftLightf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_HARDLIGHT".endl()+"      #define BlendOverlayf(base, blend)  (base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)))".endl()+"      colNew=vec3(BlendOverlayf(base.r, blend.r),BlendOverlayf(base.g, blend.g),BlendOverlayf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_COLORDODGE".endl()+"      #define BlendColorDodgef(base, blend)   ((blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0))".endl()+"      colNew=vec3(BlendColorDodgef(base.r, blend.r),BlendColorDodgef(base.g, blend.g),BlendColorDodgef(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_COLORBURN".endl()+"      #define BlendColorBurnf(base, blend)    ((blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0))".endl()+"      colNew=vec3(BlendColorBurnf(base.r, blend.r),BlendColorBurnf(base.g, blend.g),BlendColorBurnf(base.b, blend.b));".endl()+"   #endif".endl()+"   return colNew;".endl()+"}".endl();return t||(e+="vec4 cgl_blend(vec4 oldColor,vec4 newColor,float amount)".endl()+"{".endl()+"vec4 col=vec4( _blend(oldColor.rgb,newColor.rgb) ,1.0);".endl()+"col=vec4( mix( col.rgb, oldColor.rgb ,1.0-oldColor.a*amount),1.0);".endl()+"return col;".endl()+"}".endl()),t>=3&&(e+="vec4 cgl_blendPixel(vec4 base,vec4 col,float amount)".endl()+"{".endl()+"vec3 colNew=_blend(base.rgb,col.rgb);".endl()+"float newA=clamp(base.a+(col.a*amount),0.,1.);".endl()+"#ifdef BM_ALPHAMASKED".endl()+"newA=base.a;".endl()+"#endif".endl()+"return vec4(".endl()+"mix(colNew,base.rgb,1.0-(amount*col.a)),".endl()+"newA);".endl()+"}".endl()),e},ct.onChangeBlendSelect=function(t,e,i){t.toggleDefine("BM_NORMAL","normal"==e),t.toggleDefine("BM_MULTIPLY","multiply"==e),t.toggleDefine("BM_MULTIPLY_INV","multiply invert"==e),t.toggleDefine("BM_AVERAGE","average"==e),t.toggleDefine("BM_ADD","add"==e),t.toggleDefine("BM_SUBTRACT_ONE","subtract one"==e),t.toggleDefine("BM_SUBTRACT","subtract"==e),t.toggleDefine("BM_DIFFERENCE","difference"==e),t.toggleDefine("BM_NEGATION","negation"==e),t.toggleDefine("BM_EXCLUSION","exclusion"==e),t.toggleDefine("BM_LIGHTEN","lighten"==e),t.toggleDefine("BM_DARKEN","darken"==e),t.toggleDefine("BM_OVERLAY","overlay"==e),t.toggleDefine("BM_SCREEN","screen"==e),t.toggleDefine("BM_SOFTLIGHT","softlight"==e),t.toggleDefine("BM_HARDLIGHT","hardlight"==e),t.toggleDefine("BM_COLORDODGE","color dodge"==e),t.toggleDefine("BM_COLORBURN","color burn"==e),t.toggleDefine("BM_ALPHAMASKED",i)},ct.AddBlendSelect=function(t,e,i){return t.inValueSelect(e||"Blend Mode",["normal","lighten","darken","multiply","multiply invert","average","add","subtract","difference","negation","exclusion","overlay","screen","color dodge","color burn","softlight","hardlight","subtract one"],i||"normal")},ct.AddBlendAlphaMask=function(t,e,i){return t.inSwitch(e||"Alpha Mask",["Off","On"],i||"Off")},ct.setupBlending=function(t,e,i,s,r){const n=()=>{let s=!1;r&&(s="On"==r.get()),ct.onChangeBlendSelect(e,i.get(),s);let n=i.get();"normal"==n?n=null:"multiply"==n?n="mul":"multiply invert"==n?n="mulinv":"lighten"==n?n="light":"darken"==n?n="darken":"average"==n?n="avg":"subtract one"==n?n="sub one":"subtract"==n?n="sub":"difference"==n?n="diff":"negation"==n||"negation"==n||"negation"==n?n="neg":"exclusion"==n?n="exc":"overlay"==n?n="ovl":"color dodge"==n?n="dodge":"color burn"==n?n="burn":"softlight"==n?n="soft":"hardlight"==n&&(n="hard"),t.setUiAttrib({extendTitle:n})};t.setPortGroup("Blending",[i,s,r]);let o=!1;i.onChange=n,r&&(r.onChange=n,o="On"==r.get()),ct.onChangeBlendSelect(e,i.get(),o)};const ut={"CGL.BLENDMODES":function(){this.name="blendmodes",this.srcHeadFrag=ct.getBlendCode()},"CGL.BLENDMODES3":function(){this.name="blendmodes3",this.srcHeadFrag=ct.getBlendCode(3)},"CGL.LUMINANCE":function(){this.name="luminance",this.srcHeadFrag="".endl()+"float cgl_luminance(vec3 c)".endl()+"{".endl()+"    return dot(vec3(0.2126,0.7152,0.0722),c);".endl()+"}".endl()},"CGL.RANDOM_OLD":function(){this.name="randomNumber",this.srcHeadFrag="".endl()+"float cgl_random(vec2 co)".endl()+"{".endl()+"    return fract(sin(dot(co.xy ,vec2(12.9898,4.1414))) * 432758.5453);".endl()+"}".endl()+"vec3 cgl_random3(vec2 co)".endl()+"{".endl()+"    return vec3( cgl_random(co),cgl_random(co+0.5711),cgl_random(co+1.5711));".endl()+"}"},"CGL.RANDOM_LOW":function(){this.name="randomNumber",this.srcHeadFrag="".endl()+"float cgl_random(vec2 co)".endl()+"{".endl()+"    return fract(sin(dot(co.xy ,vec2(12.9898,4.1414))) * 358.5453);".endl()+"}".endl()+"vec3 cgl_random3(vec2 co)".endl()+"{".endl()+"    return vec3( cgl_random(co),cgl_random(co+0.5711),cgl_random(co+1.5711));".endl()+"}"},"CGL.RANDOM_TEX":function(){this.name="randomNumbertex",this.srcHeadFrag="".endl()+"UNI sampler2D CGLRNDTEX;".endl()+"float cgl_random(vec2 co)".endl()+"{".endl()+"    return texture(CGLRNDTEX,co*5711.0).r;".endl()+"}".endl()+"vec3 cgl_random3(vec2 co)".endl()+"{".endl()+"    return texture(CGLRNDTEX,co*5711.0).rgb;".endl()+"}",this.initUniforms=function(t){return[new rt(t,"t","CGLRNDTEX",7)]},this.onBind=function(t,e){L.getRandomTexture(t),t.setTexture(7,L.getRandomTexture(t).tex)}}},gt=function(){return window.performance.now()},_t=function(){return gt()},pt=function(){CABLES.EventTarget.apply(this),this._timeStart=gt(),this._timeOffset=0,this._currentTime=0,this._lastTime=0,this._paused=!0,this._delay=0,this._eventsPaused=!1,this.overwriteTime=-1,this.cbPlayPause=[],this.cbTimeChange=[]};pt.prototype._getTime=function(){return this._lastTime=(gt()-this._timeStart)/1e3,this._lastTime+this._timeOffset},pt.prototype._eventPlayPause=function(){if(this.emitEvent("playPause"),!this._eventsPaused)for(const t in this.cbPlayPause)this.cbPlayPause[t]()},pt.prototype._eventTimeChange=function(){if(!this._eventsPaused)for(const t in this.cbTimeChange)this.cbTimeChange[t]()},pt.prototype.setDelay=function(t){this._delay=t,this._eventTimeChange()},pt.prototype.isPlaying=function(){return!this._paused},pt.prototype.update=function(){if(!this._paused)return this._currentTime=this._getTime(),this._currentTime},pt.prototype.getMillis=function(){return 1e3*this.get()},pt.prototype.get=pt.prototype.getTime=function(){return this.overwriteTime>=0?this.overwriteTime-this._delay:this._currentTime-this._delay},pt.prototype.togglePlay=function(){this._paused?this.play():this.pause()},pt.prototype.setTime=function(t){t<0&&(t=0),this._timeStart=gt(),this._timeOffset=t,this._currentTime=t,this._eventTimeChange()},pt.prototype.setOffset=function(t){this._currentTime+t<0?(this._timeStart=gt(),this._timeOffset=0,this._currentTime=0):(this._timeOffset+=t,this._currentTime=this._lastTime+this._timeOffset),this._eventTimeChange()},pt.prototype.play=function(){this._timeStart=gt(),this._paused=!1,this._eventPlayPause()},pt.prototype.pause=function(){this._timeOffset=this._currentTime,this._paused=!0,this._eventPlayPause()},pt.prototype.pauseEvents=function(t){this._eventsPaused=t},pt.prototype.onPlayPause=function(t){t&&"function"==typeof t&&this.cbPlayPause.push(t)},pt.prototype.onTimeChange=function(t){t&&"function"==typeof t&&this.cbTimeChange.push(t)};const dt=Math.PI/180,ft=(Math.PI,-1!=window.navigator.userAgent.indexOf("Windows")),mt=function(t){let e;if(t.wheelDelta)e=t.wheelDelta%120-0==-0?t.wheelDelta/120:t.wheelDelta/30,e*=-1.5,ft&&(e*=2);else{let i=t.deltaY;t.shiftKey&&(i=t.deltaX);const s=i||t.detail;e=-(s%3?10*s:s/3),e*=-3}return e>20&&(e=20),e<-20&&(e=-20),e},Et=mt,Tt=mt,At={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},bt=/[&<>"']/g,yt=RegExp(bt.source);const vt=function(t,e){if(!t)throw new Error("shader constructed without cgl "+e);this._log=new h("cgl_shader"),this._cgl=t,e||this._log.stack("no shader name given"),this._name=e||"unknown",this.glslVersion=0,t.glVersion>1&&(this.glslVersion=300),this.id=y(),this._isValid=!0,this._program=null,this._uniforms=[],this._drawBuffers=[!0],this._defines=[],this._needsRecompile=!0,this._compileReason="initial",this._projMatrixUniform=null,this._mvMatrixUniform=null,this._mMatrixUniform=null,this._vMatrixUniform=null,this._camPosUniform=null,this._normalMatrixUniform=null,this._inverseViewMatrixUniform=null,this._attrVertexPos=-1,this.precision=t.patch.config.glslPrecision||"highp",this._pMatrixState=-1,this._vMatrixState=-1,this._modGroupCount=0,this._feedBackNames=[],this._attributes=[],this.glPrimitive=null,this.offScreenPass=!1,this._extensions=[],this.srcVert=this.getDefaultVertexShader(),this.srcFrag=this.getDefaultFragmentShader(),this.lastCompile=0,this._moduleNames=[],this._modules=[],this._moduleNumId=0,this._libs=[],this._structNames=[],this._structUniformNames=[],this._textureStackUni=[],this._textureStackTex=[],this._textureStackType=[],this._textureStackTexCgl=[],this._tempNormalMatrix=mat4.create(),this._tempCamPosMatrix=mat4.create(),this._tempInverseViewMatrix=mat4.create(),this.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"])};vt.prototype.isValid=function(){return this._isValid},vt.prototype.getCgl=function(){return this._cgl},vt.prototype.getName=function(){return this._name},vt.prototype.enableExtension=function(t){this.setWhyCompile("enable extension "+t),this._needsRecompile=!0,this._extensions.push(t)},vt.prototype.getAttrVertexPos=function(){return this._attrVertexPos},vt.prototype.hasTextureUniforms=function(){for(let t=0;t<this._uniforms.length;t++)if("t"==this._uniforms[t].getType())return!0;return!1},vt.prototype.setWhyCompile=function(t){this._compileReason=t},vt.prototype.copyUniformValues=function(t){for(let e=0;e<t._uniforms.length;e++)this._uniforms[e]?(-1!=t._uniforms[e].getName().indexOf("pathPoints")&&console.log("copyUniformValues",t._uniforms[e].getName(),t._uniforms[e].getValue()),this.getUniform(t._uniforms[e].getName()).set(t._uniforms[e].getValue())):this._log.log("unknown uniform?!");this.popTextures();for(let e=0;e<t._textureStackUni.length;e++)this._textureStackUni[e]=t._textureStackUni[e],this._textureStackTex[e]=t._textureStackTex[e],this._textureStackType[e]=t._textureStackType[e],this._textureStackTexCgl[e]=t._textureStackTexCgl[e]},vt.prototype.copy=function(){const t=new vt(this._cgl,this._name+" copy");t.setSource(this.srcVert,this.srcFrag),t._modules=JSON.parse(JSON.stringify(this._modules)),t._defines=JSON.parse(JSON.stringify(this._defines)),t._modGroupCount=this._modGroupCount,t._moduleNames=this._moduleNames,t.glPrimitive=this.glPrimitive,t.offScreenPass=this.offScreenPass,t._extensions=this._extensions,t.wireframe=this.wireframe;for(let e=0;e<this._uniforms.length;e++){this._uniforms[e].copy(t).resetLoc()}return this.setWhyCompile("copy"),t._needsRecompile=!0,t},vt.prototype.setSource=function(t,e){this.srcVert=t,this.srcFrag=e,this.setWhyCompile("Source changed"),this._needsRecompile=!0},vt.prototype._addLibs=function(t){for(const e in ut)if(t.indexOf(e)>-1){const i=new ut[e];t=t.replace("{{"+e+"}}",i.srcHeadFrag),this._libs.push(i),i.initUniforms&&i.initUniforms(this)}return t},vt.prototype.createStructUniforms=function(){let t="",e="";this._structNames=[],this._injectedStringsFrag={},this._injectedStringsVert={},this._structUniformNamesIndicesFrag=[],this._structUniformNamesIndicesVert=[];for(let i=0;i<this._uniforms.length;i++)if(this._uniforms[i].isStructMember()){const s="{{INJECTION_POINT_STRUCT_"+this._uniforms[i]._structName+"}}";if(-1===this._structNames.indexOf(this._uniforms[i]._structName)){const r="struct "+this._uniforms[i]._structName+" {".endl()+s+"};".endl().endl();"both"!==this._uniforms[i].getShaderType()&&"frag"!==this._uniforms[i].getShaderType()||(t=t.concat(r)),"both"!==this._uniforms[i].getShaderType()&&"vert"!==this._uniforms[i].getShaderType()||(e=e.concat(r)),this._structNames.push(this._uniforms[i]._structName),this._injectedStringsFrag[this._uniforms[i]._structName]=[],this._injectedStringsVert[this._uniforms[i]._structName]=[]}let r="";this._uniforms[i].comment&&(r=" // "+this._uniforms[i].comment);let n="";if(null==this._uniforms[i].getGlslTypeString()&&(n+="//"),n+="  "+this._uniforms[i].getGlslTypeString()+" "+this._uniforms[i]._propertyName+";"+r,"both"===this._uniforms[i].getShaderType()){if(-1===this._injectedStringsFrag[this._uniforms[i]._structName].indexOf(n)&&-1===this._injectedStringsVert[this._uniforms[i]._structName].indexOf(n)){const r=t.lastIndexOf(s),o=e.lastIndexOf(s);t=t.slice(0,r)+n+t.slice(r-1),e=e.slice(0,o)+n+e.slice(o-1),this._injectedStringsFrag[this._uniforms[i]._structName].push(n),this._injectedStringsVert[this._uniforms[i]._structName].push(n)}-1===this._structUniformNamesIndicesFrag.indexOf(i)&&this._structUniformNamesIndicesFrag.push(i),-1===this._structUniformNamesIndicesVert.indexOf(i)&&this._structUniformNamesIndicesVert.push(i)}else if("frag"===this._uniforms[i].getShaderType()){if(-1===this._injectedStringsFrag[this._uniforms[i]._structName].indexOf(n)){const e=t.lastIndexOf(s);t=t.slice(0,e)+n+t.slice(e-1),this._injectedStringsFrag[this._uniforms[i]._structName].push(n)}-1===this._structUniformNamesIndicesFrag.indexOf(i)&&this._structUniformNamesIndicesFrag.push(i)}else if("vert"===this._uniforms[i].getShaderType()){if(-1===this._injectedStringsVert[this._uniforms[i]._structName].indexOf(n)){const t=e.lastIndexOf(s);e=e.slice(0,t)+n+e.slice(t-1),this._injectedStringsVert[this._uniforms[i]._structName].push(n)}-1===this._structUniformNamesIndicesVert.indexOf(i)&&this._structUniformNamesIndicesVert.push(i)}}this._uniDeclarationsFrag=[],this._uniDeclarationsVert=[];for(let e=0;e<this._structUniformNamesIndicesFrag.length;e+=1){const i=this._structUniformNamesIndicesFrag[e],s="UNI "+this._uniforms[i]._structName+" "+this._uniforms[i]._structUniformName+";".endl();if(-1===this._uniDeclarationsFrag.indexOf(s)){const e="{{INJECTION_POINT_STRUCT_"+this._uniforms[i]._structName+"}}";t=t.replace(e,""),t+=s,this._uniDeclarationsFrag.push(s)}}for(let t=0;t<this._structUniformNamesIndicesVert.length;t+=1){const i=this._structUniformNamesIndicesVert[t],s="UNI "+this._uniforms[i]._structName+" "+this._uniforms[i]._structUniformName+";".endl();if(-1===this._uniDeclarationsVert.indexOf(s)){const t="{{INJECTION_POINT_STRUCT_"+this._uniforms[i]._structName+"}}";e=e.replace(t,""),e+=s,this._uniDeclarationsVert.push(s)}}return[e,t]},vt.prototype.compile=function(){const t=performance.now();this._cgl.profileData.profileShaderCompiles++,this._cgl.profileData.profileShaderCompileName=this._name+" ["+this._compileReason+"]";let e="";if(this._extensions)for(let t=0;t<this._extensions.length;t++)e+="#extension "+this._extensions[t]+" : enable".endl();let i="";this._defines.length&&(i="\n// cgl generated".endl());for(let t=0;t<this._defines.length;t++)i+="#define "+this._defines[t][0]+" "+this._defines[t][1]+"".endl();const s=this.createStructUniforms();if(this._cgl.profileData.addHeavyEvent("shader compile",this._name+" ["+this._compileReason+"]"),this._compileReason="",this._uniforms){const t=this._uniforms.map(t=>t._name),e=[];for(let i=0;i<this._uniforms.length;i++){const s=this._uniforms[i];t.indexOf(s._name,i+1)>-1&&e.push(i)}for(let t=this._uniforms.length-1;t>=0;t-=1)e.indexOf(t)>-1?this._uniforms.splice(t,1):this._uniforms[t].resetLoc()}this._cgl.printError("uniform resets"),this.hasTextureUniforms()&&(i+="#define HAS_TEXTURES".endl());let r="",n="";if(this.srcFrag||(this._log.error("[cgl shader] has no fragment source!"),this.srcVert=this.getDefaultVertexShader(),this.srcFrag=this.getDefaultFragmentShader()),300==this.glslVersion){let t="";if(this.srcFrag.indexOf("outColor0")>-1&&(this._drawBuffers[0]=!0),this.srcFrag.indexOf("outColor1")>-1&&(this._drawBuffers[1]=!0),this.srcFrag.indexOf("outColor2")>-1&&(this._drawBuffers[2]=!0),this.srcFrag.indexOf("outColor3")>-1&&(this._drawBuffers[3]=!0),1==this._drawBuffers.length)t="out vec4 outColor;".endl(),t+="#define gl_FragColor outColor".endl();else{let e=0;t+="#define MULTI_COLORTARGETS".endl(),t+="vec4 outColor;".endl();for(let i=0;i<this._drawBuffers.length;i++)0==e&&(t+="#define gl_FragColor outColor"+i+"".endl()),t+="layout(location = "+i+") out vec4 outColor"+i+";".endl(),e++}r="#version 300 es".endl()+"// ".endl()+"// vertex shader "+this._name.endl()+"// ".endl()+"precision "+this.precision+" float;".endl()+"precision "+this.precision+" sampler2D;".endl()+"".endl()+"#define WEBGL2".endl()+"#define texture2D texture".endl()+"#define UNI uniform".endl()+"#define IN in".endl()+"#define OUT out".endl(),n="#version 300 es".endl()+"// ".endl()+"// fragment shader "+this._name.endl()+"// ".endl()+"precision "+this.precision+" float;".endl()+"precision "+this.precision+" sampler2D;".endl()+"".endl()+"#define WEBGL2".endl()+"#define texture2D texture".endl()+"#define IN in".endl()+"#define UNI uniform".endl()+t.endl()}else n="".endl()+"// ".endl()+"// fragment shader "+this._name.endl()+"// ".endl()+"#define WEBGL1".endl()+"#define texture texture2D".endl()+"#define outColor gl_FragColor".endl()+"#define IN varying".endl()+"#define UNI uniform".endl(),r="".endl()+"// ".endl()+"// vertex shader "+this._name.endl()+"// ".endl()+"#define WEBGL1".endl()+"#define texture texture2D".endl()+"#define OUT varying".endl()+"#define IN attribute".endl()+"#define UNI uniform".endl();let o="\n// cgl generated".endl(),h="\n// cgl generated".endl();n+="\n// active mods: --------------- ",r+="\n// active mods: --------------- ";let a=!1,l=!1;for(let t=0;t<this._moduleNames.length;t++)for(let e=0;e<this._modules.length;e++)this._modules[e].name==this._moduleNames[t]&&((this._modules[e].srcBodyFrag||this._modules[e].srcHeadFrag)&&(a=!0,n+="\n// "+t+"."+e+". "+this._modules[e].title+" ("+this._modules[e].name+")"),(this._modules[e].srcBodyVert||this._modules[e].srcHeadVert)&&(r+="\n// "+t+"."+e+". "+this._modules[e].title+" ("+this._modules[e].name+")",l=!0));l||(n+="\n// no mods used..."),a||(n+="\n// no mods used..."),n+="\n",r+="\n";for(let t=0;t<this._uniforms.length;t++)if(this._uniforms[t].shaderType&&!this._uniforms[t].isStructMember()){let e="";this._uniforms[t].getGlslTypeString()||(e+="// "),e+="UNI "+this._uniforms[t].getGlslTypeString()+" "+this._uniforms[t].getName();let i="";this._uniforms[t].comment&&(i=" // "+this._uniforms[t].comment),"vert"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||-1==this.srcVert.indexOf(e)&&-1==this.srcVert.indexOf("uniform "+this._uniforms[t].getGlslTypeString()+" "+this._uniforms[t].getName())&&(o+=e+";"+i.endl()),"frag"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||-1==this.srcFrag.indexOf(e)&&-1==this.srcFrag.indexOf("uniform "+this._uniforms[t].getGlslTypeString()+" "+this._uniforms[t].getName())&&(h+=e+";"+i.endl())}let c=0,u=0;for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].shaderType&&!this._uniforms[t].isStructMember()&&("vert"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||u++,"frag"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||c++);c>=this._cgl.maxUniformsFrag&&this._log.warn("[cgl_shader] num uniforms frag: "+c+" / "+this._cgl.maxUniformsFrag),u>=this._cgl.maxUniformsVert&&this._log.warn("[cgl_shader] num uniforms vert: "+u+" / "+this._cgl.maxUniformsVert),-1==n.indexOf("precision")&&(n="precision "+this.precision+" float;".endl()+n),-1==r.indexOf("precision")&&(r="precision "+this.precision+" float;".endl()+r),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(n+="#define MOBILE".endl(),r+="#define MOBILE".endl()),r=e+r+i+s[0]+o+"\n// -- \n"+this.srcVert,n=e+n+i+s[1]+h+"\n// -- \n"+this.srcFrag;let g="",_="";this._modules.sort((function(t,e){return t.group-e.group})),this._modules.sort((function(t,e){return t.priority||0-e.priority||0}));let p=!1;for(let t=0;t<this._moduleNames.length;t++){let e="",i="";for(let s=0;s<this._modules.length;s++)if(this._modules[s].name==this._moduleNames[t]){if(g+="\n//---- MOD: group:"+this._modules[s].group+": idx:"+s+" - prfx:"+this._modules[s].prefix+" - "+this._modules[s].title+" ------\n",_+="\n//---- MOD: group:"+this._modules[s].group+": idx:"+s+" - prfx:"+this._modules[s].prefix+" - "+this._modules[s].title+" ------\n",e+="\n\n//---- MOD: "+this._modules[s].title+" / "+this._modules[s].priority+" ------\n",i+="\n\n//---- MOD: "+this._modules[s].title+" / "+this._modules[s].priority+" ------\n",!p){p=!0;for(let t=0;t<this._attributes.length;t++)this._attributes[t].name&&this._attributes[t].type&&(g+="".endl()+"#ifndef ATTRIB_"+this._attributes[t].name.endl()+"  #define ATTRIB_"+this._attributes[t].name.endl()+"  IN "+this._attributes[t].type+" "+this._attributes[t].name+";".endl()+"#endif",this._attributes[t].nameFrag&&(g+="".endl()+"#ifndef ATTRIB_"+this._attributes[t].nameFrag.endl()+"  #define ATTRIB_"+this._attributes[t].nameFrag.endl()+"  OUT "+this._attributes[t].type+" "+this._attributes[t].nameFrag+";".endl()+"#endif",e+="".endl()+this._attributes[t].nameFrag+"="+this._attributes[t].name+";"),_+="".endl()+"#ifndef ATTRIB_"+this._attributes[t].nameFrag.endl()+"  #define ATTRIB_"+this._attributes[t].nameFrag.endl()+"  IN "+this._attributes[t].type+" "+this._attributes[t].nameFrag+";".endl()+"#endif")}g+=this._modules[s].srcHeadVert||"",_+=this._modules[s].srcHeadFrag||"",e+=this._modules[s].srcBodyVert||"",i+=this._modules[s].srcBodyFrag||"",g+="\n//---- end mod ------\n",_+="\n//---- end mod ------\n",e+="\n//---- end mod ------\n",i+="\n//---- end mod ------\n",e=e.replace(/{{mod}}/g,this._modules[s].prefix),i=i.replace(/{{mod}}/g,this._modules[s].prefix),g=g.replace(/{{mod}}/g,this._modules[s].prefix),_=_.replace(/{{mod}}/g,this._modules[s].prefix),e=e.replace(/MOD_/g,this._modules[s].prefix),i=i.replace(/MOD_/g,this._modules[s].prefix),g=g.replace(/MOD_/g,this._modules[s].prefix),_=_.replace(/MOD_/g,this._modules[s].prefix)}r=r.replace("{{"+this._moduleNames[t]+"}}",e),n=n.replace("{{"+this._moduleNames[t]+"}}",i)}if(r=r.replace("{{MODULES_HEAD}}",g),n=n.replace("{{MODULES_HEAD}}",_),r=this._addLibs(r),n=this._addLibs(n),this._program){this._program=this._createProgram(r,n),this._projMatrixUniform=null;for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].resetLoc()}else this._program=this._createProgram(r,n);this.finalShaderFrag=n,this.finalShaderVert=r,ht.lastMesh=null,ht.lastShader=null,this._needsRecompile=!1,this.lastCompile=_t(),this._cgl.profileData.shaderCompileTime+=performance.now()-t},vt.hasChanged=function(){return this._needsRecompile},vt.prototype.bind=function(){if(this._isValid&&(ht.lastShader=this,this._program&&!this._needsRecompile||this.compile(),this._isValid)){if(!this._projMatrixUniform){this._attrVertexPos=this._cgl.glGetAttribLocation(this._program,ot.SHADER.SHADERVAR_VERTEX_POSITION),this._projMatrixUniform=this._cgl.gl.getUniformLocation(this._program,ot.SHADER.SHADERVAR_UNI_PROJMAT),this._mvMatrixUniform=this._cgl.gl.getUniformLocation(this._program,"mvMatrix"),this._vMatrixUniform=this._cgl.gl.getUniformLocation(this._program,ot.SHADER.SHADERVAR_UNI_VIEWMAT),this._mMatrixUniform=this._cgl.gl.getUniformLocation(this._program,ot.SHADER.SHADERVAR_UNI_MODELMAT),this._camPosUniform=this._cgl.gl.getUniformLocation(this._program,ot.SHADER.SHADERVAR_UNI_VIEWPOS),this._normalMatrixUniform=this._cgl.gl.getUniformLocation(this._program,ot.SHADER.SHADERVAR_UNI_NORMALMAT),this._inverseViewMatrixUniform=this._cgl.gl.getUniformLocation(this._program,ot.SHADER.SHADERVAR_UNI_INVVIEWMAT);for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].needsUpdate=!0}this._cgl.currentProgram!=this._program&&(this._cgl.profileData.profileShaderBinds++,this._cgl.gl.useProgram(this._program),this._cgl.currentProgram=this._program);for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].needsUpdate&&this._uniforms[t].updateValue();if(this._pMatrixState!=this._cgl.getProjectionMatrixStateCount()&&(this._pMatrixState=this._cgl.getProjectionMatrixStateCount(),this._cgl.gl.uniformMatrix4fv(this._projMatrixUniform,!1,this._cgl.pMatrix),this._cgl.profileData.profileMVPMatrixCount++),this._vMatrixUniform)this._vMatrixState!=this._cgl.getViewMatrixStateCount()&&(this._cgl.gl.uniformMatrix4fv(this._vMatrixUniform,!1,this._cgl.vMatrix),this._cgl.profileData.profileMVPMatrixCount++,this._vMatrixState=this._cgl.getViewMatrixStateCount(),this._inverseViewMatrixUniform&&(mat4.invert(this._tempInverseViewMatrix,this._cgl.vMatrix),this._cgl.gl.uniformMatrix4fv(this._inverseViewMatrixUniform,!1,this._tempInverseViewMatrix),this._cgl.profileData.profileMVPMatrixCount++)),this._cgl.gl.uniformMatrix4fv(this._mMatrixUniform,!1,this._cgl.mMatrix),this._cgl.profileData.profileMVPMatrixCount++,this._camPosUniform&&(mat4.invert(this._tempCamPosMatrix,this._cgl.vMatrix),this._cgl.gl.uniform3f(this._camPosUniform,this._tempCamPosMatrix[12],this._tempCamPosMatrix[13],this._tempCamPosMatrix[14]),this._cgl.profileData.profileMVPMatrixCount++);else{const t=mat4.create();mat4.mul(t,this._cgl.vMatrix,this._cgl.mMatrix),this._cgl.gl.uniformMatrix4fv(this._mvMatrixUniform,!1,t),this._cgl.profileData.profileMVPMatrixCount++}this._normalMatrixUniform&&(mat4.invert(this._tempNormalMatrix,this._cgl.mMatrix),mat4.transpose(this._tempNormalMatrix,this._tempNormalMatrix),this._cgl.gl.uniformMatrix4fv(this._normalMatrixUniform,!1,this._tempNormalMatrix),this._cgl.profileData.profileMVPMatrixCount++);for(let t=0;t<this._libs.length;t++)this._libs[t].onBind&&this._libs[t].onBind.bind(this._libs[t])(this._cgl,this);this._bindTextures()}},vt.prototype.toggleDefine=function(t,e){e&&"object"==typeof e&&e.addEventListener&&(e.changeListener&&e.removeEventListener(e.changeListener),e.onToggleDefine=e=>{this.toggleDefine(t,e)},e.changeListener=e.on("change",e.onToggleDefine),e=e.get()),e?this.define(t):this.removeDefine(t)},vt.prototype.define=function(t,e){null==e&&(e=""),"object"==typeof e&&(e.removeEventListener("change",e.onDefineChange),e.onDefineChange=e=>{this.define(t,e)},e.on("change",e.onDefineChange),e=e.get());for(let i=0;i<this._defines.length;i++){if(this._defines[i][0]==t&&this._defines[i][1]==e)return;if(this._defines[i][0]==t)return this._defines[i][1]=e,this.setWhyCompile("define "+t+" "+e),void(this._needsRecompile=!0)}this.setWhyCompile("define "+t+" "+e),this._needsRecompile=!0,this._defines.push([t,e])},vt.prototype.getDefines=function(){return this._defines},vt.prototype.getDefine=function(t){for(let e=0;e<this._defines.length;e++)if(this._defines[e][0]==t)return this._defines[e][1];return null},vt.prototype.hasDefine=function(t){for(let e=0;e<this._defines.length;e++)if(this._defines[e][0]==t)return!0},vt.prototype.removeDefine=function(t){for(let e=0;e<this._defines.length;e++)if(this._defines[e][0]==t)return this._defines.splice(e,1),this._needsRecompile=!0,void this.setWhyCompile("define removed:"+t)},vt.prototype.removeModule=function(t){for(let e=0;e<this._modules.length;e++)if(t&&t.id&&(this._modules[e].id==t.id||!this._modules[e])){let i=!0;for(;i;){i=!1;for(let e=0;e<this._uniforms.length;e++)0!=this._uniforms[e].getName().indexOf(t.prefix)||(this._uniforms.splice(e,1),i=!0)}this._needsRecompile=!0,this.setWhyCompile("remove module "+t.title),this._modules.splice(e,1);break}},vt.prototype.getNumModules=function(){return this._modules.length},vt.prototype.getCurrentModules=function(){return this._modules},vt.prototype.addModule=function(t,e){return t.id||(t.id=A()),t.numId||(t.numId=this._moduleNumId),t.num||(t.num=this._modules.length),e&&!e.group&&(e.group=y()),t.group||(t.group=e?e.group:y()),t.prefix="mod"+t.group+"_",this._modules.push(t),this._needsRecompile=!0,this.setWhyCompile("add module "+t.title),this._moduleNumId++,t},vt.prototype.hasModule=function(t){for(let e=0;e<this._modules.length;e++)if(this._modules[e].id==t)return!0;return!1},vt.prototype.setModules=function(t){this._moduleNames=t},vt.prototype.dispose=function(){this._cgl.gl.deleteProgram(this._program)},vt.prototype.needsRecompile=function(){return this._needsRecompile},vt.prototype.setDrawBuffers=function(t){if(this._drawBuffers.length!==t.length)return this._drawBuffers=t,this._needsRecompile=!0,void this.setWhyCompile("setDrawBuffers");for(let e=0;e<t;e++)if(t[e]!==this._drawBuffers[e])return this._drawBuffers=t,this._needsRecompile=!0,void this.setWhyCompile("setDrawBuffers")},vt.prototype.getUniforms=function(){return this._uniforms},vt.prototype.getUniform=function(t){for(let e=0;e<this._uniforms.length;e++)if(this._uniforms[e].getName()==t)return this._uniforms[e];return null},vt.prototype.removeUniform=function(t){for(let e=0;e<this._uniforms.length;e++)this._uniforms[e].getName()==t&&this._uniforms.splice(e,1);this._needsRecompile=!0,this.setWhyCompile("remove uniform "+t)},vt.prototype._addUniform=function(t){this._uniforms.push(t),this.setWhyCompile("add uniform "+name),this._needsRecompile=!0},vt.prototype.addUniformFrag=function(t,e,i,s,r,n){const o=new CGL.Uniform(this,t,e,i,s,r,n);return o.shaderType="frag",o},vt.prototype.addUniformVert=function(t,e,i,s,r,n){const o=new CGL.Uniform(this,t,e,i,s,r,n);return o.shaderType="vert",o},vt.prototype.addUniformBoth=function(t,e,i,s,r,n){const o=new CGL.Uniform(this,t,e,i,s,r,n);return o.shaderType="both",o},vt.prototype.addUniformStructFrag=function(t,e,i){const s={};if(!i)return s;for(let r=0;r<i.length;r+=1){const n=i[r];if(!this.hasUniform(e+"."+n.name)){const i=new CGL.Uniform(this,n.type,e+"."+n.name,n.v1,n.v2,n.v3,n.v4,e,t,n.name);i.shaderType="frag",s[e+"."+n.name]=i}}return s},vt.prototype.addUniformStructVert=function(t,e,i){const s={};if(!i)return s;for(let r=0;r<i.length;r+=1){const n=i[r];if(!this.hasUniform(e+"."+n.name)){const i=new CGL.Uniform(this,n.type,e+"."+n.name,n.v1,n.v2,n.v3,n.v4,e,t,n.name);i.shaderType="vert",s[e+"."+n.name]=i}}return s},vt.prototype.addUniformStructBoth=function(t,e,i){const s={};if(!i)return s;for(let r=0;r<i.length;r+=1){const n=i[r];if("2i"!==n.type&&"i"!==n.type&&"3i"!==n.type||this._log.error("Adding an integer struct member to both shaders can potentially error. Please use different structs for each shader. Error occured in struct:",t," with member:",n.name," of type:",n.type,"."),!this.hasUniform(e+"."+n.name)){const i=new CGL.Uniform(this,n.type,e+"."+n.name,n.v1,n.v2,n.v3,n.v4,e,t,n.name);i.shaderType="both",s[e+"."+n.name]=i}}return s},vt.prototype.hasUniform=function(t){for(let e=0;e<this._uniforms.length;e++)if(this._uniforms[e].getName()==t)return!0;return!1},vt.prototype._createProgram=function(t,e){this._cgl.printError("before _createprogram");const i=this._cgl.gl.createProgram();return this.vshader=vt.createShader(this._cgl,t,this._cgl.gl.VERTEX_SHADER,this),this.fshader=vt.createShader(this._cgl,e,this._cgl.gl.FRAGMENT_SHADER,this),this._cgl.gl.attachShader(i,this.vshader),this._cgl.gl.attachShader(i,this.fshader),this._linkProgram(i,t,e),this._cgl.printError("shader _createProgram"),i},vt.prototype.hasErrors=function(){return this._hasErrors},vt.prototype._linkProgram=function(t,e,i){this._cgl.printError("before _linkprogram"),this._feedBackNames.length>0&&this._cgl.gl.transformFeedbackVaryings(t,this._feedBackNames,this._cgl.gl.SEPARATE_ATTRIBS),this._cgl.gl.linkProgram(t),this._cgl.printError("gl.linkprogram"),this._isValid=!0,this._hasErrors=!1,!1!==this._cgl.patch.config.glValidateShader&&(this._cgl.gl.validateProgram(t),this._cgl.gl.getProgramParameter(t,this._cgl.gl.VALIDATE_STATUS)||(console.log("shaderprogram validation failed..."),console.log(this._name+" programinfo: ",this._cgl.gl.getProgramInfoLog(t))),this._cgl.gl.getProgramParameter(t,this._cgl.gl.LINK_STATUS)||(this._hasErrors=!0,this._log.warn(this._cgl.gl.getShaderInfoLog(this.fshader)||"empty shader infolog"),this._log.warn(this._cgl.gl.getShaderInfoLog(this.vshader)||"empty shader infolog"),this._log.error(this._name+" shader linking fail..."),console.log(this._name+" programinfo: ",this._cgl.gl.getProgramInfoLog(t)),console.log("--------------------------------------"),console.log(this),console.log("--------------------------------------"),this._isValid=!1,this._name="errorshader",this.setSource(vt.getDefaultVertexShader(),vt.getErrorFragmentShader()),this._cgl.printError("shader link err")))},vt.prototype.getProgram=function(){return this._program},vt.prototype.setFeedbackNames=function(t){this.setWhyCompile("setFeedbackNames"),this._needsRecompile=!0,this._feedBackNames=t},vt.prototype.getDefaultVertexShader=vt.getDefaultVertexShader=function(){return"{{MODULES_HEAD}}\nIN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN vec3 attrVertNormal;\nIN vec3 attrTangent,attrBiTangent;\n\nIN float attrVertIndex;\n\nOUT vec2 texCoord;\nOUT vec3 norm;\nUNI mat4 projMatrix;\nUNI mat4 viewMatrix;\nUNI mat4 modelMatrix;\n\nvoid main()\n{\n    texCoord=attrTexCoord;\n    norm=attrVertNormal;\n    vec4 pos=vec4(vPosition,  1.0);\n    vec3 tangent=attrTangent;\n    vec3 bitangent=attrBiTangent;\n    mat4 mMatrix=modelMatrix;\n    {{MODULE_VERTEX_POSITION}}\n    gl_Position = projMatrix * (viewMatrix*mMatrix) * pos;\n}\n"},vt.prototype.getDefaultFragmentShader=vt.getDefaultFragmentShader=function(t,e,i){return null==t&&(t=.5,e=.5,i=.5),"".endl()+"IN vec2 texCoord;".endl()+"{{MODULES_HEAD}}".endl()+"void main()".endl()+"{".endl()+"    vec4 col=vec4("+t+","+e+","+i+",1.0);".endl()+"    {{MODULE_COLOR}}".endl()+"    outColor = col;".endl()+"}"},vt.prototype.addAttribute=function(t){for(let e=0;e<this._attributes.length;e++)if(this._attributes[e].name==t.name&&this._attributes[e].nameFrag==t.nameFrag)return;this._attributes.push(t),this._needsRecompile=!0,this.setWhyCompile("addAttribute")},vt.prototype.bindTextures=vt.prototype._bindTextures=function(){this._textureStackTex.length>this._cgl.maxTextureUnits&&this._log.warn("[shader._bindTextures] too many textures bound",this._textureStackTex.length+"/"+this._cgl.maxTextureUnits);for(let t=0;t<this._textureStackTex.length;t++)if(this._textureStackTex[t]||this._textureStackTexCgl[t]){let e=this._textureStackTex[t];this._textureStackTexCgl[t]&&(e=this._textureStackTexCgl[t].tex||CGL.Texture.getEmptyTexture(this._cgl).tex);let i=!0;this._textureStackUni[t]?(this._textureStackUni[t].setValue(t),i=this._cgl.setTexture(t,e,this._textureStackType[t])):(this._log.warn("no uniform for pushtexture",this._name),i=this._cgl.setTexture(t,e,this._textureStackType[t])),i||this._log.warn("tex bind failed",this.getName(),this._textureStackUni[t])}else this._log.warn("no texture for pushtexture",this._name)},vt.prototype.setUniformTexture=function(t,e){for(let i=0;i<this._textureStackTex.length;i++)if(this._textureStackUni[i]==t){const t=this._textureStackTex[i];return this._textureStackTex[i]=e,t}return null},vt.prototype.pushTexture=function(t,e,i){if(!t)throw new Error("no uniform given to texturestack");if(e){if(!(e.hasOwnProperty("tex")||e instanceof WebGLTexture))return this._log.warn(new Error("invalid texture").stack),void this._log.warn("[cgl_shader] invalid texture...",e);this._textureStackUni.push(t),e.hasOwnProperty("tex")?(this._textureStackTexCgl.push(e),this._textureStackTex.push(null)):(this._textureStackTexCgl.push(null),this._textureStackTex.push(e)),this._textureStackType.push(i)}},vt.prototype.popTexture=function(){this._textureStackUni.pop(),this._textureStackTex.pop(),this._textureStackType.pop()},vt.prototype.popTextures=function(){this._textureStackTex.length=this._textureStackTexCgl.length=this._textureStackType.length=this._textureStackUni.length=0},vt.prototype.getInfo=function(){const t={};return t.name=this._name,t.defines=this.getDefines(),t.hasErrors=this.hasErrors(),t},vt.getErrorFragmentShader=function(){return"".endl()+"void main()".endl()+"{".endl()+"   float g=mod((gl_FragCoord.y+gl_FragCoord.x),50.0)/50.0;".endl()+"   g= step(0.1,g);".endl()+"   outColor = vec4( g+0.5, 0.0, 0.0, 1.0);".endl()+"}"},vt.createShader=function(t,e,i,s){if(t.aborted)return;const r=t.gl.createShader(i);if(t.gl.shaderSource(r,e),t.gl.compileShader(r),!t.gl.getShaderParameter(r,t.gl.COMPILE_STATUS)){console.log("compile status: "),i==t.gl.VERTEX_SHADER&&console.log("VERTEX_SHADER"),i==t.gl.FRAGMENT_SHADER&&console.log("FRAGMENT_SHADER");let o=t.gl.getShaderInfoLog(r)||"empty shader info log";const h=function(t){const e=[],i=t.split("\n");for(const t in i){const s=i[t].split(":");parseInt(s[2],10)&&e.push(parseInt(s[2],10))}return e}(o);let a='<div class="shaderErrorCode">';const l=e.match(/^.*((\r\n|\n|\r)|$)/gm);for(const t in l){const e=parseInt(t,10)+1,i=e+": "+l[t];console.log(i);let s=!1;for(const t in h)h[t]==e&&(s=!0);s&&(a+='<span class="error">'),a+=(n=i)&&yt.test(n)?n.replace(bt,(function(t){return At[t]})):n||"",s&&(a+="</span>")}console.warn(o),o=o.replace(/\n/g,"<br/>"),a=o+"<br/>"+a+"<br/><br/>",a+="</div>",t.patch.emitEvent("criticalError","Shader error "+this._name,a),t.patch.isEditorMode()&&console.log("Shader error "+this._name,a),this._name="errorshader",s.setSource(vt.getDefaultVertexShader(),vt.getErrorFragmentShader())}var n;return r};const xt=function(){this._arr=[mat4.create()],this._index=0,this.stateCounter=0};xt.prototype.push=function(t){if(this._index++,this.stateCounter++,this._index==this._arr.length){const t=mat4.create();this._arr.push(t)}return mat4.copy(this._arr[this._index],t||this._arr[this._index-1]),this._arr[this._index]},xt.prototype.pop=function(){return this.stateCounter++,this._index--,this._index<0&&(this._index=0),this._arr[this._index]},xt.prototype.length=function(){return this._index};class It{constructor(t){this._cgl=t,this._lastTime=0,this.pause=!1,this.profileUniformCount=0,this.profileShaderBinds=0,this.profileUniformCount=0,this.profileShaderCompiles=0,this.profileVideosPlaying=0,this.profileMVPMatrixCount=0,this.profileEffectBuffercreate=0,this.profileShaderGetUniform=0,this.profileFrameBuffercreate=0,this.profileMeshSetGeom=0,this.profileTextureNew=0,this.profileGenMipMap=0,this.profileOnAnimFrameOps=0,this.profileMainloopMs=0,this.profileMeshDraw=0,this.profileTextureEffect=0,this.profileTexPreviews=0,this.shaderCompileTime=0,this.profileMeshNumElements=0,this.profileMeshAttributes=0,this.profileSingleMeshAttribute=[],this.heavyEvents=[],this.doProfileGlQuery=!1,this.glQueryData={}}clear(){this.profileSingleMeshAttribute={},this.profileMeshAttributes=0,this.profileUniformCount=0,this.profileShaderGetUniform=0,this.profileShaderCompiles=0,this.profileShaderBinds=0,this.profileTextureResize=0,this.profileFrameBuffercreate=0,this.profileEffectBuffercreate=0,this.profileTextureDelete=0,this.profileMeshSetGeom=0,this.profileVideosPlaying=0,this.profileMVPMatrixCount=0,this.profileNonTypedAttrib=0,this.profileNonTypedAttribNames="",this.profileTextureNew=0,this.profileGenMipMap=0,this.profileFramebuffer=0,this.profileMeshDraw=0,this.profileTextureEffect=0,this.profileTexPreviews=0,this.profileMeshNumElements=0}clearGlQuery(){for(let t in this.glQueryData)(!this.glQueryData[t].lastClear||performance.now()-this.glQueryData[t].lastClear>1e3)&&(this.glQueryData[t].time=this.glQueryData[t]._times/this.glQueryData[t]._numcount,this.glQueryData[t].num=this.glQueryData[t]._numcount,this.glQueryData[t]._times=0,this.glQueryData[t]._numcount=0,this.glQueryData[t].lastClear=performance.now())}addHeavyEvent(t,e,i){const s={event:t,name:e,info:i,date:performance.now()};this.heavyEvents.push(s),this._cgl.emitEvent("heavyEvent",s)}}const Ot=function(t){W.apply(this),this.profileData=new It(this),this._log=new h("cgl_context");const e=[0,0,0,0];this.glVersion=0,this.glUseHalfFloatTex=!1,this.clearCanvasTransparent=!0,this.clearCanvasDepth=!0,this.patch=t,this.debugOneFrame=!1,this.checkGlErrors=!0,this.maxTextureUnits=0,this.maxVaryingVectors=0,this.currentProgram=null,this._hadStackError=!1,this.glSlowRenderer=!1,this._isSafariCrap=!1,this.temporaryTexture=null,this.frameStore={},this._onetimeCallbacks=[],this.gl=null,this._cursor="auto",this._currentCursor="",this.pMatrix=mat4.create(),this.mMatrix=mat4.create(),this.vMatrix=mat4.create(),this._textureslots=[],this._pMatrixStack=new xt,this._mMatrixStack=new xt,this._vMatrixStack=new xt,this._glFrameBufferStack=[],this._frameBufferStack=[],this._shaderStack=[],this._stackDepthTest=[],Object.defineProperty(this,"mvMatrix",{get(){return this.mMatrix},set(t){this.mMatrix=t}}),this.canvas=null,this.pixelDensity=1,mat4.identity(this.mMatrix),mat4.identity(this.vMatrix);const i=new vt(this,"simpleshader");i.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]),i.setSource(vt.getDefaultVertexShader(),vt.getDefaultFragmentShader());let s=i;this.aborted=!1;const r=[];this.exitError=function(t,e){this.patch.exitError(t,e),this.aborted=!0},this.setCanvas=function(t){if(this.canvas="string"==typeof t?document.getElementById(t):t,this.patch.config.canvas||(this.patch.config.canvas={}),this.patch.config.canvas.hasOwnProperty("preserveDrawingBuffer")||(this.patch.config.canvas.preserveDrawingBuffer=!1),this.patch.config.canvas.hasOwnProperty("premultipliedAlpha")||(this.patch.config.canvas.premultipliedAlpha=!1),this.patch.config.canvas.hasOwnProperty("alpha")||(this.patch.config.canvas.alpha=!1),this.patch.config.hasOwnProperty("clearCanvasColor")&&(this.clearCanvasTransparent=this.patch.config.clearCanvasColor),this.patch.config.hasOwnProperty("clearCanvasDepth")&&(this.clearCanvasDepth=this.patch.config.clearCanvasDepth),/^((?!chrome|android).)*safari/i.test(navigator.userAgent)&&(this._isSafariCrap=!0),this.patch.config.canvas.forceWebGl1||(this.gl=this.canvas.getContext("webgl2",this.patch.config.canvas)),this.gl&&"WebGL 1.0"!=this.gl.getParameter(this.gl.VERSION)?this.glVersion=2:(this.gl=this.canvas.getContext("webgl",this.patch.config.canvas)||this.canvas.getContext("experimental-webgl",this.patch.config.canvas),this.glVersion=1,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)&&navigator.userAgent.match(/iPhone/i)&&(this.glUseHalfFloatTex=!0),/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream&&(this.patch.config.canvas.hasOwnProperty("powerPreference")||(this.patch.config.canvas.powerPreference="high-performance"))),!this.gl)return void this.exitError("NO_WEBGL","sorry, could not initialize WebGL. Please check if your Browser supports WebGL or try to restart your browser.");const e=this.gl.getExtension("WEBGL_debug_renderer_info");e&&(this.glRenderer=this.gl.getParameter(e.UNMASKED_RENDERER_WEBGL),"Google SwiftShader"===this.glRenderer&&(this.glSlowRenderer=!0)),this.gl.getExtension("OES_standard_derivatives");const i=this.gl.getExtension("ANGLE_instanced_arrays")||this.gl;this.canvas.addEventListener("webglcontextlost",t=>{this._log.error("canvas lost...",t),this.emitEvent("webglcontextlost"),this.aborted=!0}),this.maxVaryingVectors=this.gl.getParameter(this.gl.MAX_VARYING_VECTORS),this.maxTextureUnits=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.maxTexSize=this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE),this.maxUniformsFrag=this.gl.getParameter(this.gl.MAX_FRAGMENT_UNIFORM_VECTORS),this.maxUniformsVert=this.gl.getParameter(this.gl.MAX_VERTEX_UNIFORM_VECTORS),this.maxSamples=0,this.gl.MAX_SAMPLES&&(this.maxSamples=this.gl.getParameter(this.gl.MAX_SAMPLES)),i.vertexAttribDivisorANGLE&&(this.gl.vertexAttribDivisor=i.vertexAttribDivisorANGLE.bind(i),this.gl.drawElementsInstanced=i.drawElementsInstancedANGLE.bind(i)),this.updateSize()},this.getInfo=function(){return{glVersion:this.glVersion,glRenderer:this.glRenderer,glUseHalfFloatTex:this.glUseHalfFloatTex,maxVaryingVectors:this.maxVaryingVectors,maxTextureUnits:this.maxTextureUnits,maxTexSize:this.maxTexSize,maxUniformsFrag:this.maxUniformsFrag,maxUniformsVert:this.maxUniformsVert,maxSamples:this.maxSamples}},this.updateSize=function(){this.canvas.width=this.canvasWidth=this.canvas.clientWidth*this.pixelDensity,this.canvas.height=this.canvasHeight=this.canvas.clientHeight*this.pixelDensity},this.canvasWidth=-1,this.canvasHeight=-1,this.canvasScale=1;let n=-1,o=-1;this.getViewPort=function(){return e},this.resetViewPort=function(){this.gl.viewport(e[0],e[1],e[2],e[3])},this.setViewPort=function(t,i,s,r){e[0]=Math.round(t),e[1]=Math.round(i),e[2]=Math.round(s),e[3]=Math.round(r),this.gl.viewport(e[0],e[1],e[2],e[3])},this.screenShot=function(t,e,i,s){e&&(this.gl.clearColor(1,1,1,1),this.gl.colorMask(!1,!1,!1,!0),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.colorMask(!0,!0,!0,!0)),this.canvas&&this.canvas.toBlob&&this.canvas.toBlob(e=>{t?t(e):this._log.log("no screenshot callback...")},i,s)},this.endFrame=function(){if(this.patch.isEditorMode()&&CABLES.GL_MARKER.drawMarkerLayer(this),this.setPreviousShader(),this._vMatrixStack.length()>0&&this.logStackError("view matrix stack length !=0 at end of rendering..."),this._mMatrixStack.length()>0&&this.logStackError("mvmatrix stack length !=0 at end of rendering..."),this._pMatrixStack.length()>0&&this.logStackError("pmatrix stack length !=0 at end of rendering..."),this._glFrameBufferStack.length>0&&this.logStackError("glFrameBuffer stack length !=0 at end of rendering..."),this._stackDepthTest.length>0&&this.logStackError("depthtest stack length !=0 at end of rendering..."),this._stackDepthWrite.length>0&&this.logStackError("depthwrite stack length !=0 at end of rendering..."),this._stackDepthFunc.length>0&&this.logStackError("depthfunc stack length !=0 at end of rendering..."),this._stackBlend.length>0&&this.logStackError("blend stack length !=0 at end of rendering..."),this._stackBlendMode.length>0&&this.logStackError("blendMode stack length !=0 at end of rendering..."),this._shaderStack.length>0&&this.logStackError("this._shaderStack length !=0 at end of rendering..."),this._stackCullFace.length>0&&this.logStackError("this._stackCullFace length !=0 at end of rendering..."),this._stackCullFaceFacing.length>0&&this.logStackError("this._stackCullFaceFacing length !=0 at end of rendering..."),this._frameStarted=!1,n!=this.canvasWidth||o!=this.canvasHeight){n=this.canvasWidth,o=this.canvasHeight,this.setSize(this.canvasWidth/this.pixelDensity,this.canvasHeight/this.pixelDensity),this.updateSize();for(let t=0;t<r.length;t++)r[t]();this.emitEvent("resize")}this._cursor!=this._currentCursor&&(this._currentCursor=this.canvas.style.cursor=this._cursor)},this.logStackError=function(t){this._hadStackError||(this._hadStackError=!0,this._log.warn("["+this.canvas.id+"]: ",t))},this.getShader=function(){if(s&&(!this.frameStore||!0===this.frameStore.renderOffscreen==s.offScreenPass==!0))return s;for(let t=this._shaderStack.length-1;t>=0;t--)if(this._shaderStack[t]&&this.frameStore.renderOffscreen==this._shaderStack[t].offScreenPass)return this._shaderStack[t]},this.getDefaultShader=function(){return i},this.pushShader=this.setShader=function(t){this._shaderStack.push(t),s=t},this.popShader=this.setPreviousShader=function(){if(0===this._shaderStack.length)throw new Error("Invalid shader stack pop!");this._shaderStack.pop(),s=this._shaderStack[this._shaderStack.length-1]},this.pushGlFrameBuffer=function(t){this._glFrameBufferStack.push(t)},this.popGlFrameBuffer=function(){return 0==this._glFrameBufferStack.length?null:(this._glFrameBufferStack.pop(),this._glFrameBufferStack[this._glFrameBufferStack.length-1])},this.getCurrentGlFrameBuffer=function(){return 0===this._glFrameBufferStack.length?null:this._glFrameBufferStack[this._glFrameBufferStack.length-1]},this.pushFrameBuffer=function(t){this._frameBufferStack.push(t)},this.popFrameBuffer=function(){return 0==this._frameBufferStack.length?null:(this._frameBufferStack.pop(),this._frameBufferStack[this._frameBufferStack.length-1])},this.getCurrentFrameBuffer=function(){return 0===this._frameBufferStack.length?null:this._frameBufferStack[this._frameBufferStack.length-1]};const a=vec3.create();vec3.set(a,0,0,2);const l=vec3.create();vec3.set(l,0,0,0),this.renderStart=function(t,e,s){e||(e=l),s||(s=a),this.pushDepthTest(!0),this.pushDepthWrite(!0),this.pushDepthFunc(t.gl.LEQUAL),this.pushCullFaceFacing(t.gl.BACK),this.pushCullFace(!1),this.clearCanvasTransparent&&(t.gl.clearColor(0,0,0,0),t.gl.clear(t.gl.COLOR_BUFFER_BIT)),this.clearCanvasDepth&&t.gl.clear(t.gl.DEPTH_BUFFER_BIT),t.setViewPort(0,0,t.canvasWidth,t.canvasHeight),mat4.perspective(t.pMatrix,45,t.canvasWidth/t.canvasHeight,.1,1e3),mat4.identity(t.mMatrix),mat4.identity(t.vMatrix),mat4.translate(t.mMatrix,t.mMatrix,e),mat4.translate(t.vMatrix,t.vMatrix,s),t.pushPMatrix(),t.pushModelMatrix(),t.pushViewMatrix(),t.pushBlendMode(ot.BLEND_MODES.BLEND_NORMAL,!1);for(let t=0;t<this._textureslots.length;t++)this._textureslots[t]=null;if(this.pushShader(i),this._frameStarted=!0,this._onetimeCallbacks.length>0){for(let t=0;t<this._onetimeCallbacks.length;t++)this._onetimeCallbacks[t]();this._onetimeCallbacks.length=0}this.emitEvent("beginFrame")},this.renderEnd=function(t){t.popViewMatrix(),t.popModelMatrix(),t.popPMatrix(),this.popDepthTest(),this.popDepthWrite(),this.popDepthFunc(),this.popCullFaceFacing(),this.popCullFace(),this.popBlend(),this.popBlendMode(),t.endFrame(),this.emitEvent("endFrame")},this.getTexture=function(t){return this._textureslots[t]},this.checkFrameStarted=function(t){this._frameStarted||(this._log.warn("frame not started "+t),this.patch.printTriggerStack())},this.setTexture=function(t,e,i){return this.checkFrameStarted("cgl setTexture"),null===e&&(e=CGL.Texture.getEmptyTexture(this).tex),this._textureslots[t]!=e&&(this.gl.activeTexture(this.gl.TEXTURE0+t),this.gl.bindTexture(i||this.gl.TEXTURE_2D,e),this._textureslots[t]=e),!0},this.fullScreen=function(){this.canvas.requestFullscreen?this.canvas.requestFullscreen():this.canvas.mozRequestFullScreen?this.canvas.mozRequestFullScreen():this.canvas.webkitRequestFullscreen?this.canvas.webkitRequestFullscreen():this.canvas.msRequestFullscreen&&this.canvas.msRequestFullscreen()},this.setSize=function(t,e,i){i||(this.canvas.style.width=t+"px",this.canvas.style.height=e+"px"),this.canvas.width=t*this.pixelDensity,this.canvas.height=e*this.pixelDensity,this.updateSize()},this._resizeToWindowSize=function(){this.setSize(window.innerWidth,window.innerHeight),this.updateSize()},this._resizeToParentSize=function(){const t=this.canvas.parentElement;t?(this.setSize(t.clientWidth,t.clientHeight),this.updateSize()):this._log.error("cables: can not resize to container element")},this.setAutoResize=function(t){window.removeEventListener("resize",this._resizeToWindowSize.bind(this)),window.removeEventListener("resize",this._resizeToParentSize.bind(this)),"window"==t&&(window.addEventListener("resize",this._resizeToWindowSize.bind(this)),window.addEventListener("orientationchange",this._resizeToWindowSize.bind(this)),this._resizeToWindowSize()),"parent"==t&&(window.addEventListener("resize",this._resizeToParentSize.bind(this)),this._resizeToParentSize())},this.printError=function(t){if(!this.checkGlErrors)return;let e=!1,i=this.gl.getError();if(i!=this.gl.NO_ERROR){let s="";i==this.gl.OUT_OF_MEMORY&&(s="OUT_OF_MEMORY"),i==this.gl.INVALID_ENUM&&(s="INVALID_ENUM"),i==this.gl.INVALID_OPERATION&&(s="INVALID_OPERATION"),i==this.gl.INVALID_FRAMEBUFFER_OPERATION&&(s="INVALID_FRAMEBUFFER_OPERATION"),i==this.gl.INVALID_VALUE&&(s="INVALID_VALUE"),i==this.gl.CONTEXT_LOST_WEBGL&&(this.aborted=!0,s="CONTEXT_LOST_WEBGL"),i==this.gl.NO_ERROR&&(s="NO_ERROR"),e=!0,this._log.warn("gl error ["+this.canvas.id+"]: ",t,i,s),-1==this.canvas.id.indexOf("glGuiCanvas")&&(this._loggedGlError||(this.patch.printTriggerStack(),this._log.stack("glerror"),this._loggedGlError=!0))}return i=this.gl.getError(),e},this.saveScreenshot=function(t,e,i,s,r){this.patch.renderOneFrame();let n=this.canvas.clientWidth,o=this.canvas.clientHeight;function h(t,e,i){return Array(e-String(t).length+1).join(i||"0")+t}i&&(this.canvas.width=i,n=i),s&&(this.canvas.height=s,o=s);const a=new Date,l="".concat(String(a.getFullYear())+String(a.getMonth()+1)+String(a.getDate()),"_").concat(h(a.getHours(),2)).concat(h(a.getMinutes(),2)).concat(h(a.getSeconds(),2));t?t+=".png":t="cables_"+l+".png",this.patch.cgl.screenShot(function(i){if(this.canvas.width=n,this.canvas.height=o,i){const s=document.createElement("a");s.download=t,s.href=URL.createObjectURL(i),setTimeout((function(){s.click(),e&&e(i)}),100)}else this._log.log("screenshot: no blob")}.bind(this),r)}};Ot.prototype.addNextFrameOnceCallback=function(t){t&&this._onetimeCallbacks.push(t)},Ot.prototype.pushViewMatrix=function(){this.vMatrix=this._vMatrixStack.push(this.vMatrix)},Ot.prototype.popViewMatrix=function(){this.vMatrix=this._vMatrixStack.pop()},Ot.prototype.getViewMatrixStateCount=function(){return this._vMatrixStack.stateCounter},Ot.prototype.pushPMatrix=function(){this.pMatrix=this._pMatrixStack.push(this.pMatrix)},Ot.prototype.popPMatrix=function(){return this.pMatrix=this._pMatrixStack.pop(),this.pMatrix},Ot.prototype.getProjectionMatrixStateCount=function(){return this._pMatrixStack.stateCounter},Ot.prototype.pushMvMatrix=Ot.prototype.pushModelMatrix=function(){this.mMatrix=this._mMatrixStack.push(this.mMatrix)},Ot.prototype.popMvMatrix=Ot.prototype.popmMatrix=Ot.prototype.popModelMatrix=function(){return this.mMatrix=this._mMatrixStack.pop(),this.mMatrix},Ot.prototype.modelMatrix=function(){return this.mMatrix},Ot.prototype._stackDepthTest=[],Ot.prototype.pushDepthTest=function(t){this._stackDepthTest.push(t),t?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST)},Ot.prototype.stateDepthTest=function(){return this._stackDepthTest[this._stackDepthTest.length-1]},Ot.prototype.popDepthTest=function(){this._stackDepthTest.pop(),this._stackDepthTest[this._stackDepthTest.length-1]?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST)},Ot.prototype._stackDepthWrite=[],Ot.prototype.pushDepthWrite=function(t){t=t||!1,this._stackDepthWrite.push(t),this.gl.depthMask(t)},Ot.prototype.stateDepthWrite=function(){return this._stackDepthWrite[this._stackDepthWrite.length-1]},Ot.prototype.popDepthWrite=function(){this._stackDepthWrite.pop(),this.gl.depthMask(this._stackDepthWrite[this._stackDepthWrite.length-1]||!1)},Ot.prototype._stackCullFace=[],Ot.prototype.pushCullFace=function(t){this._stackCullFace.push(t),t?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE)},Ot.prototype.stateCullFace=function(){return this._stackCullFace[this._stackCullFace.length-1]},Ot.prototype.popCullFace=function(){this._stackCullFace.pop(),this._stackCullFace[this._stackCullFace.length-1]?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE)},Ot.prototype._stackCullFaceFacing=[],Ot.prototype.pushCullFaceFacing=function(t){this._stackCullFaceFacing.push(t),this.gl.cullFace(this._stackCullFaceFacing[this._stackCullFaceFacing.length-1])},Ot.prototype.stateCullFaceFacing=function(){return this._stackCullFaceFacing[this._stackCullFaceFacing.length-1]},Ot.prototype.popCullFaceFacing=function(){this._stackCullFaceFacing.pop(),this._stackCullFaceFacing.length>0&&this.gl.cullFace(this._stackCullFaceFacing[this._stackCullFaceFacing.length-1])},Ot.prototype._stackDepthFunc=[],Ot.prototype.pushDepthFunc=function(t){this._stackDepthFunc.push(t),this.gl.depthFunc(t)},Ot.prototype.stateDepthFunc=function(){return this._stackDepthFunc.length>0&&this._stackDepthFunc[this._stackDepthFunc.length-1]},Ot.prototype.popDepthFunc=function(){this._stackDepthFunc.pop(),this._stackDepthFunc.length>0&&this.gl.depthFunc(this._stackDepthFunc[this._stackDepthFunc.length-1])},Ot.prototype._stackBlend=[],Ot.prototype.pushBlend=function(t){this._stackBlend.push(t),t?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND)},Ot.prototype.popBlend=function(){this._stackBlend.pop(),this._stackBlend[this._stackBlend.length-1]?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND)},Ot.prototype.stateBlend=function(){return this._stackBlend[this._stackBlend.length-1]};Ot.prototype._stackBlendMode=[],Ot.prototype._stackBlendModePremul=[],Ot.prototype.pushBlendMode=function(t,e){this._stackBlendMode.push(t),this._stackBlendModePremul.push(e);const i=this._stackBlendMode.length-1;this.pushBlend(this._stackBlendMode[i]!==ot.BLEND_MODES.BLEND_NONE),this._setBlendMode(this._stackBlendMode[i],this._stackBlendModePremul[i])},Ot.prototype.popBlendMode=function(){this._stackBlendMode.pop(),this._stackBlendModePremul.pop();const t=this._stackBlendMode.length-1;this.popBlend(this._stackBlendMode[t]!==ot.BLEND_MODES.BLEND_NONE),t>=0&&this._setBlendMode(this._stackBlendMode[t],this._stackBlendModePremul[t])},Ot.prototype.glGetAttribLocation=function(t,e){return this.gl.getAttribLocation(t,e)},Ot.prototype.shouldDrawHelpers=function(t){return!this.frameStore.shadowPass&&(!!t.patch.isEditorMode()&&(CABLES.UI.renderHelper||CABLES.UI.renderHelperCurrent&&t.isCurrentUiOp()))},Ot.prototype._setBlendMode=function(t,e){const i=this.gl;t==ot.BLEND_MODES.BLEND_NONE||(t==ot.BLEND_MODES.BLEND_ADD?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ONE,i.ONE,i.ONE,i.ONE)):(i.blendEquation(i.FUNC_ADD),i.blendFunc(i.SRC_ALPHA,i.ONE)):t==ot.BLEND_MODES.BLEND_SUB?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ZERO,i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ONE_MINUS_SRC_ALPHA)):(i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ZERO,i.ONE_MINUS_SRC_COLOR)):t==ot.BLEND_MODES.BLEND_MUL?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA)):(i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ZERO,i.SRC_COLOR)):t==ot.BLEND_MODES.BLEND_NORMAL?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA)):(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA)):this._log.log("setblendmode: unknown blendmode"))},Ot.prototype.setCursor=function(t){this._cursor=t};const Rt=Object.assign({Framebuffer:function(t,e,i,s){const r=t;this._log=new h("Framebuffer");const n=r.gl.getExtension("WEBGL_depth_texture")||r.gl.getExtension("WEBKIT_WEBGL_depth_texture")||r.gl.getExtension("MOZ_WEBGL_depth_texture")||r.gl.DEPTH_TEXTURE;n||r.exitError("NO_DEPTH_TEXTURE","no depth texture support");let o=e||512,a=i||512;(s=s||{isFloatingPointTexture:!1}).hasOwnProperty("clear")||(s.clear=!0),s.hasOwnProperty("filter")||(s.filter=L.FILTER_LINEAR);const l=new L(r,{isFloatingPointTexture:s.isFloatingPointTexture,filter:s.filter,wrap:s.wrap||L.CLAMP_TO_EDGE});let c=null;n&&(c=new L(r,{isDepthTexture:!0})),this._options=s;const u=r.gl.createFramebuffer(),g=r.gl.createRenderbuffer();this.getWidth=function(){return o},this.getHeight=function(){return a},this.getGlFrameBuffer=function(){return u},this.getDepthRenderBuffer=function(){return g},this.getTextureColor=function(){return l},this.getTextureDepth=function(){return c},this.setFilter=function(t){l.filter=t,l.setSize(o,a)},this.setSize=function(t,e){if(t<2&&(t=2),e<2&&(e=2),o=Math.ceil(t),a=Math.ceil(e),r.profileData.profileFrameBuffercreate++,r.gl.bindFramebuffer(r.gl.FRAMEBUFFER,u),r.gl.bindRenderbuffer(r.gl.RENDERBUFFER,g),l.setSize(o,a),c&&c.setSize(o,a),n&&r.gl.renderbufferStorage(r.gl.RENDERBUFFER,r.gl.DEPTH_COMPONENT16,o,a),r.gl.framebufferTexture2D(r.gl.FRAMEBUFFER,r.gl.COLOR_ATTACHMENT0,r.gl.TEXTURE_2D,l.tex,0),n&&(r.gl.framebufferRenderbuffer(r.gl.FRAMEBUFFER,r.gl.DEPTH_ATTACHMENT,r.gl.RENDERBUFFER,g),r.gl.framebufferTexture2D(r.gl.FRAMEBUFFER,r.gl.DEPTH_ATTACHMENT,r.gl.TEXTURE_2D,c.tex,0)),!r.gl.isFramebuffer(u))throw new Error("Invalid framebuffer");const i=r.gl.checkFramebufferStatus(r.gl.FRAMEBUFFER);switch(i){case r.gl.FRAMEBUFFER_COMPLETE:break;case r.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_ATTACHMENT...",o,a,l.tex,g),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");case r.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");case r.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_DIMENSIONS"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");case r.gl.FRAMEBUFFER_UNSUPPORTED:throw this._log.warn("FRAMEBUFFER_UNSUPPORTED"),new Error("Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED");case 36059:this._log.warn("Incomplete: FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER from ext. Or Safari/iOS undefined behaviour.");break;default:throw this._log.warn("incomplete framebuffer",i),new Error("Incomplete framebuffer: "+i)}r.gl.bindTexture(r.gl.TEXTURE_2D,null),r.gl.bindRenderbuffer(r.gl.RENDERBUFFER,null),r.gl.bindFramebuffer(r.gl.FRAMEBUFFER,null)},this.renderStart=function(){r.pushModelMatrix(),r.gl.bindFramebuffer(r.gl.FRAMEBUFFER,u),r.pushGlFrameBuffer(u),r.pushFrameBuffer(this),r.pushPMatrix(),r.gl.viewport(0,0,o,a),this._options.clear&&(r.gl.clearColor(0,0,0,0),r.gl.clear(r.gl.COLOR_BUFFER_BIT|r.gl.DEPTH_BUFFER_BIT))},this.renderEnd=function(){r.popPMatrix(),r.gl.bindFramebuffer(r.gl.FRAMEBUFFER,r.popGlFrameBuffer()),r.popFrameBuffer(),r.popModelMatrix(),r.resetViewPort()},this.delete=function(){l.delete(),c&&c.delete(),r.gl.deleteRenderbuffer(g),r.gl.deleteFramebuffer(u)},this.setSize(o,a)},Framebuffer2:B,Geometry:Y,BoundingBox:z,Marker:function(t){const e=new Y("marker");e.setPointVertices([1e-5,0,0,1,0,0,0,1e-5,0,0,1,0,0,0,1e-5,0,0,1]);const i=new at(t,e,t.gl.LINES);i.setGeom(e);const s=new vt(t,"markermaterial"),r="".endl()+"precision highp float;".endl()+"IN vec3 axisColor;".endl()+"void main()".endl()+"{".endl()+"    vec4 col=vec4(axisColor,1.0);".endl()+"    outColor = col;".endl()+"}",n="".endl()+"IN vec3 vPosition;".endl()+"UNI mat4 projMatrix;".endl()+"UNI mat4 mvMatrix;".endl()+"OUT vec3 axisColor;".endl()+"void main()".endl()+"{".endl()+"   vec4 pos=vec4(vPosition, 1.0);".endl()+"   if(pos.x!=0.0)axisColor=vec3(1.0,0.3,0.0);".endl()+"   if(pos.y!=0.0)axisColor=vec3(0.0,1.0,0.2);".endl()+"   if(pos.z!=0.0)axisColor=vec3(0.0,0.5,1.0);".endl()+"   gl_Position = projMatrix * mvMatrix * pos;".endl()+"}";s.setSource(n,r),this._vScale=vec3.create(),this.draw=function(t,e,r){const n=e||2;t.pushModelMatrix(),t.pushShader(s),vec3.set(this._vScale,n,n,n),mat4.scale(t.mvMatrix,t.mvMatrix,this._vScale),t.pushDepthTest(1==r),i.render(t.getShader()),t.popDepthTest(),t.popShader(),t.popModelMatrix()}},WirePoint:function(t){const e=t.gl.createBuffer(),i=vec3.create();this.render=function(t,s){t.pushModelMatrix(),vec3.set(i,s,s,s),mat4.scale(t.mvMatrix,t.mvMatrix,i);const r=t.getShader();r&&(r.bind(),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.vertexAttribPointer(r.getAttrVertexPos(),e.itemSize,t.gl.FLOAT,!1,0,0),t.gl.enableVertexAttribArray(r.getAttrVertexPos()),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.drawArrays(t.gl.LINE_STRIP,0,e.numItems)),t.popModelMatrix()},function(){const i=[];let s=0,r=0;for(s=0;s<=Math.round(24);s++)r=360/Math.round(24)*s*dt,i.push(.5*Math.cos(r)),i.push(0),i.push(.5*Math.sin(r));for(s=0;s<=Math.round(24);s++)r=360/Math.round(24)*s*dt,i.push(.5*Math.cos(r)),i.push(.5*Math.sin(r)),i.push(0);for(s=0;s<=Math.round(24);s++)r=360/Math.round(24)*s*dt,i.push(0),i.push(.5*Math.cos(r)),i.push(.5*Math.sin(r));t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.bufferData(t.gl.ARRAY_BUFFER,new Float32Array(i),t.gl.STATIC_DRAW),e.itemSize=3,e.numItems=i.length/e.itemSize}()},WireCube:function(t){const e=t.gl.createBuffer(),i=vec3.create();this.render=function(t,s,r,n){t.pushModelMatrix(),vec3.set(i,s||1,r||1,n||1),mat4.scale(t.mvMatrix,t.mvMatrix,i);const o=t.getShader();o&&(o.bind(),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.vertexAttribPointer(o.getAttrVertexPos(),e.itemSize,t.gl.FLOAT,!1,0,0),t.gl.enableVertexAttribArray(o.getAttrVertexPos()),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.drawArrays(t.gl.LINE_STRIP,0,e.numItems)),t.popModelMatrix()},function(){const i=[];i.push(-1,-1,1),i.push(1,-1,1),i.push(1,1,1),i.push(-1,1,1),i.push(-1,-1,1),i.push(-1,-1,-1),i.push(1,-1,-1),i.push(1,1,-1),i.push(-1,1,-1),i.push(-1,-1,-1),i.push(-1,-1,-1),i.push(-1,1,-1),i.push(-1,1,1),i.push(-1,-1,1),i.push(-1,-1,-1),i.push(1,-1,-1),i.push(1,1,-1),i.push(1,1,1),i.push(1,-1,1),i.push(1,-1,-1),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.bufferData(t.gl.ARRAY_BUFFER,new Float32Array(i),t.gl.STATIC_DRAW),e.itemSize=3,e.numItems=i.length/e.itemSize}()},MatrixStack:xt,Mesh:at,MESH:ht,ShaderLibMods:ut,Shader:vt,Uniform:rt,MESHES:lt,Context:Ot,Texture:L,TextureEffect:ct,isWindows:ft,getWheelSpeed:Et,getWheelDelta:Tt,onLoadingAssetsFinished:null,profileData:void 0,UniColorShader:class{constructor(t){this.shader=new CGL.Shader(t,"markermaterial");const e="".endl()+"void main()".endl()+"{".endl()+"    outColor = vec4(color.rgb,1.0);".endl()+"}",i="".endl()+"IN vec3 vPosition;".endl()+"UNI mat4 projMatrix;".endl()+"UNI mat4 mvMatrix;".endl()+"void main()".endl()+"{".endl()+"   gl_Position = projMatrix * mvMatrix * vec4(vPosition,1.0);".endl()+"}";this.shader.setSource(i,e),this.coloruni=this.shader.addUniformFrag("4f","color",[1,.777,1,1])}setColor(t,e,i,s){this.coloruni.set(t,e,i,s)}}},ot.BLEND_MODES,ot.SHADER,ot.MATH,ot.BLEND_MODES);window.CGL=Rt;const St=function(t){W.apply(this),this.id=CABLES.uuid(),this.portIn=null,this.portOut=null,this.scene=t,this.activityCounter=0,this.ignoreInSerialize=!1};St.prototype.setValue=function(t){void 0===t?this._setValue():this.portIn.set(t)},St.prototype.activity=function(){this.activityCounter++},St.prototype._setValue=function(){if(!this.portOut)return void this.remove();const t=this.portOut.get();t==t&&(this.portIn.type!=l.OP_PORT_TYPE_FUNCTION&&this.activity(),(this.portIn.get()!==t||this.portIn.changeAlways)&&this.portIn.set(t))},St.prototype.getOtherPort=function(t){return t==this.portIn?this.portOut:this.portIn},St.prototype.remove=function(){this.portIn&&this.portIn.removeLink(this),this.portOut&&this.portOut.removeLink(this),this.scene&&this.scene.emitEvent("onUnLink",this.portIn,this.portOut,this),!this.portIn||this.portIn.type!=l.OP_PORT_TYPE_OBJECT&&this.portIn.type!=l.OP_PORT_TYPE_ARRAY||(this.portIn.set(null),this.portIn.links.length>0&&this.portIn.set(this.portIn.links[0].getOtherPort(this.portIn).get())),this.portIn&&this.portIn.parent._checkLinksNeededToWork(),this.portOut&&this.portOut.parent._checkLinksNeededToWork(),this.portIn=null,this.portOut=null,this.scene=null},St.prototype.link=function(t,e){if(!St.canLink(t,e))return console.warn("[core_link] cannot link ports!",t,e),!1;t.direction==c.PORT_DIR_IN?(this.portIn=t,this.portOut=e):(this.portIn=e,this.portOut=t),t.addLink(this),e.addLink(this),this.setValue(),t.onLink&&t.onLink(this),e.onLink&&e.onLink(this),t.parent._checkLinksNeededToWork(),e.parent._checkLinksNeededToWork()},St.prototype.getSerialized=function(){const t={};return t.portIn=this.portIn.getName(),t.portOut=this.portOut.getName(),t.objIn=this.portIn.parent.id,t.objOut=this.portOut.parent.id,t},St.canLinkText=function(t,e){if(t.direction==e.direction){let t="(out)";return e.direction==c.PORT_DIR_IN&&(t="(in)"),"can not link: same direction "+t}return t.parent==e.parent?"can not link: same op":t.type!=l.OP_PORT_TYPE_DYNAMIC&&e.type!=l.OP_PORT_TYPE_DYNAMIC&&t.type!=e.type?"can not link: different type":t?e?t.direction==c.PORT_DIR_IN&&t.isAnimated()||e.direction==c.PORT_DIR_IN&&e.isAnimated()?"can not link: is animated":t.isLinkedTo(e)?"ports already linked":t.canLink&&!t.canLink(e)||e.canLink&&!e.canLink(t)?"Incompatible":"can link":"can not link: port 2 invalid":"can not link: port 1 invalid"},St.canLink=function(t,e){return!!t&&(!!e&&((t.direction!=c.PORT_DIR_IN||!t.isAnimated())&&((e.direction!=c.PORT_DIR_IN||!e.isAnimated())&&(!t.isHidden()&&!e.isHidden()&&(!t.isLinkedTo(e)&&(t.direction!=e.direction&&((t.type==e.type||t.type==l.OP_PORT_TYPE_DYNAMIC||e.type==l.OP_PORT_TYPE_DYNAMIC)&&(t.type==l.OP_PORT_TYPE_DYNAMIC||e.type==l.OP_PORT_TYPE_DYNAMIC||t.parent!=e.parent&&(!(t.canLink&&!t.canLink(e))&&!(e.canLink&&!e.canLink(t)))))))))))};const Pt=function(){W.apply(this),this._log=new h("core_op"),this.data={},this.storage={},this.objName="",this.portsOut=[],this.portsIn=[],this.portsInData=[],this.opId="",this.uiAttribs={},this.enabled=!0,this.patch=arguments[0],this.name=arguments[1],this._needsLinkedToWork=[],this._needsParentOp=null,this._shortOpName="",this.hasUiErrors=!1,this._uiErrors={},arguments[1]&&(this._shortOpName=CABLES.getShortOpName(arguments[1]),this.getTitle()),this.id=arguments[2]||T(),this.onAddPort=null,this.onCreate=null,this.onResize=null,this.onLoaded=null,this.onDelete=null,this.onUiAttrChange=null,this.onError=null,this._eventCallbacks={},this._instances=null,this.preRender=null,this.init=null};{Pt.prototype.clearUiAttrib=function(t){const e={name:null};this.uiAttrib(e)},Pt.prototype.getTitle=function(){return this.uiAttribs?(void 0!==this.uiAttribs.title&&""!==this.uiAttribs.title||-1!=this.objName.indexOf("Ops.Ui.")||(this.uiAttribs.title=this._shortOpName),void 0===this.uiAttribs.title&&(this.uiAttribs.title=this._shortOpName),this.uiAttribs.title):"nouiattribs"+this.name},Pt.prototype.setTitle=function(t){const e=this.name!=t;this.name=t,this.uiAttr({title:t}),e&&this.fireEvent("onTitleChange",t)};const t=function(t){if(!t)return;(t.error||t.warning||t.hint)&&this._log.warn("old ui error/warning attribute in "+this.name+", use op.setUiError !",t),"object"!=typeof t&&this._log.error("op.uiAttrib attribs are not of type object"),this.uiAttribs||(this.uiAttribs={});let e=!1;for(const i in t)this.uiAttribs[i]!=t[i]&&(e=!0),this.uiAttribs[i]=t[i];this.uiAttribs.hasOwnProperty("selected")&&0==this.uiAttribs.selected&&delete this.uiAttribs.selected,t.title&&t.title!=this.name&&this.setTitle(t.title),e&&(this.fireEvent("onUiAttribsChange",t),this.patch.emitEvent("onUiAttribsChange",this,t))};Pt.prototype.setUiAttribs=Pt.prototype.setUiAttrib=Pt.prototype.uiAttr=t,Pt.prototype.getName=function(){return this.uiAttribs.name?this.uiAttribs.name:this.objName.split(".")},Pt.prototype.addOutPort=function(t){return t.direction=c.PORT_DIR_OUT,t.parent=this,this.portsOut.push(t),this.fireEvent("onPortAdd",t),t},Pt.prototype.hasDynamicPort=function(){let t=0;for(t=0;t<this.portsIn.length;t++){if(this.portsIn[t].type==l.OP_PORT_TYPE_DYNAMIC)return!0;if("dyn"==this.portsIn[t].getName())return!0}for(t=0;t<this.portsOut.length;t++){if(this.portsOut[t].type==l.OP_PORT_TYPE_DYNAMIC)return!0;if("dyn"==this.portsOut[t].getName())return!0}return!1},Pt.prototype.addInPort=function(t){if(!(t instanceof et))throw new Error("parameter is not a port!");return t.direction=c.PORT_DIR_IN,t.parent=this,this.portsIn.push(t),this.fireEvent("onPortAdd",t),t},Pt.prototype.inFunction=Pt.prototype.inTrigger=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_FUNCTION));return void 0!==e&&i.set(e),i},Pt.prototype.inFunctionButton=Pt.prototype.inTriggerButton=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_FUNCTION,{display:"button"}));return void 0!==e&&i.set(e),i},Pt.prototype.inFunctionButton=Pt.prototype.inUiTriggerButtons=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_FUNCTION,{display:"buttons"}));return void 0!==e&&i.set(e),i},Pt.prototype.inValueFloat=Pt.prototype.inValue=Pt.prototype.inFloat=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_VALUE));return void 0!==e&&(i.set(e),i.defaultValue=e),i},Pt.prototype.inValueBool=Pt.prototype.inBool=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_VALUE,{display:"bool"}));return void 0!==e&&(i.set(e),i.defaultValue=i.get()),i},Pt.prototype.inValueString=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_VALUE,{type:"string"}));return i.value="",void 0!==e&&(i.set(e),i.defaultValue=e),i},Pt.prototype.inString=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_STRING,{type:"string"}));return e=e||"",i.value=e,i.set(e),i.defaultValue=e,i},Pt.prototype.inValueText=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_VALUE,{type:"string",display:"text"}));return i.value="",void 0!==e&&(i.set(e),i.defaultValue=e),i},Pt.prototype.inTextarea=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_STRING,{type:"string",display:"text"}));return i.value="",void 0!==e&&(i.set(e),i.defaultValue=e),i},Pt.prototype.inStringEditor=function(t,e,i,s=!0){const r=this.addInPort(new et(this,t,l.OP_PORT_TYPE_STRING,{type:"string",display:"editor",editorSyntax:i,hideFormatButton:s}));return r.value="",void 0!==e&&(r.set(e),r.defaultValue=e),r},Pt.prototype.inValueEditor=function(t,e,i,s=!0){const r=this.addInPort(new et(this,t,l.OP_PORT_TYPE_VALUE,{type:"string",display:"editor",editorSyntax:i,hideFormatButton:s}));return r.value="",void 0!==e&&(r.set(e),r.defaultValue=e),r},Pt.prototype.inValueSelect=Pt.prototype.inDropDown=function(t,e,i,s){let r=null;if(s){const i=new et(this,t,l.OP_PORT_TYPE_VALUE,{display:"dropdown",hidePort:!0,type:"string",values:e});r=this.addInPort(i)}else{const s=new et(this,t+" index",l.OP_PORT_TYPE_VALUE,{increment:"integer",hideParam:!0}),n=this.addInPort(s),o=new st(this,t,l.OP_PORT_TYPE_VALUE,{display:"dropdown",hidePort:!0,type:"string",values:e},n);if(o.indexPort=s,s.onLinkChanged=function(){o.setUiAttribs({greyout:s.isLinked()})},r=this.addInPort(o),void 0!==i){r.set(i);const t=e.findIndex(t=>t==i);n.setValue(t),r.defaultValue=i,n.defaultValue=t}}return r},Pt.prototype.inSwitch=function(t,e,i,s){let r=null;if(s){const i=new et(this,t,l.OP_PORT_TYPE_STRING,{display:"switch",hidePort:!0,type:"string",values:e});r=this.addInPort(i)}else{const s=new et(this,t+" index",l.OP_PORT_TYPE_VALUE,{increment:"integer",hideParam:!0}),n=this.addInPort(s),o=new it(this,t,l.OP_PORT_TYPE_STRING,{display:"switch",hidePort:!0,type:"string",values:e},n);if(s.onLinkChanged=function(){o.setUiAttribs({greyout:s.isLinked()})},r=this.addInPort(o),void 0!==i){r.set(i);const t=e.findIndex(t=>t==i);n.setValue(t),r.defaultValue=i,n.defaultValue=t}}return r},Pt.prototype.inValueInt=Pt.prototype.inInt=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_VALUE,{increment:"integer"}));return void 0!==e&&(i.set(e),i.defaultValue=e),i},Pt.prototype.inFile=function(t,e,i){const s=this.addInPort(new et(this,t,l.OP_PORT_TYPE_VALUE,{display:"file",type:"string",filter:e}));return void 0!==i&&(s.set(i),s.defaultValue=i),s},Pt.prototype.inUrl=function(t,e,i){const s=this.addInPort(new et(this,t,l.OP_PORT_TYPE_STRING,{display:"file",type:"string",filter:e}));return void 0!==i&&(s.set(i),s.defaultValue=i),s},Pt.prototype.inTexture=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_OBJECT,{display:"texture",objType:"texture",preview:!0}));return void 0!==e&&i.set(e),i},Pt.prototype.inObject=function(t,e,i){const s=this.addInPort(new et(this,t,l.OP_PORT_TYPE_OBJECT,{objType:i}));return void 0!==e&&s.set(e),s},Pt.prototype.inGradient=function(t,e){const i=this.addInPort(new et(this,t,l.OP_PORT_TYPE_VALUE,{display:"gradient",hidePort:!0}));return void 0!==e&&i.set(e),i},Pt.prototype.inArray=function(t,e,i){!i&&CABLES.UTILS.isNumeric(e)&&(i=e);const s=this.addInPort(new et(this,t,l.OP_PORT_TYPE_ARRAY,{stride:i}));return void 0===e||!Array.isArray(e)&&null!=e||s.set(e),s},Pt.prototype.inValueSlider=Pt.prototype.inFloatSlider=function(t,e,i,s){const r={display:"range"};null!=i&&null!=s&&(r.min=i,r.max=s);const n=this.addInPort(new et(this,t,l.OP_PORT_TYPE_VALUE,r));return void 0!==e&&(n.set(e),n.defaultValue=e),n},Pt.prototype.outFunction=Pt.prototype.outTrigger=function(t,e){const i=this.addOutPort(new et(this,t,l.OP_PORT_TYPE_FUNCTION));return void 0!==e&&i.set(e),i},Pt.prototype.outValue=Pt.prototype.outNumber=function(t,e){const i=this.addOutPort(new et(this,t,l.OP_PORT_TYPE_VALUE));return void 0!==e&&i.set(e),i},Pt.prototype.outValueBool=Pt.prototype.outBool=function(t,e){const i=this.addOutPort(new et(this,t,l.OP_PORT_TYPE_VALUE,{display:"bool"}));return void 0!==e?i.set(e):i.set(0),i},Pt.prototype.outBoolNum=function(t,e){const i=this.addOutPort(new et(this,t,l.OP_PORT_TYPE_VALUE,{display:"boolnum"}));return i.set=function(t){this.setValue(t?1:0)}.bind(i),void 0!==e?i.set(e):i.set(0),i},Pt.prototype.outValueString=function(t,e){const i=this.addOutPort(new et(this,t,l.OP_PORT_TYPE_VALUE,{type:"string"}));return void 0!==e&&i.set(e),i},Pt.prototype.outString=function(t,e){const i=this.addOutPort(new et(this,t,l.OP_PORT_TYPE_STRING,{type:"string"}));return void 0!==e?i.set(e):i.set(""),i},Pt.prototype.outObject=function(t,e,i){const s=this.addOutPort(new et(this,t,l.OP_PORT_TYPE_OBJECT,{objType:i||null}));return void 0!==e&&s.set(e),s.ignoreValueSerialize=!0,s},Pt.prototype.outArray=function(t,e,i){!i&&CABLES.UTILS.isNumeric(e)&&(i=e);const s=this.addOutPort(new et(this,t,l.OP_PORT_TYPE_ARRAY,{stride:i}));return void 0===e||!Array.isArray(e)&&null!=e||s.set(e),s.ignoreValueSerialize=!0,s},Pt.prototype.outTexture=function(t,e){const i=this.addOutPort(new et(this,t,l.OP_PORT_TYPE_OBJECT,{preview:!0,objType:"texture"}));return void 0!==e&&i.set(e),i.ignoreValueSerialize=!0,i},Pt.prototype.inDynamic=function(t,e,i,s){const r=new et(this,t,l.OP_PORT_TYPE_DYNAMIC,i);return r.shouldLink=function(t,i){if(e&&g.isArray(e)){for(let s=0;s<e.length;s++){if(t==this&&i.type===e[s])return!0;if(i==this&&t.type===e[s])return!0}return!1}return!0},this.addInPort(r),void 0!==s&&(r.set(s),r.defaultValue=s),r},Pt.prototype.printInfo=function(){for(let t=0;t<this.portsIn.length;t++)console.log("in: "+this.portsIn[t].getName());for(const t in this.portsOut)console.log("out: "+this.portsOut[t].getName())},Pt.prototype.getOutChilds=function(){const t=[];for(const e in this.portsOut)for(const i in this.portsOut[e].links)this.portsOut[e].type==l.OP_PORT_TYPE_FUNCTION&&t.push(this.portsOut[e].links[i].portIn.parent);return t},Pt.prototype.markChilds=function(){this.marked=!0;for(const t in this.portsOut)for(const e in this.portsOut[t].links)this.portsOut[t].parent.marked=!0,this.portsOut[t].links[e].portIn.parent!=this&&this.portsOut[t].links[e].portIn.parent.markChilds()},Pt.prototype.selectChilds=function(){this.setUiAttrib({selected:!0});for(const t in this.portsOut)for(const e in this.portsOut[t].links)this.portsOut[t].parent.setUiAttrib({selected:!0}),this.portsOut[t].links[e].portIn.parent!=this&&this.portsOut[t].links[e].portIn.parent.selectChilds()},Pt.prototype.deleteChilds=function(){const t=[];for(const e in this.portsOut)for(const i in this.portsOut[e].links)this.portsOut[e].links[i].portIn.parent!=this&&(this.portsOut[e].parent!=this&&t.push(this.portsOut[e].parent),t.push(this.portsOut[e].links[i].portIn.parent),this.portsOut[e].links[i].portIn.parent.deleteChilds());for(const e in t)this.patch.deleteOp(t[e].id)},Pt.prototype.removeLinks=function(){for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].removeLinks();for(let t=0;t<this.portsOut.length;t++)this.portsOut[t].removeLinks()},Pt.prototype.countFittingPorts=function(t){let e=0;for(const i in this.portsOut)St.canLink(t,this.portsOut[i])&&e++;for(const i in this.portsIn)St.canLink(t,this.portsIn[i])&&e++;return e},Pt.prototype.findFittingPort=function(t,e=!1){if(e){for(const e in this.portsIn)if(St.canLink(t,this.portsIn[e]))return this.portsIn[e];for(const e in this.portsOut)if(St.canLink(t,this.portsOut[e]))return this.portsOut[e]}else{for(const e in this.portsOut)if(St.canLink(t,this.portsOut[e]))return this.portsOut[e];for(const e in this.portsIn)if(St.canLink(t,this.portsIn[e]))return this.portsIn[e]}},Pt.prototype.getSerialized=function(t){const e={};this.opId&&(e.opId=this.opId),e.objName=this.objName,e.id=this.id,e.uiAttribs=this.uiAttribs,this.storage&&Object.keys(this.storage).length>0&&(e.storage=this.storage),this.uiAttribs.title==this._shortOpName&&delete this.uiAttribs.title,this.uiAttribs.hasOwnProperty("working")&&1==this.uiAttribs.working&&delete this.uiAttribs.working,t&&this.uiAttribs.hasOwnProperty("uierrors")&&delete this.uiAttribs.uierrors,e.portsIn=[],e.portsOut=[];for(let t=0;t<this.portsIn.length;t++)e.portsIn.push(this.portsIn[t].getSerialized());for(const t in this.portsOut)e.portsOut.push(this.portsOut[t].getSerialized());return e},Pt.prototype.getFirstOutPortByType=function(t){for(const e in this.portsOut)if(this.portsOut[e].type==t)return this.portsOut[e]},Pt.prototype.getFirstInPortByType=function(t){for(const e in this.portsIn)if(this.portsIn[e].type==t)return this.portsIn[e]},Pt.prototype.getPort=Pt.prototype.getPortByName=function(t,e){if(e){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].getName().toLowerCase()==t)return this.portsIn[e];for(let e=0;e<this.portsOut.length;e++)if(this.portsOut[e].getName().toLowerCase()==t)return this.portsOut[e]}else{for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].getName()==t)return this.portsIn[e];for(let e=0;e<this.portsOut.length;e++)if(this.portsOut[e].getName()==t)return this.portsOut[e]}},Pt.prototype.getPortById=function(t){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].id==t)return this.portsIn[e];for(let e=0;e<this.portsOut.length;e++)if(this.portsOut[e].id==t)return this.portsOut[e]},Pt.prototype.updateAnims=function(){for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].updateAnim()},Pt.prototype.log=function(){const t="op "+this.objName;if(CABLES.UI&&!CABLES.UI.logFilter.shouldPrint(t,...arguments))return;if(!CABLES.UI&&this.patch.silent)return;const e=["[op "+this._shortOpName+"]"];e.push.apply(e,arguments),Function.prototype.apply.apply(console.log,[console,e])},Pt.prototype.error=Pt.prototype.logError=function(){const t=["[op "+this._shortOpName+"]"];t.push.apply(t,arguments),Function.prototype.apply.apply(console.error,[console,t]),window.gui&&window.gui.emitEvent("opLogEvent",this.objName,"error",arguments)},Pt.prototype.warn=Pt.prototype.logWarn=function(){const t=["[op "+this._shortOpName+"]"];t.push.apply(t,arguments),Function.prototype.apply.apply(console.warn,[console,t])},Pt.prototype.verbose=Pt.prototype.logVerbose=function(){const t="op "+this._shortOpName;if(CABLES.UI&&!CABLES.UI.logFilter.shouldPrint(t,...arguments))return;if(!CABLES.UI&&this.patch.silent)return;const e=["["+t+"]"];e.push.apply(e,arguments),Function.prototype.apply.apply(console.info,[console,e])},Pt.prototype.unLink=function(){for(let t=0;t<this.portsOut.length;t++)this.portsOut[t].removeLinks();for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].removeLinks()},Pt.prototype.profile=function(t){for(let t=0;t<this.portsIn.length;t++)this.portsIn[t]._onTriggered=this.portsIn[t]._onTriggeredProfiling,this.portsIn[t].set=this.portsIn[t]._onSetProfiling},Pt.prototype.findParent=function(t){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].isLinked()){if(this.portsIn[e].links[0].portOut.parent.objName==t)return this.portsIn[e].links[0].portOut.parent;let i=null;if(i=this.portsIn[e].links[0].portOut.parent.findParent(t),i)return i}return null},Pt.prototype.cleanUp=function(){if(this._instances){for(let t=0;t<this._instances.length;t++)this._instances[t].onDelete&&this._instances[t].onDelete();this._instances.length=0}},Pt.prototype.instanced=function(t){if(console.log("instanced",this.patch.instancing.numCycles()),0===this.patch.instancing.numCycles())return!1;let e=0,i=0;if(!this._instances||this._instances.length!=this.patch.instancing.numCycles()){for(this._instances||(this._instances=[]),this._.log("creating instances of ",this.objName,this.patch.instancing.numCycles(),this._instances.length),this._instances.length=this.patch.instancing.numCycles(),e=0;e<this._instances.length;e++){this._instances[e]=this.patch.createOp(this.objName,!0),this._instances[e].instanced=function(){return!1},this._instances[e].uiAttr(this.uiAttribs);for(let t=0;t<this.portsOut.length;t++)this.portsOut[t].type==l.OP_PORT_TYPE_FUNCTION&&(this._instances[e].getPortByName(this.portsOut[t].name).trigger=this.portsOut[t].trigger.bind(this.portsOut[t]))}for(i=0;i<this.portsIn.length;i++)this.portsIn[i].onChange=null,this.portsIn[i].onValueChanged=null}for(i=0;i<this.portsIn.length;i++)this.portsIn[i].type!=l.OP_PORT_TYPE_VALUE&&this.portsIn[i].type!=l.OP_PORT_TYPE_ARRAY||this._instances[this.patch.instancing.index()].portsIn[i].set(this.portsIn[i].get()),this.portsIn[i].type,l.OP_PORT_TYPE_FUNCTION;for(i=0;i<this.portsOut.length;i++)this.portsOut[i].type==l.OP_PORT_TYPE_VALUE&&this.portsOut[i].set(this._instances[this.patch.instancing.index()].portsOut[i].get());return!0},Pt.prototype.initInstancable=function(){},Pt.prototype.setValues=function(t){for(const e in t){const i=this.getPortByName(e);i?i.set(t[e]):this._log.warn("op.setValues: port not found:",e)}},Pt.prototype.setUiError=function(t,e,i){if(!e&&!this.hasUiErrors)return;if(!e&&!this._uiErrors.hasOwnProperty(t))return;if(this._uiErrors.hasOwnProperty(t)&&this._uiErrors[t].txt==e)return;t.indexOf(" ")>-1&&this._log.warn("setuierror id cant have spaces! ",t),!e&&this._uiErrors.hasOwnProperty(t)?delete this._uiErrors[t]:!e||this._uiErrors.hasOwnProperty(t)&&this._uiErrors[t].txt==e||(null==i&&(i=2),this._uiErrors[t]={txt:e,level:i,id:t});const s=[];for(const t in this._uiErrors)s.push(this._uiErrors[t]);this.uiAttr({uierrors:s}),this.hasUiErrors=Object.keys(this._uiErrors).length,console.log(t,e,this._uiErrors.hasOwnProperty(t))},Pt.prototype.setError=function(t,e){this._log.warn("old error message op.error() - use op.setUiError()")},Pt.prototype.addListener=Pt.prototype.addEventListener=function(t,e){this._eventCallbacks[t]?this._eventCallbacks[t].push(e):this._eventCallbacks[t]=[e]},Pt.prototype.hasEventListener=function(t,e){if(t&&e){if(this._eventCallbacks[t]){return-1!=this._eventCallbacks[t].indexOf(e)}}else this._log.warn("hasListener: missing parameters")},Pt.prototype.removeEventListener=function(t,e){if(this._eventCallbacks[t]){const i=this._eventCallbacks[t].indexOf(e);-1==i?this._log.warn("eventlistener "+t+" not found..."):this._eventCallbacks[t].slice(i)}},Pt.prototype.fireEvent=function(t,e){if(this._eventCallbacks[t])for(let i=0;i<this._eventCallbacks[t].length;i++)this._eventCallbacks[t][i]&&this._eventCallbacks[t][i].cb(e);this.onUiAttrChange&&"onUiAttribsChange"==t&&this.onUiAttrChange(e)},Pt.prototype.setEnabled=function(t){this.enabled=t,this.fireEvent("onEnabledChange",t)},Pt.prototype.setPortGroup=function(t,e){for(let i=0;i<e.length;i++)e[i]&&(e[i].setUiAttribs?e[i].setUiAttribs({group:t}):this._log.error("setPortGroup: invalid port!"))},Pt.prototype.setUiAxisPorts=function(t,e,i){t&&t.setUiAttribs({axis:"X"}),e&&e.setUiAttribs({axis:"Y"}),i&&i.setUiAttribs({axis:"Z"})},Pt.prototype.removePort=function(t){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e]==t)return this.portsIn.splice(e,1),this.fireEvent("onUiAttribsChange",{}),void this.fireEvent("onPortRemoved",{})},Pt.prototype._checkLinksNeededToWork=function(){},Pt.prototype.toWorkNeedsParent=function(t){this.patch.isEditorMode()&&(this._needsParentOp=t)},Pt.prototype.toWorkPortsNeedToBeLinked=function(){if(this.patch.isEditorMode())for(let t=0;t<arguments.length;t++)-1==this._needsLinkedToWork.indexOf(arguments[t])&&this._needsLinkedToWork.push(arguments[t])},Pt.prototype.toWorkPortsNeedToBeLinkedReset=function(){this.patch.isEditorMode()&&(this._needsLinkedToWork.length=0,this.checkLinkTimeWarnings&&this.checkLinkTimeWarnings())},Pt.prototype.initVarPorts=function(){for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].getVariableName()&&this.portsIn[t].setVariable(this.portsIn[t].getVariableName())},Pt.prototype.refreshParams=function(){this.patch&&this.patch.isEditorMode()&&this.isCurrentUiOp()&&gui.opParams.show(this)},Pt.prototype.isCurrentUiOp=function(){if(this.patch.isEditorMode())return gui.patchView.isCurrentOp(this)},Pt.prototype.renderVizLayer=null}Pt.getNamespaceClassName=function(t){return t?t.startsWith("Ops.Gl")?"gl":t.startsWith("Ops.WebAudio")?"audio":t.startsWith("Ops.Devices")?"devices":t.startsWith("Ops.Html")||t.startsWith("Ops.Sidebar")?"html":t.startsWith("Ops.Math")?"math":t.startsWith("Ops.User")?"user":"default":"default"},Pt.isSubpatchOp=function(t){return"Ops.Ui.Patch"==t||"Ops.Ui.SubPatch"==t};const Nt=function(t){CABLES.EventTarget.apply(this),this._log=new h("LoadingStatus"),this._loadingAssets={},this._cbFinished=[],this._assetTasks=[],this._percent=0,this._count=0,this._countFinished=0,this._order=0,this._startTime=0,this._patch=t,this._wasFinishedPrinted=!1,this._loadingAssetTaskCb=!1};Nt.prototype.setOnFinishedLoading=function(t){this._cbFinished.push(t)},Nt.prototype.getNumAssets=function(){return this._countFinished},Nt.prototype.getProgress=function(){return this._percent},Nt.prototype.checkStatus=function(){this._countFinished=0,this._count=0;for(const t in this._loadingAssets)this._count++,this._loadingAssets[t].finished||this._countFinished++;if(this._percent=(this._count-this._countFinished)/this._count,0===this._countFinished){for(let t=0;t<this._cbFinished.length;t++)if(this._cbFinished[t]){const e=this._cbFinished[t];setTimeout(()=>{e(this._patch),this.emitEvent("finishedAll")},100)}this._wasFinishedPrinted||(this._wasFinishedPrinted=!0,this.print()),this.emitEvent("finishedAll")}},Nt.prototype.getList=function(){let t=[];for(const e in this._loadingAssets)t.push(this._loadingAssets[e]);return t},Nt.prototype.getListJobs=function(){let t=[];for(const e in this._loadingAssets)this._loadingAssets[e].finished||t.push(this._loadingAssets[e].name);return t},Nt.prototype.print=function(){if(this._patch.config.silent)return;const t=[];for(const e in this._loadingAssets)t.push([this._loadingAssets[e].order,this._loadingAssets[e].type,this._loadingAssets[e].name,(this._loadingAssets[e].timeEnd-this._loadingAssets[e].timeStart)/1e3+"s"]);this._log.groupCollapsed("finished loading "+this._order+" assets in "+(Date.now()-this._startTime)/1e3+"s"),this._log.table(t),this._log.groupEnd()},Nt.prototype.finished=function(t){this._loadingAssets[t]&&(this._loadingAssets[t].finished=!0,this._loadingAssets[t].timeEnd=Date.now()),this.checkStatus(),this.emitEvent("finishedTask")},Nt.prototype._startAssetTasks=function(){for(let t=0;t<this._assetTasks.length;t++)this._assetTasks[t]();this._assetTasks.length=0},Nt.prototype.addAssetLoadingTask=function(t){this._patch.isEditorMode()&&!CABLES.UI.loaded?(this._assetTasks.push(t),this._loadingAssetTaskCb||window.gui.addEventListener("uiloaded",this._startAssetTasks.bind(this)),this._loadingAssetTaskCb=!0):t(),this.emitEvent("addAssetTask")},Nt.prototype.existByName=function(t){for(let e in this._loadingAssets)if(this._loadingAssets[e].name==t&&!this._loadingAssets[e].finished)return!0},Nt.prototype.start=function(t,e){0==this._startTime&&(this._startTime=Date.now());const i=A();return this._loadingAssets[i]={id:i,type:t,name:e,finished:!1,timeStart:Date.now(),order:this._order},this._order++,this.emitEvent("startTask"),i};const Ft=function(){this._loops=[],this._indizes=[],this._index=0};Ft.prototype.pushLoop=function(t){this._loops.push(Math.abs(Math.floor(t))),this._indizes.push(this._index)},Ft.prototype.popLoop=function(){this._loops.pop(),this._index=this._indizes.pop(),0===this._loops.length&&(this._index=0)},Ft.prototype.numLoops=function(){return this._loops.length},Ft.prototype.numCycles=function(){if(0===this._loops.length)return 0;let t=this._loops[0];for(let e=1;e<this._loops.length;e++)t*=this._loops[e];return t},Ft.prototype.inLoop=function(){return this._loops.length>0},Ft.prototype.increment=function(){this._index++},Ft.prototype.index=function(){return this._index};const Ct=function(t){this.startFrame=t.getFrameNum();let e={},i=null,s=0;this.getItems=function(){return e},this.clear=function(){e={}},this.add=function(r,n){null!==i&&(n&&n.id==i||e[i]&&(e[i].timeUsed+=performance.now()-s,(!e[i].peakTime||_t()-e[i].peakTime>5e3)&&(e[i].peak=0,e[i].peakTime=_t()),e[i].peak=Math.max(e[i].peak,performance.now()-s))),null!==n?(e[n.id]||(e[n.id]={numTriggers:0,timeUsed:0}),e[n.id].lastFrame!=t.getFrameNum()&&(e[n.id].numTriggers=0),e[n.id].lastFrame=t.getFrameNum(),e[n.id].numTriggers++,e[n.id].opid=n.parent.id,e[n.id].title=n.parent.name+"."+n.name,e[n.id].subPatch=n.parent.uiAttribs.subPatch,i=n.id,s=performance.now()):i=null},this.print=function(){console.log("--------");for(const t in e)console.log(e[t].title+": "+e[t].numTriggers+" / "+e[t].timeUsed)}};var wt=class{constructor(t,e,i){this._name=t,this._changeListeners=[],this.type=i,this.setValue(e)}getValue(){return this._v}getName(){return this._name}setValue(t){this._v=t;for(let e=0;e<this._changeListeners.length;e++)this._changeListeners[e](t,this)}addListener(t){-1==this._changeListeners.indexOf(t)&&this._changeListeners.push(t)}removeListener(t){const e=this._changeListeners.indexOf(t);this._changeListeners.splice(e,1)}};const Mt=function(t){W.apply(this),this._log=new h("core_patch"),this.ops=[],this.settings={},this.config=t||{glCanvasResizeToWindow:!1,prefixAssetPath:"",prefixJsPath:"",silent:!0,onError:null,onFinishedLoading:null,onFirstFrameRendered:null,onPatchLoaded:null,fpsLimit:0},this.timer=new pt,this.freeTimer=new pt,this.animFrameOps=[],this.animFrameCallbacks=[],this.gui=!1,CABLES.logSilent=this.silent=!0,this.profiler=null,this.aborted=!1,this._crashedOps=[],this._renderOneFrame=!1,this._animReq=null,this._opIdCache={},this._triggerStack=[],this.loading=new Nt(this),this._perf={fps:0,ms:0,_fpsFrameCount:0,_fpsMsCount:0,_fpsStart:0},this._volumeListeners=[],this._paused=!1,this._frameNum=0,this.instancing=new Ft,this.onOneFrameRendered=null,this.namedTriggers={},this._origData=null,this._frameNext=0,this._frameInterval=0,this._lastFrameTime=0,this._frameWasdelayed=!0,function(){return!this}()||this._log.warn("not in strict mode: core patch"),this._isLocal=0===document.location.href.indexOf("file:"),this.config.hasOwnProperty("silent")&&(this.silent=CABLES.logSilent=this.config.silent),this.config.hasOwnProperty("doRequestAnimation")||(this.config.doRequestAnimation=!0),this.config.prefixAssetPath||(this.config.prefixAssetPath=""),this.config.prefixJsPath||(this.config.prefixJsPath=""),this.config.masterVolume||(this.config.masterVolume=1),this._variables={},this._variableListeners=[],this.vars={},t&&t.vars&&(this.vars=t.vars),this.cgl=new Ot(this),this.cgl.setCanvas(this.config.glCanvasId||this.config.glCanvas||"glcanvas"),!0===this.config.glCanvasResizeToWindow&&this.cgl.setAutoResize("window"),!0===this.config.glCanvasResizeToParent&&this.cgl.setAutoResize("parent"),this.loading.setOnFinishedLoading(this.config.onFinishedLoading),this.cgl.aborted&&(this.aborted=!0),this.cgl.silent&&(this.silent=!0),this.freeTimer.play(),this.exec(),this.aborted||(this.config.patch?this.deSerialize(this.config.patch):this.config.patchFile&&w(this.config.patchFile,(t,e)=>{const i=JSON.parse(e);if(t){return this._log.error("err",t),this._log.error("data",i),void this._log.error("data",i.msg)}this.deSerialize(i)}),this.timer.play()),console.log("made with https://cables.gl")};Mt.prototype.isPlaying=function(){return!this._paused},Mt.prototype.isRenderingOneFrame=function(){return this._renderOneFrame},Mt.prototype.renderOneFrame=function(){this._paused=!0,this._renderOneFrame=!0,this.exec(),this._renderOneFrame=!1},Mt.prototype.getFPS=function(){return this._perf.fps},Mt.prototype.isEditorMode=function(){return!0===this.config.editorMode},Mt.prototype.pause=function(){cancelAnimationFrame(this._animReq),this.emitEvent("pause"),this._animReq=null,this._paused=!0,this.freeTimer.pause()},Mt.prototype.resume=function(){this._paused&&(cancelAnimationFrame(this._animReq),this._paused=!1,this.freeTimer.play(),this.emitEvent("resume"),this.exec())},Mt.prototype.setVolume=function(t){this.config.masterVolume=t;for(let e=0;e<this._volumeListeners.length;e++)this._volumeListeners[e].onMasterVolumeChanged(t)},Mt.prototype.getAssetPath=function(){if(this.isEditorMode())return"/assets/"+gui.project()._id+"/";if(document.location.href.indexOf("cables.gl")>0){const t=document.location.href.split("/");return"/assets/"+t[t.length-1]+"/"}return"assets/"},Mt.prototype.getFilePath=function(t){return this._isLocal&&!this.config.allowLocalFileAccess&&this.exitError("localAccess","Browser security forbids loading files directly without a webserver. Upload files to a server to work. use allowLocalFileAccess:true to ignore this."),t?0===(t=String(t)).indexOf("https:")||0===t.indexOf("http:")||0===t.indexOf("data:")?t:(t=t.replace("//","/"),this.config.prefixAssetPath+t+(this.config.suffixAssetPath||"")):t},Mt.prototype.clear=function(){for(this.emitEvent("patchClearStart"),this.cgl.TextureEffectMesh=null,this.animFrameOps.length=0,this.timer=new pt;this.ops.length>0;)this.deleteOp(this.ops[0].id);this.emitEvent("patchClearEnd")},Mt.getOpClass=function(t){const e=t.split(".");let i=null;try{return 2==e.length?i=window[e[0]][e[1]]:3==e.length?i=window[e[0]][e[1]][e[2]]:4==e.length?i=window[e[0]][e[1]][e[2]][e[3]]:5==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]]:6==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]]:7==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]]:8==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]][e[7]]:9==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]][e[7]][e[8]]:10==e.length&&(i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]][e[7]][e[8]][e[9]]),i}catch(t){return null}},Mt.prototype.createOp=function(t,e){const i=t.split(".");let s=null,r="";try{if(-1==t.indexOf("Ops.")){const i=t;if(!CABLES.OPS[i])throw new Error("could not find op by id: "+i);r=CABLES.OPS[i].objName,s=new CABLES.OPS[i].f(this,r,e,i),s.opId=i}if(!s){r=t;if(!Mt.getOpClass(r))throw this.emitEvent("criticalError","unknown op","unknown op: "+r),this._log.error("unknown op: "+r),new Error("unknown op: "+r);if(2==i.length?s=new window[i[0]][i[1]](this,r,e):3==i.length?s=new window[i[0]][i[1]][i[2]](this,r,e):4==i.length?s=new window[i[0]][i[1]][i[2]][i[3]](this,r,e):5==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]](this,r,e):6==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]](this,r,e):7==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]](this,r,e):8==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]][i[7]](this,r,e):9==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]][i[7]][i[8]](this,r,e):10==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]][i[7]][i[8]][i[9]](this,r,e):this._log.warn("parts.length",i.length),s){s.opId=null;for(const t in CABLES.OPS)CABLES.OPS[t].objName==r&&(s.opId=t)}}}catch(t){if(this._crashedOps.push(r),this.emitEvent("exceptionOp",t,r,s),!this.isEditorMode())throw this._log.error(t),this._log.error("[instancing error] "+r,t),CABLES.api&&CABLES.api.sendErrorReport(t),this.exitError("INSTANCE_ERR","Instancing Error "+r,t),new Error("instancing error "+r)}return s?(s.objName=r,s.patch=this):this._log.log("no op was created!?",t,e),s},Mt.prototype.addOp=function(t,e,i,s){const r=this.createOp(t,i);if(r){if(e&&e.hasOwnProperty("errors")&&delete e.errors,e&&e.hasOwnProperty("error")&&delete e.error,r.uiAttr(e),r.onCreate&&r.onCreate(),r.hasOwnProperty("onAnimFrame")&&this.addOnAnimFrame(r),r.hasOwnProperty("onMasterVolumeChanged")&&this._volumeListeners.push(r),this._opIdCache[r.id])return void this._log.warn("opid with id "+r.id+" already exists in patch!");this.ops.push(r),this._opIdCache[r.id]=r,this.emitEvent("onOpAdd",r,s),r.init&&r.init()}else this._log.error("addop: no op.....");return r},Mt.prototype.addOnAnimFrame=function(t){for(let e=0;e<this.animFrameOps.length;e++)if(this.animFrameOps[e]==t)return;this.animFrameOps.push(t)},Mt.prototype.removeOnAnimFrame=function(t){for(let e=0;e<this.animFrameOps.length;e++)if(this.animFrameOps[e]==t)return void this.animFrameOps.splice(e,1)},Mt.prototype.addOnAnimFrameCallback=function(t){this.animFrameCallbacks.push(t)},Mt.prototype.removeOnAnimCallback=function(t){for(let e=0;e<this.animFrameCallbacks.length;e++)if(this.animFrameCallbacks[e]==t)return void this.animFrameCallbacks.splice(e,1)},Mt.prototype.deleteOp=function(t,e,i){let s=!1;for(const r in this.ops)if(this.ops[r].id==t){const n=this.ops[r];let o=null,h=null;if(n){s=!0,e&&n.portsIn.length>0&&n.portsIn[0].isLinked()&&n.portsOut.length>0&&n.portsOut[0].isLinked()&&n.portsIn[0].getType()==n.portsOut[0].getType()&&(o=n.portsIn[0].links[0].getOtherPort(n.portsIn[0]),h=n.portsOut[0].links[0].getOtherPort(n.portsOut[0]));const a=this.ops[r];a.removeLinks(),a.emitEvent("onDelete",this.ops[r]),this.onDelete&&(this._log.warn("deprecated this.onDelete",this.onDelete),this.onDelete(a)),this.ops.splice(r,1),this.emitEvent("onOpDelete",a,i),a.onDelete&&a.onDelete(i),a.cleanUp(),null!==o&&null!==h&&this.link(o.parent,o.getName(),h.parent,h.getName()),delete this._opIdCache[t];break}}s||this._log.warn("core patch deleteop: not found...")},Mt.prototype.getFrameNum=function(){return this._frameNum},Mt.prototype.renderFrame=function(t){this.timer.update(),this.freeTimer.update();const e=this.timer.getTime(),i=performance.now();for(let t=0;t<this.animFrameCallbacks.length;++t)this.animFrameCallbacks[t]&&this.animFrameCallbacks[t](e,this._frameNum);for(let t=0;t<this.animFrameOps.length;++t)this.animFrameOps[t].onAnimFrame&&this.animFrameOps[t].onAnimFrame(e);this.cgl.profileData.profileOnAnimFrameOps=performance.now()-i,this.emitEvent("onRenderFrame",e),this._frameNum++,1==this._frameNum&&this.config.onFirstFrameRendered&&this.config.onFirstFrameRendered()},Mt.prototype.exec=function(t){if(!this._renderOneFrame&&(this._paused||this.aborted))return;this.config.fpsLimit=this.config.fpsLimit||0,this.config.fpsLimit&&(this._frameInterval=1e3/this.config.fpsLimit);const e=CABLES.now(),i=e-this._frameNext;if(this.isEditorMode()&&!this._renderOneFrame&&e-this._lastFrameTime>=500&&0!==this._lastFrameTime&&!this._frameWasdelayed)return this._lastFrameTime=0,setTimeout(this.exec.bind(this),500),this.emitEvent("renderDelayStart"),void(this._frameWasdelayed=!0);if(this._renderOneFrame||0===this.config.fpsLimit||i>this._frameInterval||this._frameWasdelayed){const t=CABLES.now();this.renderFrame(),this._perf._lastFrameTime=CABLES.now(),this._perf._fpsFrameCount++,this._perf._fpsMsCount+=CABLES.now()-t,this._frameInterval&&(this._frameNext=e-i%this._frameInterval)}this._frameWasdelayed&&(this.emitEvent("renderDelayEnd"),this._frameWasdelayed=!1),this._renderOneFrame&&(this.onOneFrameRendered&&this.onOneFrameRendered(),this.emitEvent("renderedOneFrame"),this._renderOneFrame=!1),CABLES.now()-this._perf._fpsStart>=1e3&&this._perf.fps!=this._perf._fpsFrameCount&&(this._perf.fps=this._perf._fpsFrameCount,this._perf.ms=Math.round(this._perf._fpsMsCount/this._perf._fpsFrameCount),this.emitEvent("performance",this._perf),this._perf._fpsFrameCount=0,this._perf._fpsMsCount=0,this._perf._fpsStart=CABLES.now()),this.config.doRequestAnimation&&(this._animReq=requestAnimationFrame(this.exec.bind(this)))},Mt.prototype.link=function(t,e,i,s,r,n){if(!t)return void this._log.warn("link: op1 is null ");if(!i)return void this._log.warn("link: op2 is null");const o=t.getPort(e,r),h=i.getPort(s,r);if(o)if(h){if(!o.shouldLink(o,h)||!h.shouldLink(o,h))return!1;if(St.canLink(o,h)){const t=new St(this);return t.link(o,h),this.emitEvent("onLink",o,h,t,n),t}}else this._log.warn("port not found! "+s+" of "+i.name+"("+i.objName+")");else this._log.warn("port not found! "+e+"("+t.objName+")")},Mt.prototype.serialize=function(t){const e={};(t=t||{}).hasOwnProperty("removeBlueprints")||(t.removeBlueprints=!0),t.hasOwnProperty("removeFromNetworkAttr")||(t.removeFromNetworkAttr=!0),e.ops=[],e.settings=this.settings;for(const i in this.ops){const s=this.ops[i];t.removeBlueprints&&s.storage&&s.storage.blueprint||(t.removeFromNetworkAttr&&s.uiAttribs&&s.uiAttribs.hasOwnProperty("fromNetwork")&&delete s.uiAttribs.fromNetwork,e.ops.push(s.getSerialized()))}return t.asObject?e:JSON.stringify(e)},Mt.prototype.getOpById=function(t){return this._opIdCache[t]},Mt.prototype.getOpsByName=function(t){const e=[];for(const i in this.ops)this.ops[i].name==t&&e.push(this.ops[i]);return e},Mt.prototype.getOpsByObjName=function(t){const e=[];for(const i in this.ops)this.ops[i].objName==t&&e.push(this.ops[i]);return e},Mt.prototype.loadLib=function(t){C("/ui/libs/"+t+".js",(t,e)=>{const i=document.createElement("script");i.type="text/javascript",i.text=e,document.getElementsByTagName("head")[0].appendChild(i)},"GET")},Mt.prototype.reloadOp=function(t,e){let i=0;const s=[],r=[];for(const e in this.ops)this.ops[e].objName==t&&r.push(this.ops[e]);for(let e=0;e<r.length;e++){i++;const n=r[e];n.deleted=!0;const o=this,h=this.addOp(t,n.uiAttribs);if(!h)continue;let a,l;for(a in n&&n.storage&&(h.storage=n.storage),s.push(h),n.portsIn)if(0===n.portsIn[a].links.length){const t=h.getPort(n.portsIn[a].name);t?(t.set(n.portsIn[a].get()),n.portsIn[a].getVariableName()&&t.setVariable(n.portsIn[a].getVariableName())):this._log.error("[reloadOp] could not set port "+n.portsIn[a].name+", propably renamed port ?")}else for(;n.portsIn[a].links.length;){const t=n.portsIn[a].links[0].portIn.name,e=n.portsIn[a].links[0].portOut.name,i=n.portsIn[a].links[0].portOut.parent;n.portsIn[a].links[0].remove(),l=o.link(h,t,i,e),l?l.setValue():this._log.warn("[reloadOp] relink after op reload not successfull for port "+e)}for(a in n.portsOut)for(;n.portsOut[a].links.length;){const t=n.portsOut[a].links[0].portOut.name,e=n.portsOut[a].links[0].portIn.name,i=n.portsOut[a].links[0].portIn.parent;n.portsOut[a].links[0].remove(),l=o.link(h,t,i,e),l?l.setValue():this._log.warn("relink after op reload not successfull for port "+e)}this.deleteOp(n.id,!1,!0)}e(i,s)},Mt.prototype.getSubPatchOps=function(t){const e=[];for(const i in this.ops)this.ops[i].uiAttribs&&this.ops[i].uiAttribs.subPatch==t&&e.push(this.ops[i]);return e},Mt.prototype.getSubPatchOp=function(t,e){for(const i in this.ops)if(this.ops[i].uiAttribs&&this.ops[i].uiAttribs.subPatch==t&&this.ops[i].objName==e)return this.ops[i];return!1},Mt.prototype._addLink=function(t,e,i,s){this.link(this.getOpById(t),i,this.getOpById(e),s,!1,!0)},Mt.prototype.deSerialize=function(t,e){if(this.aborted)return;const i=[],s=this.loading.start("core","deserialize");this.namespace=t.namespace||"",this.name=t.name||"","string"==typeof t&&(t=JSON.parse(t)),this.settings=t.settings,this.emitEvent("patchLoadStart");for(const s in t.ops){const r=CABLES.now(),n=t.ops[s];let o=null;try{o=n.opId?this.addOp(n.opId,n.uiAttribs,n.id,!0):this.addOp(n.objName,n.uiAttribs,n.id,!0)}catch(t){throw this._log.warn("[instancing error] op data:",n,t),new Error("instancing error: "+n.objName)}if(o){e&&(o.id=T()),o.portsInData=n.portsIn,o._origData=n,o.storage=n.storage;for(const t in n.portsIn){const e=n.portsIn[t],i=o.getPort(e.name);!i||"bool"!=i.uiAttribs.display&&"bool"!=i.uiAttribs.type||isNaN(e.value)||(e.value=!0===e.value),i&&void 0!==e.value&&i.type!=l.OP_PORT_TYPE_TEXTURE&&i.set(e.value),i&&i.deSerializeSettings(e)}for(const e in n.portsOut){const i=o.getPort(n.portsOut[e].name);i&&i.type!=l.OP_PORT_TYPE_TEXTURE&&n.portsOut[e].hasOwnProperty("value")&&i.set(t.ops[s].portsOut[e].value)}i.push(o)}const h=Math.round(100*(CABLES.now()-r))/100;!this.silent&&h>200&&this._log.warn("long op init ",t.ops[s].objName,h)}for(const t in this.ops)this.ops[t].onLoadedValueSet&&(this.ops[t].onLoadedValueSet(this.ops[t]._origData),this.ops[t].onLoadedValueSet=null,this.ops[t]._origData=null);if(t.ops)for(let e=0;e<t.ops.length;e++){if(t.ops[e].portsIn)for(let i=0;i<t.ops[e].portsIn.length;i++)if(t.ops[e].portsIn[i].links)for(let s=0;s<t.ops[e].portsIn[i].links.length;s++)t.ops[e].portsIn[i].links[s]&&this._addLink(t.ops[e].portsIn[i].links[s].objIn,t.ops[e].portsIn[i].links[s].objOut,t.ops[e].portsIn[i].links[s].portIn,t.ops[e].portsIn[i].links[s].portOut);if(t.ops[e].portsOut)for(let i=0;i<t.ops[e].portsOut.length;i++)if(t.ops[e].portsOut[i].links)for(let s=0;s<t.ops[e].portsOut[i].links.length;s++)t.ops[e].portsOut[i].links[s]&&this._addLink(t.ops[e].portsOut[i].links[s].objIn,t.ops[e].portsOut[i].links[s].objOut,t.ops[e].portsOut[i].links[s].portIn,t.ops[e].portsOut[i].links[s].portOut)}for(const t in this.ops)this.ops[t].onLoaded&&(this.ops[t].onLoaded(),this.ops[t].onLoaded=null);for(const t in this.ops)this.ops[t].init&&(this.ops[t].init(),this.ops[t].init=null);if(this.config.variables)for(const t in this.config.variables)this.setVarValue(t,this.config.variables[t]);for(const t in this.ops)this.ops[t].initVarPorts(),delete this.ops[t].uiAttribs.pasted;setTimeout(()=>{this.loading.finished(s)},100),this.config.onPatchLoaded&&this.config.onPatchLoaded(this),this.emitEvent("patchLoadEnd",i,t,e)},Mt.prototype.profile=function(t){this.profiler=new Ct(this);for(const e in this.ops)this.ops[e].profile(t)},Mt.prototype.setVariable=function(t,e){void 0!==this._variables[t]?this._variables[t].setValue(e):this._log.warn("variable "+t+" not found!")},Mt.prototype._sortVars=function(){if(!this.isEditorMode())return;const t={};Object.keys(this._variables).sort((t,e)=>t.localeCompare(e,"en",{sensitivity:"base"})).forEach(e=>{t[e]=this._variables[e]}),this._variables=t},Mt.prototype.hasVar=function(t){return void 0!==this._variables[t]},Mt.prototype.setVarValue=function(t,e,i){return this.hasVar(t)?this._variables[t].setValue(e):(this._variables[t]=new wt(t,e,i),this._sortVars(),this.emitEvent("variablesChanged")),this._variables[t]},Mt.prototype.getVarValue=function(t,e){if(this._variables.hasOwnProperty(t))return this._variables[t].getValue()},Mt.prototype.getVar=function(t){if(this._variables.hasOwnProperty(t))return this._variables[t]},Mt.prototype.deleteVar=function(t){for(let e=0;e<this.ops.length;e++)for(let i=0;i<this.ops[e].portsIn.length;i++)this.ops[e].portsIn[i].getVariableName()==t&&this.ops[e].portsIn[i].setVariable(null);delete this._variables[t],this.emitEvent("variableDeleted",t),this.emitEvent("variablesChanged")},Mt.prototype.getVars=function(t){if(void 0===t)return this._variables;const e=[];t==CABLES.OP_PORT_TYPE_STRING&&(t="string"),t==CABLES.OP_PORT_TYPE_VALUE&&(t="number"),t==CABLES.OP_PORT_TYPE_ARRAY&&(t="array"),t==CABLES.OP_PORT_TYPE_OBJECT&&(t="object");for(const i in this._variables)this._variables[i].type&&this._variables[i].type!=t||e.push(this._variables[i]);return e},Mt.prototype.exitError=function(t,e,i){if(this.aborted=!0,this&&this.config&&this.config.onError)this.config.onError(t,e);else if(!this.isEditorMode()){const s=document.createElement("div"),r=this.cgl.canvas.getBoundingClientRect();s.setAttribute("style","position:absolute;border:5px solid red;padding:15px;background-color:black;color:white;font-family:monospace;"),s.style.top=r.top+"px",s.style.left=r.left+"px";let n="cables - An error occured:<br/>";n+="["+t+"] - "+e,i&&(n+="<br/>Exception: "+i.message),s.innerHTML=n;const o=this.cgl.canvas.parentElement;for(;o.hasChildNodes();)o.removeChild(o.lastChild);document.body.appendChild(s)}},Mt.prototype.preRenderOps=function(){this._log.log("prerendering...");for(let t=0;t<this.ops.length;t++)this.ops[t].preRender&&(this.ops[t].preRender(),this._log.log("prerender "+this.ops[t].objName))},Mt.prototype.dispose=function(){this.pause(),this.clear()},Mt.prototype.pushTriggerStack=function(t){this._triggerStack.push(t)},Mt.prototype.popTriggerStack=function(){this._triggerStack.pop()},Mt.prototype.printTriggerStack=function(){if(0==this._triggerStack.length)return void console.log("stack length",this._triggerStack.length);console.groupCollapsed("trigger port stack "+this._triggerStack[this._triggerStack.length-1].parent.name+"."+this._triggerStack[this._triggerStack.length-1].name);const t=[];for(let e=0;e<this._triggerStack.length;e++)t.push(e+". "+this._triggerStack[e].parent.name+" "+this._triggerStack[e].name);console.table(t),console.groupEnd()};var Ut=Mt;const Lt={addPatch:function(t,e){let i=t,s=A();if("string"==typeof t&&(s=t,i=document.getElementById(s),!i))return void console.error(s+" Polyshape Container Element not found!");const r=document.createElement("canvas");return r.id="glcanvas_"+s,r.width=i.clientWidth,r.height=i.clientHeight,window.addEventListener("resize",function(){this.setAttribute("width",i.clientWidth),this.height=i.clientHeight}.bind(r)),i.appendChild(r),(e=e||{}).glCanvasId=r.id,e.onError||(e.onError=function(t){console.error(t)}),CABLES.patch=new Ut(e),r}},Bt={toneJsInitialized:!1,createAudioContext:function(t){if(window.AudioContext=window.AudioContext||window.webkitAudioContext,window.AudioContext)return window.audioContext||(window.audioContext=new AudioContext),window.Tone&&!Bt.toneJsInitialized&&(Tone.setContext(window.audioContext),Bt.toneJsInitialized=!0),window.audioContext;t.patch.config.onError("NO_WEBAUDIO","Web Audio is not supported in this browser.")},getAudioContext:function(){return window.audioContext},createAudioInPort:function(t,e,i,s){if(!t||!e||!i){const e="ERROR: createAudioInPort needs three parameters, op, portName and audioNode";throw t.log(e),new Error(e)}s||(s=0),t.webAudio=t.webAudio||{},t.webAudio.audioInPorts=t.webAudio.audioInPorts||[];const r=t.inObject(e);return r.webAudio={},r.webAudio.previousAudioInNode=null,r.webAudio.audioNode=i,t.webAudio.audioInPorts[e]=r,r.onChange=function(){const e=r.get();if(e)try{e.connect?(e.connect(r.webAudio.audioNode,0,s),t.setUiError("audioCtx",null)):t.setUiError("audioCtx","The passed input is not an audio context. Please make sure you connect an audio context to the input.",2)}catch(i){throw t.log("Error: Failed to connect web audio node!",i),t.log("port.webAudio.audioNode",r.webAudio.audioNode),t.log("audioInNode: ",e),t.log("inputChannelIndex:",s),t.log("audioInNode.connect: ",e.connect),i}else if(r.webAudio.previousAudioInNode)try{r.webAudio.previousAudioInNode.disconnect&&r.webAudio.previousAudioInNode.disconnect(r.webAudio.audioNode,0,s),t.setUiError("audioCtx",null)}catch(e){try{r.webAudio.previousAudioInNode.disconnect(r.webAudio.audioNode)}catch(i){throw t.log("Disconnecting audio node with in/out port index, as well as without in/out-port-index did not work ",e),e.printStackTrace&&e.printStackTrace(),e}}r.webAudio.previousAudioInNode=e},r},replaceNodeInPort:function(t,e,i){const s=t.webAudio.previousAudioInNode;if(s&&s.disconnect){try{s.disconnect(e)}catch(t){throw t.printStackTrace&&t.printStackTrace(),new Error("replaceNodeInPort: Could not disconnect old audio node. "+t.name+" "+t.message)}t.webAudio.audioNode=i;try{s.connect(i)}catch(t){throw t.printStackTrace&&t.printStackTrace(),new Error("replaceNodeInPort: Could not connect to new node. "+t.name+" "+t.message)}}},createAudioOutPort:function(t,e,i){if(!t||!e||!i){const e="ERROR: createAudioOutPort needs three parameters, op, portName and audioNode";throw t.log(e),new Error(e)}const s=t.outObject(e);return s.set(i),s},createAudioParamInPort:function(t,e,i,s,r){if(!t||!e||!i)return t.log("ERROR: createAudioParamInPort needs three parameters, op, portName and audioNode"),t&&t.name&&t.log("opname: ",t.name),t.log("portName",e),void t.log("audioNode: ",i);t.webAudio=t.webAudio||{},t.webAudio.audioInPorts=t.webAudio.audioInPorts||[];const n=t.inDynamic(e,[l.OP_PORT_TYPE_VALUE,l.OP_PORT_TYPE_OBJECT],s,r);return n.webAudio={},n.webAudio.previousAudioInNode=null,n.webAudio.audioNode=i,t.webAudio.audioInPorts[e]=n,n.onChange=function(){const e=n.get(),i=n.webAudio.audioNode,s=Bt.getAudioContext();if(null!=e)if("object"==typeof e&&e.connect){try{e.connect(i)}catch(e){throw t.log("Could not connect audio node: ",e),e.printStackTrace&&e.printStackTrace(),e}n.webAudio.previousAudioInNode=e}else{if(i._param&&i._param.minValue&&i._param.maxValue)if(e>=i._param.minValue&&e<=i._param.maxValue)try{i.setValueAtTime?i.setValueAtTime(e,s.currentTime):i.value=e}catch(e){throw t.log("Possible AudioParam problem with tone.js op: ",e),e.printStackTrace&&e.printStackTrace(),e}else t.log("Warning: The value for an audio parameter is out of range!");else if(i.minValue&&i.maxValue)if(e>=i.minValue&&e<=i.maxValue)try{i.setValueAtTime?i.setValueAtTime(e,s.currentTime):i.value=e}catch(e){throw t.log("AudioParam has minValue / maxValue defined, and value is in range, but setting the value failed! ",e),e.printStackTrace&&e.printStackTrace(),e}else t.log("Warning: The value for an audio parameter is out of range!");else try{i.setValueAtTime?i.setValueAtTime(e,s.currentTime):i.value=e}catch(e){throw t.log("Possible AudioParam problem (without minValue / maxValue): ",e),e.printStackTrace&&e.printStackTrace(),e}if(n.webAudio.previousAudioInNode&&n.webAudio.previousAudioInNode.disconnect){try{n.webAudio.previousAudioInNode.disconnect(i)}catch(e){throw t.log("Could not disconnect previous audio node: ",e),e}n.webAudio.previousAudioInNode=void 0}}else n.webAudio.previousAudioInNode},n},loadAudioFile:function(t,e,i,s,r){const n=Bt.createAudioContext();let o=null;(r||void 0===r)&&(o=t.loading.start("audio",e),t.isEditorMode()&&gui.jobs().start({id:"loadaudio"+o,title:" loading audio ("+e+")"}));const h=new XMLHttpRequest;e&&(h.open("GET",e,!0),h.responseType="arraybuffer",h.onload=function(){t.loading.finished(o),t.isEditorMode()&&gui.jobs().finish("loadaudio"+o),n.decodeAudioData(h.response,i,s)},h.send())},isValidToneTime:function(t){try{new Tone.Time(t)}catch(t){return!1}return!0},isValidToneNote:function(t){try{Tone.Frequency(t)}catch(t){return!1}return!0}},kt=function(t,e,i){this._patch=t,this.connector=i,this._log=new h("PatchConnectionReceiver")};kt.prototype._addOp=function(t){let e=null;t.vars.uiAttribs&&(e=t.vars.uiAttribs);const i=this._patch.addOp(t.vars.objName,e,t.vars.opId,!0);i&&(i.id=t.vars.opId,t.vars.portsIn&&t.vars.portsIn.forEach(t=>{const e=i.getPortByName(t.name);e&&e.set(t.value)}))},kt.prototype._receive=function(t){let e={};if(e=t.hasOwnProperty("event")?t:JSON.parse(t.data),e.event==u.PACO_OP_CREATE){if(this._patch.getOpById(e.vars.opId))return;this._log.verbose("op create:",e.vars.objName),window.gui?gui.serverOps.loadOpLibs(e.vars.objName,()=>{this._addOp(e)}):this._addOp(e)}else if(e.event==u.PACO_DESERIALIZE)e.vars.json&&(window.gui?gui.serverOps.loadProjectLibs(e.vars.json,()=>{this._patch.deSerialize(e.vars.json,e.vars.genIds)}):this._patch.deSerialize(e.vars.json,e.vars.genIds));else if(e.event==u.PACO_LOAD)this._log.verbose("PACO load patch....."),this._patch.clear(),window.gui?gui.serverOps.loadProjectLibs(JSON.parse(e.vars.patch),()=>{this._patch.deSerialize(e.vars.patch)}):this._patch.deSerialize(e.vars.patch);else if(e.event==u.PACO_CLEAR)this._patch.clear(),this._log.log("clear");else if(e.event==u.PACO_OP_DELETE){this._log.verbose("op delete",e.vars.objName);this._patch.getOpById(e.vars.op);this._patch.deleteOp(e.vars.op,!0)}else if(e.event==u.PACO_OP_ENABLE){const t=this._patch.getOpById(e.vars.op);t&&(t.enabled=!0)}else if(e.event==u.PACO_OP_DISABLE){const t=this._patch.getOpById(e.vars.op);t&&(t.enabled=!1)}else if(e.event==u.PACO_UIATTRIBS){const t=this._patch.getOpById(e.vars.op);t&&t.setUiAttrib(e.vars.uiAttribs)}else if(e.event==u.PACO_UNLINK){const t=this._patch.getOpById(e.vars.op1),i=this._patch.getOpById(e.vars.op2);if(!t||!i)return;const s=t.getPort(e.vars.port1),r=i.getPort(e.vars.port2);s&&r?s.removeLinkTo(r):this._log.warn("paco unlink could not find port...")}else if(e.event==u.PACO_LINK){const t=this._patch.getOpById(e.vars.op1),i=this._patch.getOpById(e.vars.op2);t&&i&&this._patch.link(t,e.vars.port1,i,e.vars.port2)}else if(e.event==u.PACO_VALUECHANGE){if("+ create new one"===e.vars.v)return;const t=this._patch.getOpById(e.vars.op);if(t){const i=t.getPort(e.vars.port);i&&i.set(e.vars.v)}}else if(e.event==u.PACO_VARIABLES){const t=this._patch.getOpById(e.vars.opId);t&&t.varName&&t.varName.set(e.vars.varName)}else if(e.event==u.PACO_TRIGGERS){const t=this._patch.getOpById(e.vars.opId);t&&t.varName&&t.varName.set(e.vars.varName)}else if(e.event==u.PACO_PORT_SETVARIABLE){const t=this._patch.getOpById(e.vars.opId);if(t){const i=t.getPortByName(e.vars.portName);i&&i.setVariable(e.vars.variableName)}}else if(e.event==u.PACO_PORT_SETANIMATED){const t=this._patch.getOpById(e.vars.opId);if(t){t.portsIn[e.vars.portIndex]&&e.vars.hasOwnProperty("targetState")&&this._patch.emitEvent("pacoPortValueSetAnimated",t,e.vars.portIndex,e.vars.targetState,e.vars.defaultValue)}}else if(e.event==u.PACO_PORT_ANIM_UPDATED){const t=this._patch.getOpById(e.vars.opId);if(t){const i=t.getPortByName(e.vars.portName);if(i){const t=i.getSerialized();t.anim=e.vars.anim,i.anim=null,i.deSerializeSettings(t),this._patch.emitEvent("pacoPortAnimUpdated",i)}}}else this._log.warn("unknown patchConnectionEvent!",t)};const Dt=function(t){this.connectors=[],this.paused=!1,t.addEventListener("onOpDelete",t=>{this.send(CABLES.PACO_OP_DELETE,{op:t.id,objName:t.objName})}),t.addEventListener("patchClearStart",()=>{this.paused=!0}),t.addEventListener("patchClearEnd",()=>{this.paused=!1}),t.addEventListener("patchLoadStart",()=>{this.paused=!0}),t.addEventListener("patchLoadEnd",(t,e,i)=>{this.paused=!1,this.send(CABLES.PACO_DESERIALIZE,{json:e,genIds:i})}),t.addEventListener("onOpAdd",t=>{const e=[];t.portsIn.forEach(t=>{const i={id:t.id,name:t.name,value:t.get()};e.push(i)});let i={};t.uiAttribs&&(i={...t.uiAttribs}),this.send(CABLES.PACO_OP_CREATE,{opId:t.id,objName:t.objName,uiAttribs:i,portsIn:e})}),t.addEventListener("onUnLink",(t,e)=>{this.send(CABLES.PACO_UNLINK,{op1:t.parent.id,op2:e.parent.id,port1:t.getName(),port2:e.getName()})}),t.addEventListener("onUiAttribsChange",(t,e)=>{e&&(delete e.extendTitle,delete e.history,delete e.translate,Object.keys(e).length>0&&this.send(CABLES.PACO_UIATTRIBS,{op:t.id,uiAttribs:e}))}),t.addEventListener("opVariableNameChanged",(t,e)=>{const i={opId:t.id,varName:e};this.send(CABLES.PACO_VARIABLES,i)}),t.addEventListener("opTriggerNameChanged",(t,e)=>{const i={opId:t.id,varName:e};this.send(CABLES.PACO_TRIGGERS,i)}),t.addEventListener("onLink",(t,e)=>{this.send(CABLES.PACO_LINK,{op1:t.parent.id,op2:e.parent.id,port1:t.name,port2:e.name})}),t.addEventListener("portSetVariable",(t,e,i)=>{const s={opId:t.id,portName:e.name,variableName:i};this.send(CABLES.PACO_PORT_SETVARIABLE,s)}),t.addEventListener("portAnimUpdated",(t,e,i)=>{if(t&&e){const s={opId:t.id,portName:e.name,anim:i.getSerialized()};this.send(CABLES.PACO_PORT_ANIM_UPDATED,s)}})};Dt.prototype.send=function(t,e){if(!this.paused&&(t!==CABLES.PACO_VALUECHANGE||"+ create new one"!==e.v))for(let i=0;i<this.connectors.length;i++)this.connectors[i].send(t,e)};const Vt=function(){window.BroadcastChannel&&(this.bc=new BroadcastChannel("test_channel"))};Vt.prototype.receive=function(t){this.bc&&(this._log.log("init"),this.bc.onmessage=t._receive.bind(t))},Vt.prototype.send=function(t,e){if(!this.bc)return;const i={};i.event=t,i.vars=e,this.bc.postMessage(JSON.stringify(i))};const Gt=Object.assign({EventTarget:W,EMBED:Lt,Link:St,Port:et,Op:Pt,Profiler:Ct,Patch:Ut,Instancing:Ft,Timer:pt,WEBAUDIO:Bt,Variable:function(){let t=null;const e=[];this.onChanged=function(t){e.push(t)},this.getValue=function(){return t},this.setValue=function(e){t=e,this.emitChanged()},this.emitChanged=function(){for(let t=0;t<e.length;t++)e[t]()}},LoadingStatus:Nt,now:_t,internalNow:gt},r,s,n,a,o,c,u,a,l);e.default=Gt;(function(){return!this})()||console.warn("not in strict mode: index core")}]).default;
//# sourceMappingURL=cables.min.js.map

var CABLES = CABLES || {}; CABLES.build = {"timestamp":1658229186222,"created":"2022-07-19T11:13:06.222Z","git":{"branch":"master","commit":"819fc0e7c02646be982b7338326b610a383cd8f6","date":"2022-07-19T11:09:39.000Z","message":"corelib"}};
/*!
@fileoverview gl-matrix - High performance matrix and vector operations
@author Brandon Jones
@author Colin MacKenzie IV
@version 3.1.0

Copyright (c) 2015-2019, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t=t||self).glMatrix={})}(this,function(t){"use strict";var n=1e-6,a="undefined"!=typeof Float32Array?Float32Array:Array,r=Math.random;var u=Math.PI/180;Math.hypot||(Math.hypot=function(){for(var t=0,n=arguments.length;n--;)t+=arguments[n]*arguments[n];return Math.sqrt(t)});var e=Object.freeze({EPSILON:n,get ARRAY_TYPE(){return a},RANDOM:r,setMatrixArrayType:function(t){a=t},toRadian:function(t){return t*u},equals:function(t,a){return Math.abs(t-a)<=n*Math.max(1,Math.abs(t),Math.abs(a))}});function o(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*i+e*c,t[1]=u*i+o*c,t[2]=r*h+e*s,t[3]=u*h+o*s,t}function i(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t}var c=o,h=i,s=Object.freeze({create:function(){var t=new a(4);return a!=Float32Array&&(t[1]=0,t[2]=0),t[0]=1,t[3]=1,t},clone:function(t){var n=new a(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},fromValues:function(t,n,r,u){var e=new a(4);return e[0]=t,e[1]=n,e[2]=r,e[3]=u,e},set:function(t,n,a,r,u){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t},transpose:function(t,n){if(t===n){var a=n[1];t[1]=n[2],t[2]=a}else t[0]=n[0],t[1]=n[2],t[2]=n[1],t[3]=n[3];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*e-u*r;return o?(o=1/o,t[0]=e*o,t[1]=-r*o,t[2]=-u*o,t[3]=a*o,t):null},adjoint:function(t,n){var a=n[0];return t[0]=n[3],t[1]=-n[1],t[2]=-n[2],t[3]=a,t},determinant:function(t){return t[0]*t[3]-t[2]*t[1]},multiply:o,rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+e*i,t[1]=u*c+o*i,t[2]=r*-i+e*c,t[3]=u*-i+o*c,t},scale:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1];return t[0]=r*i,t[1]=u*i,t[2]=e*c,t[3]=o*c,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=-a,t[3]=r,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t},str:function(t){return"mat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3])},LDU:function(t,n,a,r){return t[2]=r[2]/r[0],a[0]=r[0],a[1]=r[1],a[3]=r[3]-t[2]*a[1],[t,n,a]},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t},subtract:i,exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=a[0],c=a[1],h=a[2],s=a[3];return Math.abs(r-i)<=n*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(u-c)<=n*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(e-h)<=n*Math.max(1,Math.abs(e),Math.abs(h))&&Math.abs(o-s)<=n*Math.max(1,Math.abs(o),Math.abs(s))},multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t},mul:c,sub:h});function M(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1],M=a[2],f=a[3],l=a[4],v=a[5];return t[0]=r*h+e*s,t[1]=u*h+o*s,t[2]=r*M+e*f,t[3]=u*M+o*f,t[4]=r*l+e*v+i,t[5]=u*l+o*v+c,t}function f(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t}var l=M,v=f,b=Object.freeze({create:function(){var t=new a(6);return a!=Float32Array&&(t[1]=0,t[2]=0,t[4]=0,t[5]=0),t[0]=1,t[3]=1,t},clone:function(t){var n=new a(6);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},fromValues:function(t,n,r,u,e,o){var i=new a(6);return i[0]=t,i[1]=n,i[2]=r,i[3]=u,i[4]=e,i[5]=o,i},set:function(t,n,a,r,u,e,o){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=a*e-r*u;return c?(c=1/c,t[0]=e*c,t[1]=-r*c,t[2]=-u*c,t[3]=a*c,t[4]=(u*i-e*o)*c,t[5]=(r*o-a*i)*c,t):null},determinant:function(t){return t[0]*t[3]-t[1]*t[2]},multiply:M,rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=Math.sin(a),s=Math.cos(a);return t[0]=r*s+e*h,t[1]=u*s+o*h,t[2]=r*-h+e*s,t[3]=u*-h+o*s,t[4]=i,t[5]=c,t},scale:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1];return t[0]=r*h,t[1]=u*h,t[2]=e*s,t[3]=o*s,t[4]=i,t[5]=c,t},translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=r*h+e*s+i,t[5]=u*h+o*s+c,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=-a,t[3]=r,t[4]=0,t[5]=0,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t[4]=0,t[5]=0,t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=n[0],t[5]=n[1],t},str:function(t){return"mat2d("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],1)},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t},subtract:f,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=a[0],s=a[1],M=a[2],f=a[3],l=a[4],v=a[5];return Math.abs(r-h)<=n*Math.max(1,Math.abs(r),Math.abs(h))&&Math.abs(u-s)<=n*Math.max(1,Math.abs(u),Math.abs(s))&&Math.abs(e-M)<=n*Math.max(1,Math.abs(e),Math.abs(M))&&Math.abs(o-f)<=n*Math.max(1,Math.abs(o),Math.abs(f))&&Math.abs(i-l)<=n*Math.max(1,Math.abs(i),Math.abs(l))&&Math.abs(c-v)<=n*Math.max(1,Math.abs(c),Math.abs(v))},mul:l,sub:v});function m(){var t=new a(9);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[5]=0,t[6]=0,t[7]=0),t[0]=1,t[4]=1,t[8]=1,t}function d(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=a[0],l=a[1],v=a[2],b=a[3],m=a[4],d=a[5],x=a[6],p=a[7],y=a[8];return t[0]=f*r+l*o+v*h,t[1]=f*u+l*i+v*s,t[2]=f*e+l*c+v*M,t[3]=b*r+m*o+d*h,t[4]=b*u+m*i+d*s,t[5]=b*e+m*c+d*M,t[6]=x*r+p*o+y*h,t[7]=x*u+p*i+y*s,t[8]=x*e+p*c+y*M,t}function x(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t[6]=n[6]-a[6],t[7]=n[7]-a[7],t[8]=n[8]-a[8],t}var p=d,y=x,q=Object.freeze({create:m,fromMat4:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[4],t[4]=n[5],t[5]=n[6],t[6]=n[8],t[7]=n[9],t[8]=n[10],t},clone:function(t){var n=new a(9);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},fromValues:function(t,n,r,u,e,o,i,c,h){var s=new a(9);return s[0]=t,s[1]=n,s[2]=r,s[3]=u,s[4]=e,s[5]=o,s[6]=i,s[7]=c,s[8]=h,s},set:function(t,n,a,r,u,e,o,i,c,h){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t[8]=h,t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},transpose:function(t,n){if(t===n){var a=n[1],r=n[2],u=n[5];t[1]=n[3],t[2]=n[6],t[3]=a,t[5]=n[7],t[6]=r,t[7]=u}else t[0]=n[0],t[1]=n[3],t[2]=n[6],t[3]=n[1],t[4]=n[4],t[5]=n[7],t[6]=n[2],t[7]=n[5],t[8]=n[8];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=s*o-i*h,f=-s*e+i*c,l=h*e-o*c,v=a*M+r*f+u*l;return v?(v=1/v,t[0]=M*v,t[1]=(-s*r+u*h)*v,t[2]=(i*r-u*o)*v,t[3]=f*v,t[4]=(s*a-u*c)*v,t[5]=(-i*a+u*e)*v,t[6]=l*v,t[7]=(-h*a+r*c)*v,t[8]=(o*a-r*e)*v,t):null},adjoint:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8];return t[0]=o*s-i*h,t[1]=u*h-r*s,t[2]=r*i-u*o,t[3]=i*c-e*s,t[4]=a*s-u*c,t[5]=u*e-a*i,t[6]=e*h-o*c,t[7]=r*c-a*h,t[8]=a*o-r*e,t},determinant:function(t){var n=t[0],a=t[1],r=t[2],u=t[3],e=t[4],o=t[5],i=t[6],c=t[7],h=t[8];return n*(h*e-o*c)+a*(-h*u+o*i)+r*(c*u-e*i)},multiply:d,translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=a[0],l=a[1];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=i,t[5]=c,t[6]=f*r+l*o+h,t[7]=f*u+l*i+s,t[8]=f*e+l*c+M,t},rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=Math.sin(a),l=Math.cos(a);return t[0]=l*r+f*o,t[1]=l*u+f*i,t[2]=l*e+f*c,t[3]=l*o-f*r,t[4]=l*i-f*u,t[5]=l*c-f*e,t[6]=h,t[7]=s,t[8]=M,t},scale:function(t,n,a){var r=a[0],u=a[1];return t[0]=r*n[0],t[1]=r*n[1],t[2]=r*n[2],t[3]=u*n[3],t[4]=u*n[4],t[5]=u*n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=n[0],t[7]=n[1],t[8]=1,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=0,t[3]=-a,t[4]=r,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=n[1],t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},fromMat2d:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=0,t[3]=n[2],t[4]=n[3],t[5]=0,t[6]=n[4],t[7]=n[5],t[8]=1,t},fromQuat:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a+a,i=r+r,c=u+u,h=a*o,s=r*o,M=r*i,f=u*o,l=u*i,v=u*c,b=e*o,m=e*i,d=e*c;return t[0]=1-M-v,t[3]=s-d,t[6]=f+m,t[1]=s+d,t[4]=1-h-v,t[7]=l-b,t[2]=f-m,t[5]=l+b,t[8]=1-h-M,t},normalFromMat4:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15],x=a*i-r*o,p=a*c-u*o,y=a*h-e*o,q=r*c-u*i,g=r*h-e*i,A=u*h-e*c,w=s*b-M*v,R=s*m-f*v,z=s*d-l*v,P=M*m-f*b,j=M*d-l*b,I=f*d-l*m,S=x*I-p*j+y*P+q*z-g*R+A*w;return S?(S=1/S,t[0]=(i*I-c*j+h*P)*S,t[1]=(c*z-o*I-h*R)*S,t[2]=(o*j-i*z+h*w)*S,t[3]=(u*j-r*I-e*P)*S,t[4]=(a*I-u*z+e*R)*S,t[5]=(r*z-a*j-e*w)*S,t[6]=(b*A-m*g+d*q)*S,t[7]=(m*y-v*A-d*p)*S,t[8]=(v*g-b*y+d*x)*S,t):null},projection:function(t,n,a){return t[0]=2/n,t[1]=0,t[2]=0,t[3]=0,t[4]=-2/a,t[5]=0,t[6]=-1,t[7]=1,t[8]=1,t},str:function(t){return"mat3("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8])},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t[8]=n[8]+a[8],t},subtract:x,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t[8]=n[8]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t[6]=n[6]+a[6]*r,t[7]=n[7]+a[7]*r,t[8]=n[8]+a[8]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=t[8],f=a[0],l=a[1],v=a[2],b=a[3],m=a[4],d=a[5],x=a[6],p=a[7],y=a[8];return Math.abs(r-f)<=n*Math.max(1,Math.abs(r),Math.abs(f))&&Math.abs(u-l)<=n*Math.max(1,Math.abs(u),Math.abs(l))&&Math.abs(e-v)<=n*Math.max(1,Math.abs(e),Math.abs(v))&&Math.abs(o-b)<=n*Math.max(1,Math.abs(o),Math.abs(b))&&Math.abs(i-m)<=n*Math.max(1,Math.abs(i),Math.abs(m))&&Math.abs(c-d)<=n*Math.max(1,Math.abs(c),Math.abs(d))&&Math.abs(h-x)<=n*Math.max(1,Math.abs(h),Math.abs(x))&&Math.abs(s-p)<=n*Math.max(1,Math.abs(s),Math.abs(p))&&Math.abs(M-y)<=n*Math.max(1,Math.abs(M),Math.abs(y))},mul:p,sub:y});function g(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function A(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=n[9],l=n[10],v=n[11],b=n[12],m=n[13],d=n[14],x=n[15],p=a[0],y=a[1],q=a[2],g=a[3];return t[0]=p*r+y*i+q*M+g*b,t[1]=p*u+y*c+q*f+g*m,t[2]=p*e+y*h+q*l+g*d,t[3]=p*o+y*s+q*v+g*x,p=a[4],y=a[5],q=a[6],g=a[7],t[4]=p*r+y*i+q*M+g*b,t[5]=p*u+y*c+q*f+g*m,t[6]=p*e+y*h+q*l+g*d,t[7]=p*o+y*s+q*v+g*x,p=a[8],y=a[9],q=a[10],g=a[11],t[8]=p*r+y*i+q*M+g*b,t[9]=p*u+y*c+q*f+g*m,t[10]=p*e+y*h+q*l+g*d,t[11]=p*o+y*s+q*v+g*x,p=a[12],y=a[13],q=a[14],g=a[15],t[12]=p*r+y*i+q*M+g*b,t[13]=p*u+y*c+q*f+g*m,t[14]=p*e+y*h+q*l+g*d,t[15]=p*o+y*s+q*v+g*x,t}function w(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=r+r,c=u+u,h=e+e,s=r*i,M=r*c,f=r*h,l=u*c,v=u*h,b=e*h,m=o*i,d=o*c,x=o*h;return t[0]=1-(l+b),t[1]=M+x,t[2]=f-d,t[3]=0,t[4]=M-x,t[5]=1-(s+b),t[6]=v+m,t[7]=0,t[8]=f+d,t[9]=v-m,t[10]=1-(s+l),t[11]=0,t[12]=a[0],t[13]=a[1],t[14]=a[2],t[15]=1,t}function R(t,n){return t[0]=n[12],t[1]=n[13],t[2]=n[14],t}function z(t,n){var a=n[0],r=n[1],u=n[2],e=n[4],o=n[5],i=n[6],c=n[8],h=n[9],s=n[10];return t[0]=Math.hypot(a,r,u),t[1]=Math.hypot(e,o,i),t[2]=Math.hypot(c,h,s),t}function P(t,n){var r=new a(3);z(r,n);var u=1/r[0],e=1/r[1],o=1/r[2],i=n[0]*u,c=n[1]*e,h=n[2]*o,s=n[4]*u,M=n[5]*e,f=n[6]*o,l=n[8]*u,v=n[9]*e,b=n[10]*o,m=i+M+b,d=0;return m>0?(d=2*Math.sqrt(m+1),t[3]=.25*d,t[0]=(f-v)/d,t[1]=(l-h)/d,t[2]=(c-s)/d):i>M&&i>b?(d=2*Math.sqrt(1+i-M-b),t[3]=(f-v)/d,t[0]=.25*d,t[1]=(c+s)/d,t[2]=(l+h)/d):M>b?(d=2*Math.sqrt(1+M-i-b),t[3]=(l-h)/d,t[0]=(c+s)/d,t[1]=.25*d,t[2]=(f+v)/d):(d=2*Math.sqrt(1+b-i-M),t[3]=(c-s)/d,t[0]=(l+h)/d,t[1]=(f+v)/d,t[2]=.25*d),t}function j(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t[6]=n[6]-a[6],t[7]=n[7]-a[7],t[8]=n[8]-a[8],t[9]=n[9]-a[9],t[10]=n[10]-a[10],t[11]=n[11]-a[11],t[12]=n[12]-a[12],t[13]=n[13]-a[13],t[14]=n[14]-a[14],t[15]=n[15]-a[15],t}var I=A,S=j,E=Object.freeze({create:function(){var t=new a(16);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t},clone:function(t){var n=new a(16);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n[9]=t[9],n[10]=t[10],n[11]=t[11],n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},fromValues:function(t,n,r,u,e,o,i,c,h,s,M,f,l,v,b,m){var d=new a(16);return d[0]=t,d[1]=n,d[2]=r,d[3]=u,d[4]=e,d[5]=o,d[6]=i,d[7]=c,d[8]=h,d[9]=s,d[10]=M,d[11]=f,d[12]=l,d[13]=v,d[14]=b,d[15]=m,d},set:function(t,n,a,r,u,e,o,i,c,h,s,M,f,l,v,b,m){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t[8]=h,t[9]=s,t[10]=M,t[11]=f,t[12]=l,t[13]=v,t[14]=b,t[15]=m,t},identity:g,transpose:function(t,n){if(t===n){var a=n[1],r=n[2],u=n[3],e=n[6],o=n[7],i=n[11];t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=a,t[6]=n[9],t[7]=n[13],t[8]=r,t[9]=e,t[11]=n[14],t[12]=u,t[13]=o,t[14]=i}else t[0]=n[0],t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=n[1],t[5]=n[5],t[6]=n[9],t[7]=n[13],t[8]=n[2],t[9]=n[6],t[10]=n[10],t[11]=n[14],t[12]=n[3],t[13]=n[7],t[14]=n[11],t[15]=n[15];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15],x=a*i-r*o,p=a*c-u*o,y=a*h-e*o,q=r*c-u*i,g=r*h-e*i,A=u*h-e*c,w=s*b-M*v,R=s*m-f*v,z=s*d-l*v,P=M*m-f*b,j=M*d-l*b,I=f*d-l*m,S=x*I-p*j+y*P+q*z-g*R+A*w;return S?(S=1/S,t[0]=(i*I-c*j+h*P)*S,t[1]=(u*j-r*I-e*P)*S,t[2]=(b*A-m*g+d*q)*S,t[3]=(f*g-M*A-l*q)*S,t[4]=(c*z-o*I-h*R)*S,t[5]=(a*I-u*z+e*R)*S,t[6]=(m*y-v*A-d*p)*S,t[7]=(s*A-f*y+l*p)*S,t[8]=(o*j-i*z+h*w)*S,t[9]=(r*z-a*j-e*w)*S,t[10]=(v*g-b*y+d*x)*S,t[11]=(M*y-s*g-l*x)*S,t[12]=(i*R-o*P-c*w)*S,t[13]=(a*P-r*R+u*w)*S,t[14]=(b*p-v*q-m*x)*S,t[15]=(s*q-M*p+f*x)*S,t):null},adjoint:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15];return t[0]=i*(f*d-l*m)-M*(c*d-h*m)+b*(c*l-h*f),t[1]=-(r*(f*d-l*m)-M*(u*d-e*m)+b*(u*l-e*f)),t[2]=r*(c*d-h*m)-i*(u*d-e*m)+b*(u*h-e*c),t[3]=-(r*(c*l-h*f)-i*(u*l-e*f)+M*(u*h-e*c)),t[4]=-(o*(f*d-l*m)-s*(c*d-h*m)+v*(c*l-h*f)),t[5]=a*(f*d-l*m)-s*(u*d-e*m)+v*(u*l-e*f),t[6]=-(a*(c*d-h*m)-o*(u*d-e*m)+v*(u*h-e*c)),t[7]=a*(c*l-h*f)-o*(u*l-e*f)+s*(u*h-e*c),t[8]=o*(M*d-l*b)-s*(i*d-h*b)+v*(i*l-h*M),t[9]=-(a*(M*d-l*b)-s*(r*d-e*b)+v*(r*l-e*M)),t[10]=a*(i*d-h*b)-o*(r*d-e*b)+v*(r*h-e*i),t[11]=-(a*(i*l-h*M)-o*(r*l-e*M)+s*(r*h-e*i)),t[12]=-(o*(M*m-f*b)-s*(i*m-c*b)+v*(i*f-c*M)),t[13]=a*(M*m-f*b)-s*(r*m-u*b)+v*(r*f-u*M),t[14]=-(a*(i*m-c*b)-o*(r*m-u*b)+v*(r*c-u*i)),t[15]=a*(i*f-c*M)-o*(r*f-u*M)+s*(r*c-u*i),t},determinant:function(t){var n=t[0],a=t[1],r=t[2],u=t[3],e=t[4],o=t[5],i=t[6],c=t[7],h=t[8],s=t[9],M=t[10],f=t[11],l=t[12],v=t[13],b=t[14],m=t[15];return(n*o-a*e)*(M*m-f*b)-(n*i-r*e)*(s*m-f*v)+(n*c-u*e)*(s*b-M*v)+(a*i-r*o)*(h*m-f*l)-(a*c-u*o)*(h*b-M*l)+(r*c-u*i)*(h*v-s*l)},multiply:A,translate:function(t,n,a){var r,u,e,o,i,c,h,s,M,f,l,v,b=a[0],m=a[1],d=a[2];return n===t?(t[12]=n[0]*b+n[4]*m+n[8]*d+n[12],t[13]=n[1]*b+n[5]*m+n[9]*d+n[13],t[14]=n[2]*b+n[6]*m+n[10]*d+n[14],t[15]=n[3]*b+n[7]*m+n[11]*d+n[15]):(r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=n[9],l=n[10],v=n[11],t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=i,t[5]=c,t[6]=h,t[7]=s,t[8]=M,t[9]=f,t[10]=l,t[11]=v,t[12]=r*b+i*m+M*d+n[12],t[13]=u*b+c*m+f*d+n[13],t[14]=e*b+h*m+l*d+n[14],t[15]=o*b+s*m+v*d+n[15]),t},scale:function(t,n,a){var r=a[0],u=a[1],e=a[2];return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*u,t[5]=n[5]*u,t[6]=n[6]*u,t[7]=n[7]*u,t[8]=n[8]*e,t[9]=n[9]*e,t[10]=n[10]*e,t[11]=n[11]*e,t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},rotate:function(t,a,r,u){var e,o,i,c,h,s,M,f,l,v,b,m,d,x,p,y,q,g,A,w,R,z,P,j,I=u[0],S=u[1],E=u[2],O=Math.hypot(I,S,E);return O<n?null:(I*=O=1/O,S*=O,E*=O,e=Math.sin(r),i=1-(o=Math.cos(r)),c=a[0],h=a[1],s=a[2],M=a[3],f=a[4],l=a[5],v=a[6],b=a[7],m=a[8],d=a[9],x=a[10],p=a[11],y=I*I*i+o,q=S*I*i+E*e,g=E*I*i-S*e,A=I*S*i-E*e,w=S*S*i+o,R=E*S*i+I*e,z=I*E*i+S*e,P=S*E*i-I*e,j=E*E*i+o,t[0]=c*y+f*q+m*g,t[1]=h*y+l*q+d*g,t[2]=s*y+v*q+x*g,t[3]=M*y+b*q+p*g,t[4]=c*A+f*w+m*R,t[5]=h*A+l*w+d*R,t[6]=s*A+v*w+x*R,t[7]=M*A+b*w+p*R,t[8]=c*z+f*P+m*j,t[9]=h*z+l*P+d*j,t[10]=s*z+v*P+x*j,t[11]=M*z+b*P+p*j,a!==t&&(t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t)},rotateX:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[4],o=n[5],i=n[6],c=n[7],h=n[8],s=n[9],M=n[10],f=n[11];return n!==t&&(t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[4]=e*u+h*r,t[5]=o*u+s*r,t[6]=i*u+M*r,t[7]=c*u+f*r,t[8]=h*u-e*r,t[9]=s*u-o*r,t[10]=M*u-i*r,t[11]=f*u-c*r,t},rotateY:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[0],o=n[1],i=n[2],c=n[3],h=n[8],s=n[9],M=n[10],f=n[11];return n!==t&&(t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[0]=e*u-h*r,t[1]=o*u-s*r,t[2]=i*u-M*r,t[3]=c*u-f*r,t[8]=e*r+h*u,t[9]=o*r+s*u,t[10]=i*r+M*u,t[11]=c*r+f*u,t},rotateZ:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[0],o=n[1],i=n[2],c=n[3],h=n[4],s=n[5],M=n[6],f=n[7];return n!==t&&(t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[0]=e*u+h*r,t[1]=o*u+s*r,t[2]=i*u+M*r,t[3]=c*u+f*r,t[4]=h*u-e*r,t[5]=s*u-o*r,t[6]=M*u-i*r,t[7]=f*u-c*r,t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=n[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromRotation:function(t,a,r){var u,e,o,i=r[0],c=r[1],h=r[2],s=Math.hypot(i,c,h);return s<n?null:(i*=s=1/s,c*=s,h*=s,u=Math.sin(a),o=1-(e=Math.cos(a)),t[0]=i*i*o+e,t[1]=c*i*o+h*u,t[2]=h*i*o-c*u,t[3]=0,t[4]=i*c*o-h*u,t[5]=c*c*o+e,t[6]=h*c*o+i*u,t[7]=0,t[8]=i*h*o+c*u,t[9]=c*h*o-i*u,t[10]=h*h*o+e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)},fromXRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=a,t[7]=0,t[8]=0,t[9]=-a,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromYRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=0,t[2]=-a,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=a,t[9]=0,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromZRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=0,t[3]=0,t[4]=-a,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromRotationTranslation:w,fromQuat2:function(t,n){var r=new a(3),u=-n[0],e=-n[1],o=-n[2],i=n[3],c=n[4],h=n[5],s=n[6],M=n[7],f=u*u+e*e+o*o+i*i;return f>0?(r[0]=2*(c*i+M*u+h*o-s*e)/f,r[1]=2*(h*i+M*e+s*u-c*o)/f,r[2]=2*(s*i+M*o+c*e-h*u)/f):(r[0]=2*(c*i+M*u+h*o-s*e),r[1]=2*(h*i+M*e+s*u-c*o),r[2]=2*(s*i+M*o+c*e-h*u)),w(t,n,r),t},getTranslation:R,getScaling:z,getRotation:P,fromRotationTranslationScale:function(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=n[3],c=u+u,h=e+e,s=o+o,M=u*c,f=u*h,l=u*s,v=e*h,b=e*s,m=o*s,d=i*c,x=i*h,p=i*s,y=r[0],q=r[1],g=r[2];return t[0]=(1-(v+m))*y,t[1]=(f+p)*y,t[2]=(l-x)*y,t[3]=0,t[4]=(f-p)*q,t[5]=(1-(M+m))*q,t[6]=(b+d)*q,t[7]=0,t[8]=(l+x)*g,t[9]=(b-d)*g,t[10]=(1-(M+v))*g,t[11]=0,t[12]=a[0],t[13]=a[1],t[14]=a[2],t[15]=1,t},fromRotationTranslationScaleOrigin:function(t,n,a,r,u){var e=n[0],o=n[1],i=n[2],c=n[3],h=e+e,s=o+o,M=i+i,f=e*h,l=e*s,v=e*M,b=o*s,m=o*M,d=i*M,x=c*h,p=c*s,y=c*M,q=r[0],g=r[1],A=r[2],w=u[0],R=u[1],z=u[2],P=(1-(b+d))*q,j=(l+y)*q,I=(v-p)*q,S=(l-y)*g,E=(1-(f+d))*g,O=(m+x)*g,T=(v+p)*A,D=(m-x)*A,F=(1-(f+b))*A;return t[0]=P,t[1]=j,t[2]=I,t[3]=0,t[4]=S,t[5]=E,t[6]=O,t[7]=0,t[8]=T,t[9]=D,t[10]=F,t[11]=0,t[12]=a[0]+w-(P*w+S*R+T*z),t[13]=a[1]+R-(j*w+E*R+D*z),t[14]=a[2]+z-(I*w+O*R+F*z),t[15]=1,t},fromQuat:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a+a,i=r+r,c=u+u,h=a*o,s=r*o,M=r*i,f=u*o,l=u*i,v=u*c,b=e*o,m=e*i,d=e*c;return t[0]=1-M-v,t[1]=s+d,t[2]=f-m,t[3]=0,t[4]=s-d,t[5]=1-h-v,t[6]=l+b,t[7]=0,t[8]=f+m,t[9]=l-b,t[10]=1-h-M,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},frustum:function(t,n,a,r,u,e,o){var i=1/(a-n),c=1/(u-r),h=1/(e-o);return t[0]=2*e*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*e*c,t[6]=0,t[7]=0,t[8]=(a+n)*i,t[9]=(u+r)*c,t[10]=(o+e)*h,t[11]=-1,t[12]=0,t[13]=0,t[14]=o*e*2*h,t[15]=0,t},perspective:function(t,n,a,r,u){var e,o=1/Math.tan(n/2);return t[0]=o/a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=o,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=u&&u!==1/0?(e=1/(r-u),t[10]=(u+r)*e,t[14]=2*u*r*e):(t[10]=-1,t[14]=-2*r),t},perspectiveFromFieldOfView:function(t,n,a,r){var u=Math.tan(n.upDegrees*Math.PI/180),e=Math.tan(n.downDegrees*Math.PI/180),o=Math.tan(n.leftDegrees*Math.PI/180),i=Math.tan(n.rightDegrees*Math.PI/180),c=2/(o+i),h=2/(u+e);return t[0]=c,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=h,t[6]=0,t[7]=0,t[8]=-(o-i)*c*.5,t[9]=(u-e)*h*.5,t[10]=r/(a-r),t[11]=-1,t[12]=0,t[13]=0,t[14]=r*a/(a-r),t[15]=0,t},ortho:function(t,n,a,r,u,e,o){var i=1/(n-a),c=1/(r-u),h=1/(e-o);return t[0]=-2*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*c,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*h,t[11]=0,t[12]=(n+a)*i,t[13]=(u+r)*c,t[14]=(o+e)*h,t[15]=1,t},lookAt:function(t,a,r,u){var e,o,i,c,h,s,M,f,l,v,b=a[0],m=a[1],d=a[2],x=u[0],p=u[1],y=u[2],q=r[0],A=r[1],w=r[2];return Math.abs(b-q)<n&&Math.abs(m-A)<n&&Math.abs(d-w)<n?g(t):(M=b-q,f=m-A,l=d-w,e=p*(l*=v=1/Math.hypot(M,f,l))-y*(f*=v),o=y*(M*=v)-x*l,i=x*f-p*M,(v=Math.hypot(e,o,i))?(e*=v=1/v,o*=v,i*=v):(e=0,o=0,i=0),c=f*i-l*o,h=l*e-M*i,s=M*o-f*e,(v=Math.hypot(c,h,s))?(c*=v=1/v,h*=v,s*=v):(c=0,h=0,s=0),t[0]=e,t[1]=c,t[2]=M,t[3]=0,t[4]=o,t[5]=h,t[6]=f,t[7]=0,t[8]=i,t[9]=s,t[10]=l,t[11]=0,t[12]=-(e*b+o*m+i*d),t[13]=-(c*b+h*m+s*d),t[14]=-(M*b+f*m+l*d),t[15]=1,t)},targetTo:function(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=r[0],c=r[1],h=r[2],s=u-a[0],M=e-a[1],f=o-a[2],l=s*s+M*M+f*f;l>0&&(s*=l=1/Math.sqrt(l),M*=l,f*=l);var v=c*f-h*M,b=h*s-i*f,m=i*M-c*s;return(l=v*v+b*b+m*m)>0&&(v*=l=1/Math.sqrt(l),b*=l,m*=l),t[0]=v,t[1]=b,t[2]=m,t[3]=0,t[4]=M*m-f*b,t[5]=f*v-s*m,t[6]=s*b-M*v,t[7]=0,t[8]=s,t[9]=M,t[10]=f,t[11]=0,t[12]=u,t[13]=e,t[14]=o,t[15]=1,t},str:function(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t[8]=n[8]+a[8],t[9]=n[9]+a[9],t[10]=n[10]+a[10],t[11]=n[11]+a[11],t[12]=n[12]+a[12],t[13]=n[13]+a[13],t[14]=n[14]+a[14],t[15]=n[15]+a[15],t},subtract:j,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=n[11]*a,t[12]=n[12]*a,t[13]=n[13]*a,t[14]=n[14]*a,t[15]=n[15]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t[6]=n[6]+a[6]*r,t[7]=n[7]+a[7]*r,t[8]=n[8]+a[8]*r,t[9]=n[9]+a[9]*r,t[10]=n[10]+a[10]*r,t[11]=n[11]+a[11]*r,t[12]=n[12]+a[12]*r,t[13]=n[13]+a[13]*r,t[14]=n[14]+a[14]*r,t[15]=n[15]+a[15]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]&&t[9]===n[9]&&t[10]===n[10]&&t[11]===n[11]&&t[12]===n[12]&&t[13]===n[13]&&t[14]===n[14]&&t[15]===n[15]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=t[8],f=t[9],l=t[10],v=t[11],b=t[12],m=t[13],d=t[14],x=t[15],p=a[0],y=a[1],q=a[2],g=a[3],A=a[4],w=a[5],R=a[6],z=a[7],P=a[8],j=a[9],I=a[10],S=a[11],E=a[12],O=a[13],T=a[14],D=a[15];return Math.abs(r-p)<=n*Math.max(1,Math.abs(r),Math.abs(p))&&Math.abs(u-y)<=n*Math.max(1,Math.abs(u),Math.abs(y))&&Math.abs(e-q)<=n*Math.max(1,Math.abs(e),Math.abs(q))&&Math.abs(o-g)<=n*Math.max(1,Math.abs(o),Math.abs(g))&&Math.abs(i-A)<=n*Math.max(1,Math.abs(i),Math.abs(A))&&Math.abs(c-w)<=n*Math.max(1,Math.abs(c),Math.abs(w))&&Math.abs(h-R)<=n*Math.max(1,Math.abs(h),Math.abs(R))&&Math.abs(s-z)<=n*Math.max(1,Math.abs(s),Math.abs(z))&&Math.abs(M-P)<=n*Math.max(1,Math.abs(M),Math.abs(P))&&Math.abs(f-j)<=n*Math.max(1,Math.abs(f),Math.abs(j))&&Math.abs(l-I)<=n*Math.max(1,Math.abs(l),Math.abs(I))&&Math.abs(v-S)<=n*Math.max(1,Math.abs(v),Math.abs(S))&&Math.abs(b-E)<=n*Math.max(1,Math.abs(b),Math.abs(E))&&Math.abs(m-O)<=n*Math.max(1,Math.abs(m),Math.abs(O))&&Math.abs(d-T)<=n*Math.max(1,Math.abs(d),Math.abs(T))&&Math.abs(x-D)<=n*Math.max(1,Math.abs(x),Math.abs(D))},mul:I,sub:S});function O(){var t=new a(3);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function T(t){var n=t[0],a=t[1],r=t[2];return Math.hypot(n,a,r)}function D(t,n,r){var u=new a(3);return u[0]=t,u[1]=n,u[2]=r,u}function F(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t}function L(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t[2]=n[2]*a[2],t}function V(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t[2]=n[2]/a[2],t}function Q(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2];return Math.hypot(a,r,u)}function Y(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2];return a*a+r*r+u*u}function X(t){var n=t[0],a=t[1],r=t[2];return n*n+a*a+r*r}function Z(t,n){var a=n[0],r=n[1],u=n[2],e=a*a+r*r+u*u;return e>0&&(e=1/Math.sqrt(e)),t[0]=n[0]*e,t[1]=n[1]*e,t[2]=n[2]*e,t}function _(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function B(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[0],i=a[1],c=a[2];return t[0]=u*c-e*i,t[1]=e*o-r*c,t[2]=r*i-u*o,t}var N,k=F,U=L,W=V,C=Q,G=Y,H=T,J=X,K=(N=O(),function(t,n,a,r,u,e){var o,i;for(n||(n=3),a||(a=0),i=r?Math.min(r*n+a,t.length):t.length,o=a;o<i;o+=n)N[0]=t[o],N[1]=t[o+1],N[2]=t[o+2],u(N,N,e),t[o]=N[0],t[o+1]=N[1],t[o+2]=N[2];return t}),$=Object.freeze({create:O,clone:function(t){var n=new a(3);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n},length:T,fromValues:D,copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t},set:function(t,n,a,r){return t[0]=n,t[1]=a,t[2]=r,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t},subtract:F,multiply:L,divide:V,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t[2]=Math.min(n[2],a[2]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t[2]=Math.max(n[2],a[2]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t},scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t},scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t},distance:Q,squaredDistance:Y,squaredLength:X,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t},normalize:Z,dot:_,cross:B,lerp:function(t,n,a,r){var u=n[0],e=n[1],o=n[2];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t[2]=o+r*(a[2]-o),t},hermite:function(t,n,a,r,u,e){var o=e*e,i=o*(2*e-3)+1,c=o*(e-2)+e,h=o*(e-1),s=o*(3-2*e);return t[0]=n[0]*i+a[0]*c+r[0]*h+u[0]*s,t[1]=n[1]*i+a[1]*c+r[1]*h+u[1]*s,t[2]=n[2]*i+a[2]*c+r[2]*h+u[2]*s,t},bezier:function(t,n,a,r,u,e){var o=1-e,i=o*o,c=e*e,h=i*o,s=3*e*i,M=3*c*o,f=c*e;return t[0]=n[0]*h+a[0]*s+r[0]*M+u[0]*f,t[1]=n[1]*h+a[1]*s+r[1]*M+u[1]*f,t[2]=n[2]*h+a[2]*s+r[2]*M+u[2]*f,t},random:function(t,n){n=n||1;var a=2*r()*Math.PI,u=2*r()-1,e=Math.sqrt(1-u*u)*n;return t[0]=Math.cos(a)*e,t[1]=Math.sin(a)*e,t[2]=u*n,t},transformMat4:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[3]*r+a[7]*u+a[11]*e+a[15];return o=o||1,t[0]=(a[0]*r+a[4]*u+a[8]*e+a[12])/o,t[1]=(a[1]*r+a[5]*u+a[9]*e+a[13])/o,t[2]=(a[2]*r+a[6]*u+a[10]*e+a[14])/o,t},transformMat3:function(t,n,a){var r=n[0],u=n[1],e=n[2];return t[0]=r*a[0]+u*a[3]+e*a[6],t[1]=r*a[1]+u*a[4]+e*a[7],t[2]=r*a[2]+u*a[5]+e*a[8],t},transformQuat:function(t,n,a){var r=a[0],u=a[1],e=a[2],o=a[3],i=n[0],c=n[1],h=n[2],s=u*h-e*c,M=e*i-r*h,f=r*c-u*i,l=u*f-e*M,v=e*s-r*f,b=r*M-u*s,m=2*o;return s*=m,M*=m,f*=m,l*=2,v*=2,b*=2,t[0]=i+s+l,t[1]=c+M+v,t[2]=h+f+b,t},rotateX:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[0],e[1]=u[1]*Math.cos(r)-u[2]*Math.sin(r),e[2]=u[1]*Math.sin(r)+u[2]*Math.cos(r),t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},rotateY:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[2]*Math.sin(r)+u[0]*Math.cos(r),e[1]=u[1],e[2]=u[2]*Math.cos(r)-u[0]*Math.sin(r),t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},rotateZ:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[0]*Math.cos(r)-u[1]*Math.sin(r),e[1]=u[0]*Math.sin(r)+u[1]*Math.cos(r),e[2]=u[2],t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},angle:function(t,n){var a=D(t[0],t[1],t[2]),r=D(n[0],n[1],n[2]);Z(a,a),Z(r,r);var u=_(a,r);return u>1?0:u<-1?Math.PI:Math.acos(u)},zero:function(t){return t[0]=0,t[1]=0,t[2]=0,t},str:function(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=a[0],i=a[1],c=a[2];return Math.abs(r-o)<=n*Math.max(1,Math.abs(r),Math.abs(o))&&Math.abs(u-i)<=n*Math.max(1,Math.abs(u),Math.abs(i))&&Math.abs(e-c)<=n*Math.max(1,Math.abs(e),Math.abs(c))},sub:k,mul:U,div:W,dist:C,sqrDist:G,len:H,sqrLen:J,forEach:K});function tt(){var t=new a(4);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[3]=0),t}function nt(t){var n=new a(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n}function at(t,n,r,u){var e=new a(4);return e[0]=t,e[1]=n,e[2]=r,e[3]=u,e}function rt(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function ut(t,n,a,r,u){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t}function et(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t}function ot(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t}function it(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t[2]=n[2]*a[2],t[3]=n[3]*a[3],t}function ct(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t[2]=n[2]/a[2],t[3]=n[3]/a[3],t}function ht(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t}function st(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2],e=n[3]-t[3];return Math.hypot(a,r,u,e)}function Mt(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2],e=n[3]-t[3];return a*a+r*r+u*u+e*e}function ft(t){var n=t[0],a=t[1],r=t[2],u=t[3];return Math.hypot(n,a,r,u)}function lt(t){var n=t[0],a=t[1],r=t[2],u=t[3];return n*n+a*a+r*r+u*u}function vt(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*a+r*r+u*u+e*e;return o>0&&(o=1/Math.sqrt(o)),t[0]=a*o,t[1]=r*o,t[2]=u*o,t[3]=e*o,t}function bt(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]+t[3]*n[3]}function mt(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=n[3];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t[2]=o+r*(a[2]-o),t[3]=i+r*(a[3]-i),t}function dt(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]}function xt(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=a[0],c=a[1],h=a[2],s=a[3];return Math.abs(r-i)<=n*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(u-c)<=n*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(e-h)<=n*Math.max(1,Math.abs(e),Math.abs(h))&&Math.abs(o-s)<=n*Math.max(1,Math.abs(o),Math.abs(s))}var pt=ot,yt=it,qt=ct,gt=st,At=Mt,wt=ft,Rt=lt,zt=function(){var t=tt();return function(n,a,r,u,e,o){var i,c;for(a||(a=4),r||(r=0),c=u?Math.min(u*a+r,n.length):n.length,i=r;i<c;i+=a)t[0]=n[i],t[1]=n[i+1],t[2]=n[i+2],t[3]=n[i+3],e(t,t,o),n[i]=t[0],n[i+1]=t[1],n[i+2]=t[2],n[i+3]=t[3];return n}}(),Pt=Object.freeze({create:tt,clone:nt,fromValues:at,copy:rt,set:ut,add:et,subtract:ot,multiply:it,divide:ct,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t[3]=Math.ceil(n[3]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t[3]=Math.floor(n[3]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t[2]=Math.min(n[2],a[2]),t[3]=Math.min(n[3],a[3]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t[2]=Math.max(n[2],a[2]),t[3]=Math.max(n[3],a[3]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t[3]=Math.round(n[3]),t},scale:ht,scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t},distance:st,squaredDistance:Mt,length:ft,squaredLength:lt,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=-n[3],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t[3]=1/n[3],t},normalize:vt,dot:bt,cross:function(t,n,a,r){var u=a[0]*r[1]-a[1]*r[0],e=a[0]*r[2]-a[2]*r[0],o=a[0]*r[3]-a[3]*r[0],i=a[1]*r[2]-a[2]*r[1],c=a[1]*r[3]-a[3]*r[1],h=a[2]*r[3]-a[3]*r[2],s=n[0],M=n[1],f=n[2],l=n[3];return t[0]=M*h-f*c+l*i,t[1]=-s*h+f*o-l*e,t[2]=s*c-M*o+l*u,t[3]=-s*i+M*e-f*u,t},lerp:mt,random:function(t,n){var a,u,e,o,i,c;n=n||1;do{i=(a=2*r()-1)*a+(u=2*r()-1)*u}while(i>=1);do{c=(e=2*r()-1)*e+(o=2*r()-1)*o}while(c>=1);var h=Math.sqrt((1-i)/c);return t[0]=n*a,t[1]=n*u,t[2]=n*e*h,t[3]=n*o*h,t},transformMat4:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3];return t[0]=a[0]*r+a[4]*u+a[8]*e+a[12]*o,t[1]=a[1]*r+a[5]*u+a[9]*e+a[13]*o,t[2]=a[2]*r+a[6]*u+a[10]*e+a[14]*o,t[3]=a[3]*r+a[7]*u+a[11]*e+a[15]*o,t},transformQuat:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[0],i=a[1],c=a[2],h=a[3],s=h*r+i*e-c*u,M=h*u+c*r-o*e,f=h*e+o*u-i*r,l=-o*r-i*u-c*e;return t[0]=s*h+l*-o+M*-c-f*-i,t[1]=M*h+l*-i+f*-o-s*-c,t[2]=f*h+l*-c+s*-i-M*-o,t[3]=n[3],t},zero:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t},str:function(t){return"vec4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},exactEquals:dt,equals:xt,sub:pt,mul:yt,div:qt,dist:gt,sqrDist:At,len:wt,sqrLen:Rt,forEach:zt});function jt(){var t=new a(4);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t[3]=1,t}function It(t,n,a){a*=.5;var r=Math.sin(a);return t[0]=r*n[0],t[1]=r*n[1],t[2]=r*n[2],t[3]=Math.cos(a),t}function St(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*s+o*i+u*h-e*c,t[1]=u*s+o*c+e*i-r*h,t[2]=e*s+o*h+r*c-u*i,t[3]=o*s-r*i-u*c-e*h,t}function Et(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+o*i,t[1]=u*c+e*i,t[2]=e*c-u*i,t[3]=o*c-r*i,t}function Ot(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c-e*i,t[1]=u*c+o*i,t[2]=e*c+r*i,t[3]=o*c-u*i,t}function Tt(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+u*i,t[1]=u*c-r*i,t[2]=e*c+o*i,t[3]=o*c-e*i,t}function Dt(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=Math.sqrt(a*a+r*r+u*u),i=Math.exp(e),c=o>0?i*Math.sin(o)/o:0;return t[0]=a*c,t[1]=r*c,t[2]=u*c,t[3]=i*Math.cos(o),t}function Ft(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=Math.sqrt(a*a+r*r+u*u),i=o>0?Math.atan2(o,e)/o:0;return t[0]=a*i,t[1]=r*i,t[2]=u*i,t[3]=.5*Math.log(a*a+r*r+u*u+e*e),t}function Lt(t,a,r,u){var e,o,i,c,h,s=a[0],M=a[1],f=a[2],l=a[3],v=r[0],b=r[1],m=r[2],d=r[3];return(o=s*v+M*b+f*m+l*d)<0&&(o=-o,v=-v,b=-b,m=-m,d=-d),1-o>n?(e=Math.acos(o),i=Math.sin(e),c=Math.sin((1-u)*e)/i,h=Math.sin(u*e)/i):(c=1-u,h=u),t[0]=c*s+h*v,t[1]=c*M+h*b,t[2]=c*f+h*m,t[3]=c*l+h*d,t}function Vt(t,n){var a,r=n[0]+n[4]+n[8];if(r>0)a=Math.sqrt(r+1),t[3]=.5*a,a=.5/a,t[0]=(n[5]-n[7])*a,t[1]=(n[6]-n[2])*a,t[2]=(n[1]-n[3])*a;else{var u=0;n[4]>n[0]&&(u=1),n[8]>n[3*u+u]&&(u=2);var e=(u+1)%3,o=(u+2)%3;a=Math.sqrt(n[3*u+u]-n[3*e+e]-n[3*o+o]+1),t[u]=.5*a,a=.5/a,t[3]=(n[3*e+o]-n[3*o+e])*a,t[e]=(n[3*e+u]+n[3*u+e])*a,t[o]=(n[3*o+u]+n[3*u+o])*a}return t}var Qt,Yt,Xt,Zt,_t,Bt,Nt=nt,kt=at,Ut=rt,Wt=ut,Ct=et,Gt=St,Ht=ht,Jt=bt,Kt=mt,$t=ft,tn=$t,nn=lt,an=nn,rn=vt,un=dt,en=xt,on=(Qt=O(),Yt=D(1,0,0),Xt=D(0,1,0),function(t,n,a){var r=_(n,a);return r<-.999999?(B(Qt,Yt,n),H(Qt)<1e-6&&B(Qt,Xt,n),Z(Qt,Qt),It(t,Qt,Math.PI),t):r>.999999?(t[0]=0,t[1]=0,t[2]=0,t[3]=1,t):(B(Qt,n,a),t[0]=Qt[0],t[1]=Qt[1],t[2]=Qt[2],t[3]=1+r,rn(t,t))}),cn=(Zt=jt(),_t=jt(),function(t,n,a,r,u,e){return Lt(Zt,n,u,e),Lt(_t,a,r,e),Lt(t,Zt,_t,2*e*(1-e)),t}),hn=(Bt=m(),function(t,n,a,r){return Bt[0]=a[0],Bt[3]=a[1],Bt[6]=a[2],Bt[1]=r[0],Bt[4]=r[1],Bt[7]=r[2],Bt[2]=-n[0],Bt[5]=-n[1],Bt[8]=-n[2],rn(t,Vt(t,Bt))}),sn=Object.freeze({create:jt,identity:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},setAxisAngle:It,getAxisAngle:function(t,a){var r=2*Math.acos(a[3]),u=Math.sin(r/2);return u>n?(t[0]=a[0]/u,t[1]=a[1]/u,t[2]=a[2]/u):(t[0]=1,t[1]=0,t[2]=0),r},getAngle:function(t,n){var a=Jt(t,n);return Math.acos(2*a*a-1)},multiply:St,rotateX:Et,rotateY:Ot,rotateZ:Tt,calculateW:function(t,n){var a=n[0],r=n[1],u=n[2];return t[0]=a,t[1]=r,t[2]=u,t[3]=Math.sqrt(Math.abs(1-a*a-r*r-u*u)),t},exp:Dt,ln:Ft,pow:function(t,n,a){return Ft(t,n),Ht(t,t,a),Dt(t,t),t},slerp:Lt,random:function(t){var n=r(),a=r(),u=r(),e=Math.sqrt(1-n),o=Math.sqrt(n);return t[0]=e*Math.sin(2*Math.PI*a),t[1]=e*Math.cos(2*Math.PI*a),t[2]=o*Math.sin(2*Math.PI*u),t[3]=o*Math.cos(2*Math.PI*u),t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*a+r*r+u*u+e*e,i=o?1/o:0;return t[0]=-a*i,t[1]=-r*i,t[2]=-u*i,t[3]=e*i,t},conjugate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t},fromMat3:Vt,fromEuler:function(t,n,a,r){var u=.5*Math.PI/180;n*=u,a*=u,r*=u;var e=Math.sin(n),o=Math.cos(n),i=Math.sin(a),c=Math.cos(a),h=Math.sin(r),s=Math.cos(r);return t[0]=e*c*s-o*i*h,t[1]=o*i*s+e*c*h,t[2]=o*c*h-e*i*s,t[3]=o*c*s+e*i*h,t},str:function(t){return"quat("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},clone:Nt,fromValues:kt,copy:Ut,set:Wt,add:Ct,mul:Gt,scale:Ht,dot:Jt,lerp:Kt,length:$t,len:tn,squaredLength:nn,sqrLen:an,normalize:rn,exactEquals:un,equals:en,rotationTo:on,sqlerp:cn,setAxes:hn});function Mn(t,n,a){var r=.5*a[0],u=.5*a[1],e=.5*a[2],o=n[0],i=n[1],c=n[2],h=n[3];return t[0]=o,t[1]=i,t[2]=c,t[3]=h,t[4]=r*h+u*c-e*i,t[5]=u*h+e*o-r*c,t[6]=e*h+r*i-u*o,t[7]=-r*o-u*i-e*c,t}function fn(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t}var ln=Ut;var vn=Ut;function bn(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[4],c=a[5],h=a[6],s=a[7],M=n[4],f=n[5],l=n[6],v=n[7],b=a[0],m=a[1],d=a[2],x=a[3];return t[0]=r*x+o*b+u*d-e*m,t[1]=u*x+o*m+e*b-r*d,t[2]=e*x+o*d+r*m-u*b,t[3]=o*x-r*b-u*m-e*d,t[4]=r*s+o*i+u*h-e*c+M*x+v*b+f*d-l*m,t[5]=u*s+o*c+e*i-r*h+f*x+v*m+l*b-M*d,t[6]=e*s+o*h+r*c-u*i+l*x+v*d+M*m-f*b,t[7]=o*s-r*i-u*c-e*h+v*x-M*b-f*m-l*d,t}var mn=bn;var dn=Jt;var xn=$t,pn=xn,yn=nn,qn=yn;var gn=Object.freeze({create:function(){var t=new a(8);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0),t[3]=1,t},clone:function(t){var n=new a(8);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n},fromValues:function(t,n,r,u,e,o,i,c){var h=new a(8);return h[0]=t,h[1]=n,h[2]=r,h[3]=u,h[4]=e,h[5]=o,h[6]=i,h[7]=c,h},fromRotationTranslationValues:function(t,n,r,u,e,o,i){var c=new a(8);c[0]=t,c[1]=n,c[2]=r,c[3]=u;var h=.5*e,s=.5*o,M=.5*i;return c[4]=h*u+s*r-M*n,c[5]=s*u+M*t-h*r,c[6]=M*u+h*n-s*t,c[7]=-h*t-s*n-M*r,c},fromRotationTranslation:Mn,fromTranslation:function(t,n){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=.5*n[0],t[5]=.5*n[1],t[6]=.5*n[2],t[7]=0,t},fromRotation:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},fromMat4:function(t,n){var r=jt();P(r,n);var u=new a(3);return R(u,n),Mn(t,r,u),t},copy:fn,identity:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},set:function(t,n,a,r,u,e,o,i,c){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t},getReal:ln,getDual:function(t,n){return t[0]=n[4],t[1]=n[5],t[2]=n[6],t[3]=n[7],t},setReal:vn,setDual:function(t,n){return t[4]=n[0],t[5]=n[1],t[6]=n[2],t[7]=n[3],t},getTranslation:function(t,n){var a=n[4],r=n[5],u=n[6],e=n[7],o=-n[0],i=-n[1],c=-n[2],h=n[3];return t[0]=2*(a*h+e*o+r*c-u*i),t[1]=2*(r*h+e*i+u*o-a*c),t[2]=2*(u*h+e*c+a*i-r*o),t},translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=.5*a[0],c=.5*a[1],h=.5*a[2],s=n[4],M=n[5],f=n[6],l=n[7];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=o*i+u*h-e*c+s,t[5]=o*c+e*i-r*h+M,t[6]=o*h+r*c-u*i+f,t[7]=-r*i-u*c-e*h+l,t},rotateX:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Et(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateY:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Ot(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateZ:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Tt(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateByQuatAppend:function(t,n,a){var r=a[0],u=a[1],e=a[2],o=a[3],i=n[0],c=n[1],h=n[2],s=n[3];return t[0]=i*o+s*r+c*e-h*u,t[1]=c*o+s*u+h*r-i*e,t[2]=h*o+s*e+i*u-c*r,t[3]=s*o-i*r-c*u-h*e,i=n[4],c=n[5],h=n[6],s=n[7],t[4]=i*o+s*r+c*e-h*u,t[5]=c*o+s*u+h*r-i*e,t[6]=h*o+s*e+i*u-c*r,t[7]=s*o-i*r-c*u-h*e,t},rotateByQuatPrepend:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*s+o*i+u*h-e*c,t[1]=u*s+o*c+e*i-r*h,t[2]=e*s+o*h+r*c-u*i,t[3]=o*s-r*i-u*c-e*h,i=a[4],c=a[5],h=a[6],s=a[7],t[4]=r*s+o*i+u*h-e*c,t[5]=u*s+o*c+e*i-r*h,t[6]=e*s+o*h+r*c-u*i,t[7]=o*s-r*i-u*c-e*h,t},rotateAroundAxis:function(t,a,r,u){if(Math.abs(u)<n)return fn(t,a);var e=Math.hypot(r[0],r[1],r[2]);u*=.5;var o=Math.sin(u),i=o*r[0]/e,c=o*r[1]/e,h=o*r[2]/e,s=Math.cos(u),M=a[0],f=a[1],l=a[2],v=a[3];t[0]=M*s+v*i+f*h-l*c,t[1]=f*s+v*c+l*i-M*h,t[2]=l*s+v*h+M*c-f*i,t[3]=v*s-M*i-f*c-l*h;var b=a[4],m=a[5],d=a[6],x=a[7];return t[4]=b*s+x*i+m*h-d*c,t[5]=m*s+x*c+d*i-b*h,t[6]=d*s+x*h+b*c-m*i,t[7]=x*s-b*i-m*c-d*h,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t},multiply:bn,mul:mn,scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t},dot:dn,lerp:function(t,n,a,r){var u=1-r;return dn(n,a)<0&&(r=-r),t[0]=n[0]*u+a[0]*r,t[1]=n[1]*u+a[1]*r,t[2]=n[2]*u+a[2]*r,t[3]=n[3]*u+a[3]*r,t[4]=n[4]*u+a[4]*r,t[5]=n[5]*u+a[5]*r,t[6]=n[6]*u+a[6]*r,t[7]=n[7]*u+a[7]*r,t},invert:function(t,n){var a=yn(n);return t[0]=-n[0]/a,t[1]=-n[1]/a,t[2]=-n[2]/a,t[3]=n[3]/a,t[4]=-n[4]/a,t[5]=-n[5]/a,t[6]=-n[6]/a,t[7]=n[7]/a,t},conjugate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t[4]=-n[4],t[5]=-n[5],t[6]=-n[6],t[7]=n[7],t},length:xn,len:pn,squaredLength:yn,sqrLen:qn,normalize:function(t,n){var a=yn(n);if(a>0){a=Math.sqrt(a);var r=n[0]/a,u=n[1]/a,e=n[2]/a,o=n[3]/a,i=n[4],c=n[5],h=n[6],s=n[7],M=r*i+u*c+e*h+o*s;t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=(i-r*M)/a,t[5]=(c-u*M)/a,t[6]=(h-e*M)/a,t[7]=(s-o*M)/a}return t},str:function(t){return"quat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=a[0],f=a[1],l=a[2],v=a[3],b=a[4],m=a[5],d=a[6],x=a[7];return Math.abs(r-M)<=n*Math.max(1,Math.abs(r),Math.abs(M))&&Math.abs(u-f)<=n*Math.max(1,Math.abs(u),Math.abs(f))&&Math.abs(e-l)<=n*Math.max(1,Math.abs(e),Math.abs(l))&&Math.abs(o-v)<=n*Math.max(1,Math.abs(o),Math.abs(v))&&Math.abs(i-b)<=n*Math.max(1,Math.abs(i),Math.abs(b))&&Math.abs(c-m)<=n*Math.max(1,Math.abs(c),Math.abs(m))&&Math.abs(h-d)<=n*Math.max(1,Math.abs(h),Math.abs(d))&&Math.abs(s-x)<=n*Math.max(1,Math.abs(s),Math.abs(x))}});function An(){var t=new a(2);return a!=Float32Array&&(t[0]=0,t[1]=0),t}function wn(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t}function Rn(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t}function zn(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t}function Pn(t,n){var a=n[0]-t[0],r=n[1]-t[1];return Math.hypot(a,r)}function jn(t,n){var a=n[0]-t[0],r=n[1]-t[1];return a*a+r*r}function In(t){var n=t[0],a=t[1];return Math.hypot(n,a)}function Sn(t){var n=t[0],a=t[1];return n*n+a*a}var En=In,On=wn,Tn=Rn,Dn=zn,Fn=Pn,Ln=jn,Vn=Sn,Qn=function(){var t=An();return function(n,a,r,u,e,o){var i,c;for(a||(a=2),r||(r=0),c=u?Math.min(u*a+r,n.length):n.length,i=r;i<c;i+=a)t[0]=n[i],t[1]=n[i+1],e(t,t,o),n[i]=t[0],n[i+1]=t[1];return n}}(),Yn=Object.freeze({create:An,clone:function(t){var n=new a(2);return n[0]=t[0],n[1]=t[1],n},fromValues:function(t,n){var r=new a(2);return r[0]=t,r[1]=n,r},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t},set:function(t,n,a){return t[0]=n,t[1]=a,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t},subtract:wn,multiply:Rn,divide:zn,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t},scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t},scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t},distance:Pn,squaredDistance:jn,length:In,squaredLength:Sn,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t},normalize:function(t,n){var a=n[0],r=n[1],u=a*a+r*r;return u>0&&(u=1/Math.sqrt(u)),t[0]=n[0]*u,t[1]=n[1]*u,t},dot:function(t,n){return t[0]*n[0]+t[1]*n[1]},cross:function(t,n,a){var r=n[0]*a[1]-n[1]*a[0];return t[0]=t[1]=0,t[2]=r,t},lerp:function(t,n,a,r){var u=n[0],e=n[1];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t},random:function(t,n){n=n||1;var a=2*r()*Math.PI;return t[0]=Math.cos(a)*n,t[1]=Math.sin(a)*n,t},transformMat2:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[2]*u,t[1]=a[1]*r+a[3]*u,t},transformMat2d:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[2]*u+a[4],t[1]=a[1]*r+a[3]*u+a[5],t},transformMat3:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[3]*u+a[6],t[1]=a[1]*r+a[4]*u+a[7],t},transformMat4:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[4]*u+a[12],t[1]=a[1]*r+a[5]*u+a[13],t},rotate:function(t,n,a,r){var u=n[0]-a[0],e=n[1]-a[1],o=Math.sin(r),i=Math.cos(r);return t[0]=u*i-e*o+a[0],t[1]=u*o+e*i+a[1],t},angle:function(t,n){var a=t[0],r=t[1],u=n[0],e=n[1],o=a*a+r*r;o>0&&(o=1/Math.sqrt(o));var i=u*u+e*e;i>0&&(i=1/Math.sqrt(i));var c=(a*u+r*e)*o*i;return c>1?0:c<-1?Math.PI:Math.acos(c)},zero:function(t){return t[0]=0,t[1]=0,t},str:function(t){return"vec2("+t[0]+", "+t[1]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]},equals:function(t,a){var r=t[0],u=t[1],e=a[0],o=a[1];return Math.abs(r-e)<=n*Math.max(1,Math.abs(r),Math.abs(e))&&Math.abs(u-o)<=n*Math.max(1,Math.abs(u),Math.abs(o))},len:En,sub:On,mul:Tn,div:Dn,dist:Fn,sqrDist:Ln,sqrLen:Vn,forEach:Qn});t.glMatrix=e,t.mat2=s,t.mat2d=b,t.mat3=q,t.mat4=E,t.quat=sn,t.quat2=gn,t.vec2=Yn,t.vec3=$,t.vec4=Pt,Object.defineProperty(t,"__esModule",{value:!0})});

// ["glMatrix", "mat2", "mat2d", "mat3", "mat4", "quat", "quat2", "vec2", "vec3", "vec4"]
window.glMatrix = glMatrix;
window.mat2 = glMatrix.mat2;
window.mat2d = glMatrix.mat2d;
window.mat3 = glMatrix.mat3;
window.mat4 = glMatrix.mat4;
window.quat = glMatrix.quat;
window.quat2 = glMatrix.quat2;
window.vec2 = glMatrix.vec2;
window.vec3 = glMatrix.vec3;
window.vec4 = glMatrix.vec4;



var CABLES = CABLES || {}; CABLES.build = {"timestamp":1658229186222,"created":"2022-07-19T11:13:06.222Z","git":{"branch":"master","commit":"819fc0e7c02646be982b7338326b610a383cd8f6","date":"2022-07-19T11:09:39.000Z","message":"corelib"}};
if(!CABLES.exportedPatches)CABLES.exportedPatches={};CABLES.exportedPatches["EpWg7a"]={settings:{opExample:[],licence:"none",isPublic:false},ops:[{objName:"Ops.Gl.MainLoop",id:"0",uiAttribs:{subPatch:0},portsIn:[{name:"FPS Limit",value:0},{name:"Reduce FPS not focussed",value:true},{name:"Reduce FPS loading",value:false},{name:"Clear",value:true},{name:"ClearAlpha",value:true},{name:"Fullscreen Button",value:false},{name:"Active",value:true},{name:"Hires Displays",value:false},{name:"Pixel Unit index",value:0},{name:"Pixel Unit",value:"Display"}],portsOut:[{name:"trigger",links:[{portIn:"exe",portOut:"trigger",objIn:"144",objOut:"0"}]},{name:"width",value:574},{name:"height",value:339}]},{objName:"Ops.Sequence",id:"1",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"Clean up connections",value:0},{name:"exe 0",value:0},{name:"exe 1",value:0},{name:"exe 2",value:0},{name:"exe 3",value:0},{name:"exe 4",value:0},{name:"exe 5",value:0},{name:"exe 6",value:0},{name:"exe 7",value:0},{name:"exe 8",value:0},{name:"exe 9",value:0},{name:"exe 10",value:0},{name:"exe 11",value:0},{name:"exe 12",value:0},{name:"exe 13",value:0},{name:"exe 14",value:0}],portsOut:[{name:"trigger 0",links:[{portIn:"Update",portOut:"trigger 0",objIn:"7",objOut:"1"}]},{name:"trigger 1",links:[{portIn:"render",portOut:"trigger 1",objIn:"19",objOut:"1"}]},{name:"trigger 2",links:[{portIn:"exe",portOut:"trigger 2",objIn:"30",objOut:"1"},{portIn:"exe",portOut:"trigger 2",objIn:"34",objOut:"1"},{portIn:"exe",portOut:"trigger 2",objIn:"33",objOut:"1"},{portIn:"exe",portOut:"trigger 2",objIn:"46",objOut:"1"}]},{name:"trigger 3",value:0},{name:"trigger 4",links:[{portIn:"exe",portOut:"trigger 4",objIn:"54",objOut:"1"},{portIn:"exe",portOut:"trigger 4",objIn:"51",objOut:"1"}]},{name:"trigger 5",value:0},{name:"trigger 6",value:0},{name:"trigger 7",value:0},{name:"trigger 8",value:0},{name:"trigger 9",value:0},{name:"trigger 10",value:0},{name:"trigger 11",value:0},{name:"trigger 12",value:0},{name:"trigger 13",value:0},{name:"trigger 14",value:0},{name:"trigger 15",value:0}]},{objName:"Ops.Sequence",id:"2",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"Clean up connections",value:0},{name:"exe 0",value:0},{name:"exe 1",value:0},{name:"exe 2",value:0},{name:"exe 3",value:0},{name:"exe 4",value:0},{name:"exe 5",value:0},{name:"exe 6",value:0},{name:"exe 7",value:0},{name:"exe 8",value:0},{name:"exe 9",value:0},{name:"exe 10",value:0},{name:"exe 11",value:0},{name:"exe 12",value:0},{name:"exe 13",value:0},{name:"exe 14",value:0}],portsOut:[{name:"trigger 0",links:[{portIn:"Render",portOut:"trigger 0",objIn:"80",objOut:"2"}]},{name:"trigger 1",links:[{portIn:"render",portOut:"trigger 1",objIn:"106",objOut:"2"}]},{name:"trigger 2",links:[{portIn:"Render",portOut:"trigger 2",objIn:"71",objOut:"2"}]},{name:"trigger 3",links:[{portIn:"Render",portOut:"trigger 3",objIn:"72",objOut:"2"}]},{name:"trigger 4",links:[{portIn:"exe",portOut:"trigger 4",objIn:"108",objOut:"2"}]},{name:"trigger 5",links:[{portIn:"render",portOut:"trigger 5",objIn:"77",objOut:"2"}]},{name:"trigger 6",links:[{portIn:"render",portOut:"trigger 6",objIn:"89",objOut:"2"}]},{name:"trigger 7",value:0},{name:"trigger 8",value:0},{name:"trigger 9",value:0},{name:"trigger 10",value:0},{name:"trigger 11",value:0},{name:"trigger 12",value:0},{name:"trigger 13",value:0},{name:"trigger 14",value:0},{name:"trigger 15",links:[{portIn:"render",portOut:"trigger 15",objIn:"20",objOut:"2"}]}]},{objName:"Ops.Gl.GLTF.GltfCameraViewMatrix",id:"3",uiAttribs:{subPatch:0},portsIn:[{name:"Update"},{name:"Node Name"}],portsOut:[{name:"Matrix",links:[{portIn:"Next Array",portOut:"Matrix",objIn:"7",objOut:"3"}]},{name:"Found",value:true}]},{objName:"Ops.String.SwitchString",id:"4",uiAttribs:{subPatch:0},portsIn:[{name:"Index"},{name:"String 0",value:"Camera1"},{name:"String 1",value:"Camera1"},{name:"String 2",value:"Camera2"},{name:"String 3",value:"Camera3"},{name:"String 4",value:"Camera4"},{name:"String 5",value:"Camera5"},{name:"String 6",value:"Camera6"},{name:"String 7",value:"Camera7"},{name:"String 8",value:""},{name:"String 9",value:""}],portsOut:[{name:"Result",links:[{portIn:"Node Name",portOut:"Result",objIn:"3",objOut:"4"}]}]},{objName:"Ops.Trigger.TriggerCounterLoop",id:"5",uiAttribs:{subPatch:0},portsIn:[{name:"trigger in"},{name:"reset",value:0},{name:"Loop min",value:0},{name:"Loop max",value:5}],portsOut:[{name:"trigger out",value:0},{name:"current count",links:[{portIn:"Index",portOut:"current count",objIn:"4",objOut:"5"},{portIn:"Value",portOut:"current count",objIn:"43",objOut:"5"}]}]},{objName:"Ops.Gl.Matrix.MulViewMatrix",id:"6",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"matrix"},{name:"Identity",value:true}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"17",objOut:"6"}]}]},{objName:"Ops.Array.AnimArray_v2",id:"7",uiAttribs:{subPatch:0},portsIn:[{name:"Update"},{name:"Next Array"},{name:"Duration",value:1},{name:"easing index",value:0},{name:"easing",value:"linear"}],portsOut:[{name:"Next",value:0},{name:"Matrix",links:[{portIn:"matrix",portOut:"Matrix",objIn:"6",objOut:"7"}]}]},{objName:"Ops.Sequence",id:"8",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"Clean up connections",value:0},{name:"exe 0",value:0},{name:"exe 1",value:0},{name:"exe 2",value:0},{name:"exe 3",value:0},{name:"exe 4",value:0},{name:"exe 5",value:0},{name:"exe 6",value:0},{name:"exe 7",value:0},{name:"exe 8",value:0},{name:"exe 9",value:0},{name:"exe 10",value:0},{name:"exe 11",value:0},{name:"exe 12",value:0},{name:"exe 13",value:0},{name:"exe 14",value:0}],portsOut:[{name:"trigger 0",links:[{portIn:"render",portOut:"trigger 0",objIn:"115",objOut:"8"}]},{name:"trigger 1",links:[{portIn:"Render",portOut:"trigger 1",objIn:"9",objOut:"8"}]},{name:"trigger 2",links:[{portIn:"render",portOut:"trigger 2",objIn:"10",objOut:"8"}]},{name:"trigger 3",links:[{portIn:"Render",portOut:"trigger 3",objIn:"22",objOut:"8"}]},{name:"trigger 4",links:[{portIn:"Render",portOut:"trigger 4",objIn:"39",objOut:"8"}]},{name:"trigger 5",links:[{portIn:"Render",portOut:"trigger 5",objIn:"109",objOut:"8"}]},{name:"trigger 6",links:[{portIn:"Update",portOut:"trigger 6",objIn:"123",objOut:"8"},{portIn:"Update",portOut:"trigger 6",objIn:"124",objOut:"8"}]},{name:"trigger 7",value:0},{name:"trigger 8",value:0},{name:"trigger 9",value:0},{name:"trigger 10",value:0},{name:"trigger 11",value:0},{name:"trigger 12",value:0},{name:"trigger 13",value:0},{name:"trigger 14",value:0},{name:"trigger 15",value:0}]},{objName:"Ops.Gl.TextureEffects.ImageCompose_v3",id:"9",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Base Texture",value:0},{name:"Size index",value:0},{name:"Size",value:"Auto"},{name:"Width",value:640},{name:"Height",value:480},{name:"Filter index",value:1},{name:"Filter",value:"linear"},{name:"Wrap index",value:1},{name:"Wrap",value:"repeat"},{name:"Pixel Format index",value:0},{name:"Pixel Format",value:"RGBA 8bit ubyte"},{name:"R",value:0},{name:"G",value:0},{name:"B",value:0},{name:"A",value:0}],portsOut:[{name:"Next",links:[{portIn:"render",portOut:"Next",objIn:"18",objOut:"9"}]},{name:"texture_out",links:[{portIn:"Image",portOut:"texture_out",objIn:"21",objOut:"9"}]},{name:"Aspect Ratio",value:1.6932153392330382},{name:"Texture Width",value:574},{name:"Texture Height",value:339}]},{objName:"Ops.Gl.Meshes.FullscreenRectangle",id:"10",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Scale index",value:0},{name:"Scale",value:"Stretch"},{name:"Flip Y",value:false},{name:"Flip X",value:false},{name:"Texture"}],portsOut:[{name:"trigger",value:0}]},{objName:"Ops.Gl.TextureEffects.ChromaticAberration_v2",id:"11",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"normal"},{name:"Amount",value:1},{name:"Pixel",value:2.2},{name:"Lens Distort",value:.57},{name:"Smooth",value:false},{name:"Mask",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"12",objOut:"11"}]}]},{objName:"Ops.Gl.TextureEffects.Noise.Noise_v2",id:"12",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"color dodge"},{name:"Alpha Mask index",value:0},{name:"Alpha Mask",value:"Off"},{name:"Amount",value:.135},{name:"Animated",value:true},{name:"RGB",value:false},{name:"Normalize",value:false},{name:"Multiply",value:0}],portsOut:[{name:"Next",value:0}]},{objName:"Ops.Gl.Meshes.Cube_v2",id:"13",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Render Mesh",value:true},{name:"Width",value:8.62},{name:"Length",value:3.84},{name:"Height",value:.07},{name:"Center",value:true},{name:"Mapping index",value:0},{name:"Mapping",value:"Side"},{name:"Bias",value:0},{name:"Flip X",value:true},{name:"Top",value:true},{name:"Bottom",value:true},{name:"Left",value:true},{name:"Right",value:true},{name:"Front",value:true},{name:"Back",value:true}],portsOut:[{name:"Next",value:0},{name:"geometry"}]},{objName:"Ops.Gl.Matrix.Transform",id:"14",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:.816913305733459},{name:"posY",value:-.114479980225768},{name:"posZ",value:-1.657293273600088},{name:"scale",value:1},{name:"rotX",value:0},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"13",objOut:"14"}]}]},{objName:"Ops.Gl.GLTF.GltfScene_v3",id:"15",uiAttribs:{subPatch:0},portsIn:[{name:"data",value:""},{name:"Render"},{name:"glb File",value:"assets/warehaouse.glb",display:"file"},{name:"Draw",value:true},{name:"Camera index",value:0},{name:"Camera",value:"None"},{name:"Animation",value:""},{name:"Show Structure",value:0},{name:"Center index",value:1},{name:"Center",value:"XYZ"},{name:"Rescale",value:true},{name:"Rescale Size",value:2.5},{name:"Time",value:0},{name:"Sync to timeline",value:false},{name:"Loop",value:true},{name:"Normals Format index",value:0},{name:"Normals Format",value:"XYZ"},{name:"Vertices Format index",value:0},{name:"Vertices Format",value:"XYZ"},{name:"Calc Normals",value:false},{name:"Materials",value:0},{name:"Hide Nodes",value:0},{name:"Use Material Properties",value:false},{name:"Active",value:true}],portsOut:[{name:"Render Before",value:0},{name:"Next",links:[{portIn:"exe",portOut:"Next",objIn:"2",objOut:"15"},{portIn:"Update",portOut:"Next",objIn:"3",objOut:"15"}]},{name:"Generator",value:"Khronos glTF Blender I/O v3.2.43"},{name:"GLTF Version",value:2},{name:"GLTF Extensions Used"},{name:"Anim Length",value:44.70000076293945},{name:"Anim Time",value:0},{name:"Json"},{name:"Anims"},{name:"BoundingPoints"},{name:"Bounds"},{name:"Finished",value:0},{name:"Loading",links:[{portIn:"Value",portOut:"Loading",objIn:"45",objOut:"15"}]}]},{objName:"Ops.Gl.TextureEffects.EdgeDetection_v4",id:"16",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"normal"},{name:"Amount",value:1},{name:"Strength",value:4.09},{name:"Width",value:.089},{name:"Mul Color",value:.25}],portsOut:[{name:"Trigger",links:[{portIn:"render",portOut:"Trigger",objIn:"79",objOut:"16"}]}]},{objName:"Ops.Gl.Shader.MatCapMaterialNew_v3",id:"17",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"MatCap"},{name:"Diffuse",value:0},{name:"Normal",value:0},{name:"Specular Mask",value:0},{name:"Specular MatCap",value:0},{name:"AO Texture",value:0},{name:"Opacity Texture",value:0},{name:"r",value:.651611328125},{name:"g",value:.7352246093749999},{name:"b",value:1},{name:"Opacity",value:1},{name:"AO Intensity",value:1},{name:"Normal Map Intensity",value:1},{name:"Repeat X",value:1},{name:"Repeat Y",value:1},{name:"Offset X",value:0},{name:"Offset Y",value:0},{name:"Screen Space Normals",value:false},{name:"Calc normal tangents",value:true},{name:"Opacity TexCoords Transform",value:false},{name:"Discard Transparent Pixels",value:false},{name:"Alpha Mask Source index",value:0},{name:"Alpha Mask Source",value:"Luminance"}],portsOut:[{name:"Next",links:[{portIn:"Render",portOut:"Next",objIn:"15",objOut:"17"}]},{name:"Shader"}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v3",id:"18",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:.994},{name:"Image"},{name:"Premultiplied",value:false},{name:"Alpha Mask",value:false},{name:"removeAlphaSrc",value:false},{name:"Mask",value:0},{name:"Mask Src index",value:1},{name:"Mask Src",value:"alpha channel"},{name:"Invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"16",objOut:"18"}]}]},{objName:"Ops.Gl.Render2Texture",id:"19",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:true},{name:"texture width",value:574},{name:"texture height",value:339},{name:"Auto Aspect",value:false},{name:"filter index",value:1},{name:"filter",value:"linear"},{name:"Wrap index",value:1},{name:"Wrap",value:"Repeat"},{name:"MSAA index",value:0},{name:"MSAA",value:"none"},{name:"HDR",value:false},{name:"Depth",value:true},{name:"Clear",value:true}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"6",objOut:"19"}]},{name:"texture",links:[{portIn:"Image",portOut:"texture",objIn:"18",objOut:"19"}]},{name:"textureDepth"}]},{objName:"Ops.Gl.Render2Texture",id:"20",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:true},{name:"texture width",value:574},{name:"texture height",value:339},{name:"Auto Aspect",value:false},{name:"filter index",value:1},{name:"filter",value:"linear"},{name:"Wrap index",value:1},{name:"Wrap",value:"Repeat"},{name:"MSAA index",value:0},{name:"MSAA",value:"none"},{name:"HDR",value:false},{name:"Depth",value:true},{name:"Clear",value:true}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"24",objOut:"20"}]},{name:"texture",links:[{portIn:"Image",portOut:"texture",objIn:"23",objOut:"20"}]},{name:"textureDepth"}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v3",id:"21",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"Image"},{name:"Premultiplied",value:false},{name:"Alpha Mask",value:false},{name:"removeAlphaSrc",value:false},{name:"Mask",value:0},{name:"Mask Src index",value:1},{name:"Mask Src",value:"alpha channel"},{name:"Invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"41",objOut:"21"}]}]},{objName:"Ops.Gl.TextureEffects.ImageCompose_v3",id:"22",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Base Texture",value:0},{name:"Size index",value:0},{name:"Size",value:"Auto"},{name:"Width",value:640},{name:"Height",value:480},{name:"Filter index",value:1},{name:"Filter",value:"linear"},{name:"Wrap index",value:1},{name:"Wrap",value:"repeat"},{name:"Pixel Format index",value:0},{name:"Pixel Format",value:"RGBA 8bit ubyte"},{name:"R",value:0},{name:"G",value:0},{name:"B",value:0},{name:"A",value:0}],portsOut:[{name:"Next",links:[{portIn:"render",portOut:"Next",objIn:"21",objOut:"22"}]},{name:"texture_out",links:[{portIn:"Image",portOut:"texture_out",objIn:"110",objOut:"22"},{portIn:"Image",portOut:"texture_out",objIn:"111",objOut:"22"}]},{name:"Aspect Ratio",value:1.6932153392330382},{name:"Texture Width",value:574},{name:"Texture Height",value:339}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v3",id:"23",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"Image"},{name:"Premultiplied",value:false},{name:"Alpha Mask",value:false},{name:"removeAlphaSrc",value:false},{name:"Mask",value:0},{name:"Mask Src index",value:1},{name:"Mask Src",value:"alpha channel"},{name:"Invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"42",objOut:"23"}]}]},{objName:"Ops.Gl.Matrix.Transform",id:"24",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:-2.732336738668514},{name:"posY"},{name:"posZ",value:-.7310844118106938},{name:"scale"},{name:"rotX"},{name:"rotY"},{name:"rotZ"}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"37",objOut:"24"}]}]},{objName:"Ops.Gl.ShaderEffects.DeformArea",id:"25",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Size",value:2.83},{name:"Strength",value:22},{name:"Smooth",value:true},{name:"WorldSpace",value:false},{name:"x"},{name:"y"},{name:"z"}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"27",objOut:"25"}]}]},{objName:"Ops.Gl.ShaderEffects.DeformArea",id:"26",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Size",value:1.5},{name:"Strength",value:11},{name:"Smooth",value:true},{name:"WorldSpace",value:false},{name:"x"},{name:"y"},{name:"z"}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"25",objOut:"26"}]}]},{objName:"Ops.Gl.ShaderEffects.PerlinAreaDeform",id:"27",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Scale",value:6.75},{name:"Size",value:3.36},{name:"Strength",value:16.8},{name:"Smooth",value:true},{name:"x",value:0},{name:"y",value:0},{name:"z",value:0},{name:"Scroll X",value:7.13},{name:"Scroll Y",value:0},{name:"Scroll Z"},{name:"Deform X",value:true},{name:"Deform Y",value:true},{name:"Deform Z",value:true},{name:"WorldSpace",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"28",objOut:"27"}]}]},{objName:"Ops.Gl.Meshes.Sphere_v2",id:"28",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"radius",value:1.64},{name:"stacks",value:100},{name:"slices",value:100},{name:"Filloffset",value:1},{name:"Render",value:true}],portsOut:[{name:"trigger",value:0},{name:"geometry"}]},{objName:"Ops.Anim.RandomAnim",id:"29",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"min",value:-1},{name:"max",value:1},{name:"random seed",value:0},{name:"duration"},{name:"pause between",value:0},{name:"easing index",value:0},{name:"easing",value:"Cubic In Out"}],portsOut:[{name:"Next",value:0},{name:"result",links:[{portIn:"x",portOut:"result",objIn:"25",objOut:"29"}]},{name:"Looped",value:0}]},{objName:"Ops.Anim.RandomAnim",id:"30",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"min",value:-1},{name:"max",value:1},{name:"random seed",value:0},{name:"duration"},{name:"pause between",value:0},{name:"easing index",value:0},{name:"easing",value:"Cubic In Out"}],portsOut:[{name:"Next",links:[{portIn:"exe",portOut:"Next",objIn:"29",objOut:"30"}]},{name:"result",links:[{portIn:"x",portOut:"result",objIn:"26",objOut:"30"}]},{name:"Looped",value:0}]},{objName:"Ops.Anim.RandomAnim",id:"31",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"min",value:-1},{name:"max",value:1},{name:"random seed",value:0},{name:"duration"},{name:"pause between",value:0},{name:"easing index",value:0},{name:"easing",value:"Cubic In Out"}],portsOut:[{name:"Next",value:0},{name:"result",links:[{portIn:"z",portOut:"result",objIn:"25",objOut:"31"}]},{name:"Looped",value:0}]},{objName:"Ops.Anim.RandomAnim",id:"32",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"min",value:-1},{name:"max",value:1},{name:"random seed",value:0},{name:"duration"},{name:"pause between",value:0},{name:"easing index",value:0},{name:"easing",value:"Cubic In Out"}],portsOut:[{name:"Next",value:0},{name:"result",links:[{portIn:"y",portOut:"result",objIn:"25",objOut:"32"},{portIn:"number1",portOut:"result",objIn:"36",objOut:"32"}]},{name:"Looped",value:0}]},{objName:"Ops.Anim.RandomAnim",id:"33",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"min",value:-1},{name:"max",value:1},{name:"random seed",value:0},{name:"duration"},{name:"pause between",value:0},{name:"easing index",value:0},{name:"easing",value:"Cubic In Out"}],portsOut:[{name:"Next",links:[{portIn:"exe",portOut:"Next",objIn:"31",objOut:"33"}]},{name:"result",links:[{portIn:"z",portOut:"result",objIn:"26",objOut:"33"}]},{name:"Looped",value:0}]},{objName:"Ops.Anim.RandomAnim",id:"34",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"min",value:-1},{name:"max",value:1},{name:"random seed",value:0},{name:"duration"},{name:"pause between",value:0},{name:"easing index",value:0},{name:"easing",value:"smoothstep"}],portsOut:[{name:"Next",links:[{portIn:"exe",portOut:"Next",objIn:"32",objOut:"34"}]},{name:"result",links:[{portIn:"y",portOut:"result",objIn:"26",objOut:"34"}]},{name:"Looped",value:0}]},{objName:"Ops.Value.Number",id:"35",uiAttribs:{subPatch:0},portsIn:[{name:"value",value:4}],portsOut:[{name:"result",links:[{portIn:"duration",portOut:"result",objIn:"31",objOut:"35"},{portIn:"duration",portOut:"result",objIn:"32",objOut:"35"},{portIn:"duration",portOut:"result",objIn:"29",objOut:"35"},{portIn:"duration",portOut:"result",objIn:"33",objOut:"35"},{portIn:"duration",portOut:"result",objIn:"34",objOut:"35"},{portIn:"duration",portOut:"result",objIn:"30",objOut:"35"}]}]},{objName:"Ops.Math.Multiply",id:"36",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2",value:5}],portsOut:[{name:"result",links:[{portIn:"Scroll Z",portOut:"result",objIn:"27",objOut:"36"}]}]},{objName:"Ops.Gl.Shader.MatCapMaterialNew_v3",id:"37",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"MatCap"},{name:"Diffuse",value:0},{name:"Normal",value:0},{name:"Specular Mask",value:0},{name:"Specular MatCap",value:0},{name:"AO Texture",value:0},{name:"Opacity Texture",value:0},{name:"r",value:1},{name:"g",value:1},{name:"b",value:1},{name:"Opacity",value:1},{name:"AO Intensity",value:1},{name:"Normal Map Intensity",value:1},{name:"Repeat X",value:9.09},{name:"Repeat Y",value:.1},{name:"Offset X",value:0},{name:"Offset Y",value:0},{name:"Screen Space Normals",value:true},{name:"Calc normal tangents",value:true},{name:"Opacity TexCoords Transform",value:false},{name:"Discard Transparent Pixels",value:false},{name:"Alpha Mask Source index",value:0},{name:"Alpha Mask Source",value:"Luminance"}],portsOut:[{name:"Next",links:[{portIn:"render",portOut:"Next",objIn:"26",objOut:"37"}]},{name:"Shader"}]},{objName:"Ops.Gl.Texture_v2",id:"38",uiAttribs:{subPatch:0},portsIn:[{name:"File",value:"assets/629b7056fb577e98bc697d98_thuglee-03.jpg",display:"file"},{name:"Filter index",value:0},{name:"Filter",value:"mipmap"},{name:"Wrap index",value:2},{name:"Wrap",value:"repeat"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Flip",value:false},{name:"Pre Multiplied Alpha",value:false},{name:"Active",value:true},{name:"Save Memory",value:true}],portsOut:[{name:"Texture",links:[{portIn:"MatCap",portOut:"Texture",objIn:"37",objOut:"38"}]},{name:"Width",value:512},{name:"Height",value:512},{name:"Aspect Ratio",value:1},{name:"Loaded",value:true},{name:"Loading",value:false}]},{objName:"Ops.Gl.TextureEffects.ImageCompose_v3",id:"39",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Base Texture",value:0},{name:"Size index",value:0},{name:"Size",value:"Auto"},{name:"Width",value:640},{name:"Height",value:480},{name:"Filter index",value:1},{name:"Filter",value:"linear"},{name:"Wrap index",value:1},{name:"Wrap",value:"repeat"},{name:"Pixel Format index",value:0},{name:"Pixel Format",value:"RGBA 8bit ubyte"},{name:"R",value:0},{name:"G",value:0},{name:"B",value:0},{name:"A",value:0}],portsOut:[{name:"Next",links:[{portIn:"render",portOut:"Next",objIn:"23",objOut:"39"}]},{name:"texture_out",links:[{portIn:"Image",portOut:"texture_out",objIn:"68",objOut:"39"}]},{name:"Aspect Ratio",value:1.6932153392330382},{name:"Texture Width",value:574},{name:"Texture Height",value:339}]},{objName:"Ops.Gl.TextureEffects.ChromaticAberration_v2",id:"40",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"normal"},{name:"Amount",value:.723},{name:"Pixel"},{name:"Lens Distort",value:0},{name:"Smooth",value:false},{name:"Mask",value:0}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"66",objOut:"40"}]}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v3",id:"41",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"Image",value:0},{name:"Premultiplied",value:false},{name:"Alpha Mask",value:false},{name:"removeAlphaSrc",value:false},{name:"Mask",value:0},{name:"Mask Src index",value:1},{name:"Mask Src",value:"alpha channel"},{name:"Invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"68",objOut:"41"}]}]},{objName:"Ops.Gl.TextureEffects.FXAA",id:"42",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"span index",value:0},{name:"span",value:8},{name:"reduceMin",value:128},{name:"reduceMul",value:8},{name:"use viewport size",value:true},{name:"width",value:0},{name:"height",value:0}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"40",objOut:"42"}]}]},{objName:"Ops.Vars.VarSetNumber_v2",id:"43",uiAttribs:{subPatch:0},portsIn:[{name:"Value"},{name:"Variable",value:"state"},{name:"Create new variable",value:0},{name:"",value:["Rename"]}],portsOut:[]},{objName:"Ops.Vars.VarGetNumber_v2",id:"44",uiAttribs:{subPatch:0},portsIn:[{name:"Variable",value:"state"}],portsOut:[{name:"Value",links:[{portIn:"Index",portOut:"Value",objIn:"4",objOut:"44"}]}]},{objName:"Ops.Vars.VarSetNumber_v2",id:"45",uiAttribs:{subPatch:0},portsIn:[{name:"Value"},{name:"Variable",value:"is_warehouse_loaded"},{name:"Create new variable",value:0},{name:"",value:["Rename"]}],portsOut:[]},{objName:"Ops.Anim.RandomAnim",id:"46",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"min",value:0},{name:"max",value:100},{name:"random seed",value:0},{name:"duration",value:1},{name:"pause between",value:0},{name:"easing index",value:0},{name:"easing",value:"smoothstep"}],portsOut:[{name:"Next",links:[{portIn:"exe",portOut:"Next",objIn:"47",objOut:"46"}]},{name:"result",links:[{portIn:"rotX",portOut:"result",objIn:"24",objOut:"46"}]},{name:"Looped",value:0}]},{objName:"Ops.Anim.RandomAnim",id:"47",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"min",value:0},{name:"max",value:100},{name:"random seed",value:0},{name:"duration",value:5},{name:"pause between",value:0},{name:"easing index",value:0},{name:"easing",value:"smoothstep"}],portsOut:[{name:"Next",links:[{portIn:"exe",portOut:"Next",objIn:"48",objOut:"47"}]},{name:"result",links:[{portIn:"rotY",portOut:"result",objIn:"24",objOut:"47"}]},{name:"Looped",value:0}]},{objName:"Ops.Anim.RandomAnim",id:"48",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"min",value:0},{name:"max",value:100},{name:"random seed",value:0},{name:"duration",value:5},{name:"pause between",value:0},{name:"easing index",value:0},{name:"easing",value:"smoothstep"}],portsOut:[{name:"Next",value:0},{name:"result",links:[{portIn:"rotZ",portOut:"result",objIn:"24",objOut:"48"}]},{name:"Looped",value:0}]},{objName:"Ops.Gl.TextureEffects.Vibrance",id:"49",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"amount"}],portsOut:[{name:"Trigger",links:[{portIn:"render",portOut:"Trigger",objIn:"113",objOut:"49"}]}]},{objName:"Ops.Vars.VarGetNumber_v2",id:"50",uiAttribs:{subPatch:0},portsIn:[{name:"Variable",value:"state"}],portsOut:[{name:"Value",links:[{portIn:"Value",portOut:"Value",objIn:"59",objOut:"50"}]}]},{objName:"Ops.Anim.SimpleAnim",id:"51",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"reset"},{name:"rewind"},{name:"start",value:0},{name:"end",value:1},{name:"duration",value:3},{name:"loop",value:false},{name:"Wait for Reset",value:true},{name:"easing index",value:0},{name:"easing",value:"smootherstep"}],portsOut:[{name:"Next",value:0},{name:"result",links:[{portIn:"number 0",portOut:"result",objIn:"56",objOut:"51"}]},{name:"finished",value:true},{name:"Finished Trigger",value:0}]},{objName:"Ops.Math.Multiply",id:"52",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2",value:20}],portsOut:[{name:"result",links:[{portIn:"amount",portOut:"result",objIn:"66",objOut:"52"}]}]},{objName:"Ops.Math.Abs",id:"53",uiAttribs:{subPatch:0},portsIn:[{name:"number"}],portsOut:[{name:"result",links:[{portIn:"number1",portOut:"result",objIn:"52",objOut:"53"},{portIn:"number 0",portOut:"result",objIn:"61",objOut:"53"},{portIn:"number1",portOut:"result",objIn:"62",objOut:"53"},{portIn:"number1",portOut:"result",objIn:"64",objOut:"53"},{portIn:"number 1",portOut:"result",objIn:"114",objOut:"53"}]}]},{objName:"Ops.Trigger.IfEqualsThen",id:"54",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"Value 1"},{name:"Value 2",value:0}],portsOut:[{name:"then",links:[{portIn:"Exec",portOut:"then",objIn:"57",objOut:"54"}]},{name:"else",links:[{portIn:"Exec",portOut:"else",objIn:"58",objOut:"54"}]}]},{objName:"Ops.Vars.VarGetNumber_v2",id:"55",uiAttribs:{subPatch:0},portsIn:[{name:"Variable",value:"state"}],portsOut:[{name:"Value",links:[{portIn:"Value 1",portOut:"Value",objIn:"54",objOut:"55"}]}]},{objName:"Ops.Math.Math",id:"56",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:1},{name:"math mode index",value:0},{name:"math mode",value:"-"}],portsOut:[{name:"result",links:[{portIn:"number",portOut:"result",objIn:"53",objOut:"56"}]}]},{objName:"Ops.Trigger.TriggerOnce",id:"57",uiAttribs:{subPatch:0},portsIn:[{name:"Exec"},{name:"Reset"}],portsOut:[{name:"Next",links:[{portIn:"rewind",portOut:"Next",objIn:"51",objOut:"57"}]},{name:"Was Triggered",value:true}]},{objName:"Ops.Trigger.TriggerOnce",id:"58",uiAttribs:{subPatch:0},portsIn:[{name:"Exec"},{name:"Reset"}],portsOut:[{name:"Next",links:[{portIn:"reset",portOut:"Next",objIn:"51",objOut:"58"},{portIn:"Reset",portOut:"Next",objIn:"57",objOut:"58"}]},{name:"Was Triggered",value:false}]},{objName:"Ops.Trigger.TriggerIfDecreased",id:"59",uiAttribs:{subPatch:0},portsIn:[{name:"Value"}],portsOut:[{name:"Trigger",links:[{portIn:"Reset",portOut:"Trigger",objIn:"58",objOut:"59"}]}]},{objName:"Ops.Math.Math",id:"60",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:.08},{name:"math mode index",value:0},{name:"math mode",value:"+"}],portsOut:[{name:"result",links:[{portIn:"scale",portOut:"result",objIn:"24",objOut:"60"}]}]},{objName:"Ops.Math.Math",id:"61",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:.22},{name:"math mode index",value:0},{name:"math mode",value:"*"}],portsOut:[{name:"result",links:[{portIn:"number 0",portOut:"result",objIn:"60",objOut:"61"}]}]},{objName:"Ops.Math.Multiply",id:"62",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2",value:.03}],portsOut:[{name:"result",links:[{portIn:"number 0",portOut:"result",objIn:"63",objOut:"62"}]}]},{objName:"Ops.Math.Math",id:"63",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:1},{name:"math mode index",value:0},{name:"math mode",value:"+"}],portsOut:[{name:"result",links:[{portIn:"amount",portOut:"result",objIn:"49",objOut:"63"}]}]},{objName:"Ops.Math.Multiply",id:"64",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2",value:50}],portsOut:[{name:"result",links:[{portIn:"number 0",portOut:"result",objIn:"65",objOut:"64"}]}]},{objName:"Ops.Math.Math",id:"65",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:.66},{name:"math mode index",value:0},{name:"math mode",value:"+"}],portsOut:[{name:"result",links:[{portIn:"Pixel",portOut:"result",objIn:"40",objOut:"65"}]}]},{objName:"Ops.Gl.TextureEffects.Blur",id:"66",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"amount"},{name:"direction index",value:0},{name:"direction",value:"both"},{name:"Fast",value:true},{name:"mask",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"49",objOut:"66"}]}]},{objName:"Ops.Gl.TextureEffects.Noise.Noise_v2",id:"67",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"softlight"},{name:"Alpha Mask index",value:0},{name:"Alpha Mask",value:"Off"},{name:"Amount",value:.125},{name:"Animated",value:true},{name:"RGB",value:false},{name:"Normalize",value:false},{name:"Multiply",value:0}],portsOut:[{name:"Next",value:0}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v3",id:"68",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"Image"},{name:"Premultiplied",value:false},{name:"Alpha Mask",value:false},{name:"removeAlphaSrc",value:false},{name:"Mask",value:0},{name:"Mask Src index",value:1},{name:"Mask Src",value:"alpha channel"},{name:"Invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"67",objOut:"68"}]}]},{objName:"Ops.Gl.Meshes.Rectangle_v2",id:"69",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"width",value:1},{name:"height",value:1},{name:"pivot x index",value:0},{name:"pivot x",value:"center"},{name:"pivot y index",value:0},{name:"pivot y",value:"center"},{name:"num columns",value:100},{name:"num rows",value:100},{name:"axis index",value:0},{name:"axis",value:"xy"},{name:"Active",value:true}],portsOut:[{name:"trigger",value:0},{name:"geometry"}]},{objName:"Ops.Gl.ShaderEffects.VertexDisplacementMap_v4",id:"70",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Extrude",value:.13},{name:"Mode index",value:0},{name:"Mode",value:"Norm"},{name:"Axis index",value:0},{name:"Axis",value:"XYZ"},{name:"Coordinates index",value:0},{name:"Coordinates",value:"Tex Coords"},{name:"Texture"},{name:"Channel index",value:0},{name:"Channel",value:"Luminance"},{name:"Flip index",value:0},{name:"Flip",value:"None"},{name:"Range index",value:0},{name:"Range",value:"0-1"},{name:"Offset X",value:0},{name:"Offset Y",value:0},{name:"Scale",value:1},{name:"Calc Normals",value:false},{name:"Discard Zero Values",value:false},{name:"colorize",value:false},{name:"Colorize Min",value:0},{name:"Colorize Max",value:1}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"69",objOut:"70"}]}]},{objName:"Ops.Gl.TextureEffects.ImageCompose_v3",id:"71",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Base Texture",value:0},{name:"Size index",value:0},{name:"Size",value:"Manual"},{name:"Width",value:1e3},{name:"Height",value:1e3},{name:"Filter index",value:1},{name:"Filter",value:"linear"},{name:"Wrap index",value:1},{name:"Wrap",value:"repeat"},{name:"Pixel Format index",value:0},{name:"Pixel Format",value:"RGBA 8bit ubyte"},{name:"R",value:0},{name:"G",value:0},{name:"B",value:0},{name:"A",value:0}],portsOut:[{name:"Next",links:[{portIn:"render",portOut:"Next",objIn:"88",objOut:"71"}]},{name:"texture_out",links:[{portIn:"Image",portOut:"texture_out",objIn:"73",objOut:"71"},{portIn:"Texture",portOut:"texture_out",objIn:"70",objOut:"71"}]},{name:"Aspect Ratio",value:1},{name:"Texture Width",value:1e3},{name:"Texture Height",value:1e3}]},{objName:"Ops.Gl.TextureEffects.ImageCompose_v3",id:"72",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Base Texture",value:0},{name:"Size index",value:0},{name:"Size",value:"Manual"},{name:"Width",value:1e3},{name:"Height",value:1e3},{name:"Filter index",value:1},{name:"Filter",value:"linear"},{name:"Wrap index",value:1},{name:"Wrap",value:"repeat"},{name:"Pixel Format index",value:0},{name:"Pixel Format",value:"RGBA 8bit ubyte"},{name:"R",value:0},{name:"G",value:0},{name:"B",value:0},{name:"A",value:0}],portsOut:[{name:"Next",links:[{portIn:"render",portOut:"Next",objIn:"73",objOut:"72"}]},{name:"texture_out",links:[{portIn:"Normal Map",portOut:"texture_out",objIn:"83",objOut:"72"}]},{name:"Aspect Ratio",value:1},{name:"Texture Width",value:1e3},{name:"Texture Height",value:1e3}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v3",id:"73",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"Image"},{name:"Premultiplied",value:false},{name:"Alpha Mask",value:false},{name:"removeAlphaSrc",value:false},{name:"Mask",value:0},{name:"Mask Src index",value:1},{name:"Mask Src",value:"alpha channel"},{name:"Invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"74",objOut:"73"}]}]},{objName:"Ops.Gl.TextureEffects.ToNormalMap_v2",id:"74",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Strength",value:3.91},{name:"Step Multiplier",value:1.68}],portsOut:[{name:"trigger",value:0}]},{objName:"Ops.Gl.Meshes.Torus",id:"75",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"sides",value:8},{name:"rings",value:10.43},{name:"innerRadius",value:.52},{name:"outerRadius",value:.91},{name:"Draw",value:true}],portsOut:[{name:"trigger",value:0},{name:"geometry"}]},{objName:"Ops.Gl.Matrix.Transform",id:"76",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:1.101},{name:"posY",value:.233},{name:"posZ",value:-1.6074832866858668},{name:"scale",value:.21},{name:"rotX"},{name:"rotY",value:0},{name:"rotZ"}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"75",objOut:"76"}]}]},{objName:"Ops.Gl.Shader.WireframeMaterial",id:"77",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"enable depth testing",value:true},{name:"fill",value:false},{name:"width",value:.242},{name:"opacity",value:1},{name:"diffuse r",value:1},{name:"diffuse g",value:1},{name:"diffuse b",value:1},{name:"Fill R",value:1},{name:"Fill G",value:0},{name:"Fill B",value:0}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"76",objOut:"77"}]}]},{objName:"Ops.Anim.Timer_v2",id:"78",uiAttribs:{subPatch:0},portsIn:[{name:"Speed",value:27.28},{name:"Play",value:true},{name:"Reset",value:0},{name:"Sync to timeline",value:false}],portsOut:[{name:"Time",links:[{portIn:"rotX",portOut:"Time",objIn:"76",objOut:"78"},{portIn:"rotZ",portOut:"Time",objIn:"76",objOut:"78"}]}]},{objName:"Ops.Gl.TextureEffects.FXAA",id:"79",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"span index",value:0},{name:"span",value:"64"},{name:"reduceMin",value:128},{name:"reduceMul",value:8},{name:"use viewport size",value:true},{name:"width",value:0},{name:"height",value:0}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"11",objOut:"79"}]}]},{objName:"Ops.Gl.Shader.MatCapMaterialNew_v3",id:"80",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"MatCap"},{name:"Diffuse",value:0},{name:"Normal",value:0},{name:"Specular Mask",value:0},{name:"Specular MatCap",value:0},{name:"AO Texture",value:0},{name:"Opacity Texture",value:0},{name:"r",value:.651611328125},{name:"g",value:.7352246093749999},{name:"b",value:1},{name:"Opacity",value:1},{name:"AO Intensity",value:1},{name:"Normal Map Intensity",value:1},{name:"Repeat X",value:1},{name:"Repeat Y",value:1},{name:"Offset X",value:0},{name:"Offset Y",value:0},{name:"Screen Space Normals",value:false},{name:"Calc normal tangents",value:true},{name:"Opacity TexCoords Transform",value:false},{name:"Discard Transparent Pixels",value:false},{name:"Alpha Mask Source index",value:0},{name:"Alpha Mask Source",value:"Luminance"}],portsOut:[{name:"Next",links:[{portIn:"render",portOut:"Next",objIn:"14",objOut:"80"}]},{name:"Shader"}]},{objName:"Ops.Gl.Texture_v2",id:"81",uiAttribs:{subPatch:0},portsIn:[{name:"File",value:"assets/12719.jpg",display:"file"},{name:"Filter index",value:0},{name:"Filter",value:"mipmap"},{name:"Wrap index",value:2},{name:"Wrap",value:"repeat"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Flip",value:false},{name:"Pre Multiplied Alpha",value:false},{name:"Active",value:true},{name:"Save Memory",value:true}],portsOut:[{name:"Texture",links:[{portIn:"MatCap",portOut:"Texture",objIn:"80",objOut:"81"}]},{name:"Width",value:512},{name:"Height",value:512},{name:"Aspect Ratio",value:1},{name:"Loaded",value:true},{name:"Loading",value:false}]},{objName:"Ops.Gl.Texture_v2",id:"82",uiAttribs:{subPatch:0},portsIn:[{name:"File",value:"assets/12719-v4.jpg",display:"file"},{name:"Filter index",value:0},{name:"Filter",value:"mipmap"},{name:"Wrap index",value:2},{name:"Wrap",value:"repeat"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Flip",value:false},{name:"Pre Multiplied Alpha",value:false},{name:"Active",value:true},{name:"Save Memory",value:true}],portsOut:[{name:"Texture",links:[{portIn:"MatCap",portOut:"Texture",objIn:"17",objOut:"82"}]},{name:"Width",value:512},{name:"Height",value:512},{name:"Aspect Ratio",value:1},{name:"Loaded",value:true},{name:"Loading",value:false}]},{objName:"Ops.Gl.Phong.PhongMaterial_v6",id:"83",uiAttribs:{subPatch:0},portsIn:[{name:"Trigger In"},{name:"R",value:.71875},{name:"G",value:.85375},{name:"B",value:1},{name:"A",value:1},{name:"Enable",value:false},{name:"Albedo",value:.707},{name:"Roughness",value:.835},{name:"Active",value:false},{name:"Fresnel Intensity",value:.7},{name:"Fresnel Width",value:1},{name:"Fresnel Exponent",value:6},{name:"Fresnel R",value:1},{name:"Fresnel G",value:1},{name:"Fresnel B",value:1},{name:"Emissive Active",value:false},{name:"Color Intensity",value:.3},{name:"Emissive R",value:.8851905775987721},{name:"Emissive G",value:.6105620587018616},{name:"Emissive B",value:.15283101734362803},{name:"Shininess",value:4},{name:"Specular Amount",value:.5},{name:"Specular Model index",value:0},{name:"Specular Model",value:"Blinn"},{name:"Energy Conservation",value:false},{name:"Double Sided Material",value:false},{name:"Falloff Mode index",value:0},{name:"Falloff Mode",value:"A"},{name:"Diffuse Texture",value:0},{name:"Specular Texture",value:0},{name:"Normal Map"},{name:"AO Texture",value:0},{name:"Emissive Texture",value:0},{name:"Emissive Mask",value:0},{name:"Opacity Texture",value:0},{name:"Environment Map",value:0},{name:"Env Map Mask",value:0},{name:"Colorize Texture",value:false},{name:"Diffuse Repeat X",value:1},{name:"Diffuse Repeat Y",value:1},{name:"Texture Offset X",value:0},{name:"Texture Offset Y",value:0},{name:"Specular Intensity",value:1},{name:"Normal Map Intensity",value:.5},{name:"AO Intensity",value:1},{name:"Emissive Intensity",value:1},{name:"Emissive Mask Intensity",value:1},{name:"Env Map Intensity",value:1},{name:"Env Map Blend index",value:0},{name:"Env Map Blend",value:"Add"},{name:"Env Mask Intensity",value:1},{name:"Alpha Mask Source index",value:0},{name:"Alpha Mask Source",value:"Luminance"},{name:"Discard Transparent Pixels",value:false}],portsOut:[{name:"Trigger Out",links:[{portIn:"Render",portOut:"Trigger Out",objIn:"70",objOut:"83"}]},{name:"Shader"}]},{objName:"Ops.Math.Divide",id:"84",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2",value:-20}],portsOut:[{name:"result",links:[{portIn:"scrollY",portOut:"result",objIn:"88",objOut:"84"}]}]},{objName:"Ops.Gl.TextureEffects.Noise.SimplexNoise_v2",id:"85",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Mask",value:0},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"screen"},{name:"Amount",value:.546},{name:"Alpha Mask index",value:0},{name:"Alpha Mask",value:"Off"},{name:"smoothness",value:1.44},{name:"Harmonics index",value:0},{name:"Harmonics",value:"2"},{name:"scale",value:5.52},{name:"x",value:0},{name:"y",value:0},{name:"time"},{name:"Offset",value:0},{name:"Offset Multiply",value:1},{name:"Offset X index",value:0},{name:"Offset X",value:"None"},{name:"Offset Y index",value:0},{name:"Offset Y",value:"None"},{name:"Offset Z index",value:1},{name:"Offset Z",value:"R"}],portsOut:[{name:"trigger",value:0}]},{objName:"Ops.Math.Divide",id:"86",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2",value:26.65}],portsOut:[{name:"result",links:[{portIn:"time",portOut:"result",objIn:"85",objOut:"86"}]}]},{objName:"Ops.Anim.Timer_v2",id:"87",uiAttribs:{subPatch:0},portsIn:[{name:"Speed",value:10},{name:"Play",value:true},{name:"Reset",value:0},{name:"Sync to timeline",value:false}],portsOut:[{name:"Time",links:[{portIn:"number1",portOut:"Time",objIn:"84",objOut:"87"},{portIn:"number1",portOut:"Time",objIn:"86",objOut:"87"},{portIn:"anim",portOut:"Time",objIn:"88",objOut:"87"}]}]},{objName:"Ops.Gl.TextureEffects.Noise.FBMNoise_v2",id:"88",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"normal"},{name:"Amount",value:1},{name:"Alpha Mask index",value:0},{name:"Alpha Mask",value:"Off"},{name:"r",value:1},{name:"g",value:1},{name:"b",value:1},{name:"scale",value:1.68},{name:"anim"},{name:"scrollX",value:0},{name:"scrollY"},{name:"repeat",value:1},{name:"aspect",value:1},{name:"Layer 1",value:false},{name:"Layer 2",value:false},{name:"Layer 3",value:true},{name:"Layer 4",value:true},{name:"Tileable",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"85",objOut:"88"}]}]},{objName:"Ops.Gl.Shader.BasicMaterial_v3",id:"89",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"r",value:1},{name:"g",value:0},{name:"b",value:.5999999999999996},{name:"a",value:1},{name:"texture",value:0},{name:"colorizeTexture",value:false},{name:"Vertex Colors",value:false},{name:"textureOpacity",value:0},{name:"Alpha Mask Source index",value:0},{name:"Alpha Mask Source",value:"Luminance"},{name:"Opacity TexCoords Transform",value:false},{name:"Discard Transparent Pixels",value:false},{name:"diffuseRepeatX",value:1},{name:"diffuseRepeatY",value:1},{name:"Tex Offset X",value:0},{name:"Tex Offset Y",value:0},{name:"Crop TexCoords",value:false},{name:"billboard",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"91",objOut:"89"}]},{name:"shader"}]},{objName:"Ops.Gl.Textures.TextTexture_v4",id:"90",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"text"},{name:"font",value:"font"},{name:"weight",value:"normal"},{name:"Maximize Size",value:true},{name:"fontSize",value:30},{name:"Line Height",value:1},{name:"Vertical Offset",value:0},{name:"Show Debug",value:false},{name:"Limit Lines",value:0},{name:"texture width",value:512},{name:"texture height",value:128},{name:"filter index",value:1},{name:"filter",value:"linear"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"align index",value:1},{name:"align",value:"center"},{name:"vertical align index",value:1},{name:"vertical align",value:"center"},{name:"Reuse Texture",value:true},{name:"Draw Mesh",value:true},{name:"Scale Mesh",value:1},{name:"Hard Edges",value:false},{name:"Opacity",value:1},{name:"r"},{name:"g"},{name:"b"}],portsOut:[{name:"Next",links:[{portIn:"exe",portOut:"Next",objIn:"94",objOut:"90"},{portIn:"exe",portOut:"Next",objIn:"97",objOut:"90"},{portIn:"exe",portOut:"Next",objIn:"100",objOut:"90"}]},{name:"Ratio",value:.25},{name:"texture"},{name:"Aspect",value:4},{name:"Num Lines",value:1}]},{objName:"Ops.Gl.Matrix.Transform",id:"91",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:4.478050074269508},{name:"posY",value:1.0884199377740849},{name:"posZ",value:-1.3602458395164772},{name:"scale",value:.25},{name:"rotX",value:0},{name:"rotY",value:-90},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"90",objOut:"91"}]}]},{objName:"Ops.Html.FontFile_v2",id:"92",uiAttribs:{subPatch:0},portsIn:[{name:"file",value:"assets/HighlandGothicFLF.ttf",display:"file"},{name:"family",value:"font"}],portsOut:[{name:"Loaded",value:true},{name:"Loaded Trigger",value:0}]},{objName:"Ops.Vars.VarGetString",id:"93",uiAttribs:{subPatch:0},portsIn:[{name:"Variable",value:"text"}],portsOut:[{name:"Value",links:[{portIn:"text",portOut:"Value",objIn:"90",objOut:"93"}]}]},{objName:"Ops.Anim.SineAnim",id:"94",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"Mode index",value:0},{name:"Mode",value:"Sine"},{name:"phase",value:0},{name:"frequency",value:1},{name:"amplitude",value:1}],portsOut:[{name:"Trigger out",value:0},{name:"result",links:[{portIn:"number 0",portOut:"result",objIn:"95",objOut:"94"}]}]},{objName:"Ops.Math.Math",id:"95",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:1},{name:"math mode index",value:0},{name:"math mode",value:"+"}],portsOut:[{name:"result",links:[{portIn:"number 0",portOut:"result",objIn:"96",objOut:"95"}]}]},{objName:"Ops.Math.Math",id:"96",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:2},{name:"math mode index",value:0},{name:"math mode",value:"/"}],portsOut:[{name:"result",links:[{portIn:"r",portOut:"result",objIn:"90",objOut:"96"}]}]},{objName:"Ops.Anim.SineAnim",id:"97",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"Mode index",value:0},{name:"Mode",value:"Sine"},{name:"phase"},{name:"frequency",value:1},{name:"amplitude",value:1}],portsOut:[{name:"Trigger out",value:0},{name:"result",links:[{portIn:"number 0",portOut:"result",objIn:"98",objOut:"97"}]}]},{objName:"Ops.Math.Math",id:"98",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:1},{name:"math mode index",value:0},{name:"math mode",value:"+"}],portsOut:[{name:"result",links:[{portIn:"number 0",portOut:"result",objIn:"99",objOut:"98"}]}]},{objName:"Ops.Math.Math",id:"99",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:2},{name:"math mode index",value:0},{name:"math mode",value:"/"}],portsOut:[{name:"result",links:[{portIn:"g",portOut:"result",objIn:"90",objOut:"99"}]}]},{objName:"Ops.Anim.SineAnim",id:"100",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"Mode index",value:0},{name:"Mode",value:"Sine"},{name:"phase"},{name:"frequency",value:1},{name:"amplitude",value:1}],portsOut:[{name:"Trigger out",value:0},{name:"result",links:[{portIn:"number 0",portOut:"result",objIn:"101",objOut:"100"}]}]},{objName:"Ops.Math.Math",id:"101",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:1},{name:"math mode index",value:0},{name:"math mode",value:"+"}],portsOut:[{name:"result",links:[{portIn:"number 0",portOut:"result",objIn:"102",objOut:"101"}]}]},{objName:"Ops.Math.Math",id:"102",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:2},{name:"math mode index",value:0},{name:"math mode",value:"/"}],portsOut:[{name:"result",links:[{portIn:"b",portOut:"result",objIn:"90",objOut:"102"}]}]},{objName:"Ops.Math.Pi",id:"103",uiAttribs:{subPatch:0},portsIn:[{name:"Multiply amount",value:1}],portsOut:[{name:"Pi",links:[{portIn:"phase",portOut:"Pi",objIn:"100",objOut:"103"},{portIn:"number 0",portOut:"Pi",objIn:"104",objOut:"103"}]}]},{objName:"Ops.Math.Math",id:"104",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:2},{name:"math mode index",value:0},{name:"math mode",value:"/"}],portsOut:[{name:"result",links:[{portIn:"phase",portOut:"result",objIn:"97",objOut:"104"}]}]},{objName:"Ops.Vars.VarSetString_v2",id:"105",uiAttribs:{subPatch:0},portsIn:[{name:"Value",value:"New string"},{name:"Variable",value:"text"},{name:"Create new variable",value:0},{name:"",value:["Rename"]}],portsOut:[]},{objName:"Ops.Gl.Matrix.Transform",id:"106",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:3.686113808040012},{name:"posY",value:-.12130064795926035},{name:"posZ",value:-1.1877013513430459},{name:"scale",value:2.13},{name:"rotX",value:-90},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Trigger In",portOut:"trigger",objIn:"107",objOut:"106"}]}]},{objName:"Ops.Gl.Phong.SpotLight_v5",id:"107",uiAttribs:{subPatch:0},portsIn:[{name:"Trigger In"},{name:"Cast Light",value:true},{name:"Intensity",value:2},{name:"Radius",value:10},{name:"X",value:10.78},{name:"Y",value:-3.2},{name:"Z",value:18.13},{name:"Point At X",value:0},{name:"Point At Y",value:0},{name:"Point At Z",value:0},{name:"R",value:1},{name:"G",value:1},{name:"B",value:1},{name:"Specular R",value:1},{name:"Specular G",value:1},{name:"Specular B",value:1},{name:"Cone Angle",value:120},{name:"Inner Cone Angle",value:60},{name:"Spot Exponent",value:.97},{name:"Falloff",value:1e-5},{name:"Cast Shadow",value:false},{name:"Rendering Active",value:true},{name:"Map Size index",value:1},{name:"Map Size",value:512},{name:"Shadow Strength",value:.99},{name:"Near",value:.1},{name:"Far",value:30},{name:"Bias",value:1e-4},{name:"Polygon Offset",value:0},{name:"Normal Offset",value:0},{name:"Blur Amount",value:0},{name:"Enable Advanced",value:false},{name:"MSAA index",value:0},{name:"MSAA",value:"none"},{name:"Texture Filter index",value:0},{name:"Texture Filter",value:"Linear"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:"0"}],portsOut:[{name:"Trigger Out",links:[{portIn:"Trigger In",portOut:"Trigger Out",objIn:"83",objOut:"107"}]},{name:"Shadow Map"},{name:"World Position X",value:7.672281265258789},{name:"World Position Y",value:11.11466121673584},{name:"World Position Z",value:2.150181531906128}]},{objName:"Ops.Anim.RandomAnim",id:"108",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"min",value:.2},{name:"max",value:.3},{name:"random seed",value:0},{name:"duration",value:2},{name:"pause between",value:0},{name:"easing index",value:0},{name:"easing",value:"smoothstep"}],portsOut:[{name:"Next",value:0},{name:"result",links:[{portIn:"posY",portOut:"result",objIn:"24",objOut:"108"}]},{name:"Looped",value:0}]},{objName:"Ops.Gl.TextureEffects.ImageCompose_v3",id:"109",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Base Texture",value:0},{name:"Size index",value:0},{name:"Size",value:"Auto"},{name:"Width",value:640},{name:"Height",value:480},{name:"Filter index",value:1},{name:"Filter",value:"linear"},{name:"Wrap index",value:1},{name:"Wrap",value:"repeat"},{name:"Pixel Format index",value:0},{name:"Pixel Format",value:"RGBA 8bit ubyte"},{name:"R",value:0},{name:"G",value:0},{name:"B",value:0},{name:"A",value:0}],portsOut:[{name:"Next",links:[{portIn:"render",portOut:"Next",objIn:"110",objOut:"109"}]},{name:"texture_out",links:[{portIn:"Texture",portOut:"texture_out",objIn:"10",objOut:"109"}]},{name:"Aspect Ratio",value:1.6932153392330382},{name:"Texture Width",value:574},{name:"Texture Height",value:339}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v3",id:"110",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"Image"},{name:"Premultiplied",value:false},{name:"Alpha Mask",value:false},{name:"removeAlphaSrc",value:false},{name:"Mask",value:0},{name:"Mask Src index",value:1},{name:"Mask Src",value:"alpha channel"},{name:"Invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"Y"},{name:"Position",value:1},{name:"Crop",value:true},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"112",objOut:"110"}]}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v3",id:"111",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"screen"},{name:"amount",value:1},{name:"Image"},{name:"Premultiplied",value:false},{name:"Alpha Mask",value:false},{name:"removeAlphaSrc",value:false},{name:"Mask",value:0},{name:"Mask Src index",value:1},{name:"Mask Src",value:"alpha channel"},{name:"Invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",value:0}]},{objName:"Ops.Gl.TextureEffects.Blur",id:"112",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"amount",value:13.61},{name:"direction index",value:0},{name:"direction",value:"horizontal"},{name:"Fast",value:false},{name:"mask",value:0}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"111",objOut:"112"}]}]},{objName:"Ops.Gl.TextureEffects.BrightnessContrast",id:"113",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"contrast"},{name:"brightness",value:.161}],portsOut:[{name:"trigger",value:0}]},{objName:"Ops.Math.Math",id:"114",uiAttribs:{subPatch:0},portsIn:[{name:"number 0",value:1.5},{name:"number 1"},{name:"math mode index",value:0},{name:"math mode",value:"-"}],portsOut:[{name:"result",links:[{portIn:"contrast",portOut:"result",objIn:"113",objOut:"114"}]}]},{objName:"Ops.Gl.Matrix.Transform",id:"115",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:0},{name:"posY"},{name:"posZ"},{name:"scale",value:1},{name:"rotX",value:0},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"exe",portOut:"trigger",objIn:"1",objOut:"115"}]}]},{objName:"Ops.Devices.Mouse.Mouse_v2",id:"116",uiAttribs:{subPatch:0},portsIn:[{name:"Active",value:true},{name:"relative",value:false},{name:"normalize",value:false},{name:"flip y",value:true},{name:"Area index",value:0},{name:"Area",value:"Canvas"},{name:"right click prevent default",value:true},{name:"Touch support",value:true},{name:"smooth",value:false},{name:"smoothSpeed",value:20},{name:"multiply",value:1}],portsOut:[{name:"x",links:[{portIn:"number 0",portOut:"x",objIn:"119",objOut:"116"}]},{name:"y",links:[{portIn:"number 0",portOut:"y",objIn:"120",objOut:"116"}]},{name:"button down",value:false},{name:"click",value:0},{name:"Button Up",value:0},{name:"click right",value:0},{name:"mouseOver",value:false},{name:"button",value:0}]},{objName:"Ops.Devices.Mouse.Mouse_v2",id:"117",uiAttribs:{subPatch:0},portsIn:[{name:"Active",value:true},{name:"relative",value:false},{name:"normalize",value:false},{name:"flip y",value:true},{name:"Area index",value:0},{name:"Area",value:"Canvas"},{name:"right click prevent default",value:true},{name:"Touch support",value:true},{name:"smooth",value:false},{name:"smoothSpeed",value:20},{name:"multiply",value:1}],portsOut:[{name:"x",links:[{portIn:"Value",portOut:"x",objIn:"153",objOut:"117"}]},{name:"y",value:37},{name:"button down",value:false},{name:"click",links:[{portIn:"exe",portOut:"click",objIn:"127",objOut:"117"}]},{name:"Button Up",value:0},{name:"click right",value:0},{name:"mouseOver",value:false},{name:"button",value:0}]},{objName:"Ops.Gl.CanvasInfo",id:"118",uiAttribs:{subPatch:0},portsIn:[{name:"Pixel Unit index",value:0},{name:"Pixel Unit",value:"Display"}],portsOut:[{name:"width",links:[{portIn:"number 1",portOut:"width",objIn:"119",objOut:"118"}]},{name:"height",links:[{portIn:"number 1",portOut:"height",objIn:"120",objOut:"118"}]},{name:"Pixel Ratio",value:1},{name:"Aspect Ratio",value:1.6932153392330382},{name:"Landscape",value:1}]},{objName:"Ops.Math.Math",id:"119",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1"},{name:"math mode index",value:0},{name:"math mode",value:"/"}],portsOut:[{name:"result",links:[{portIn:"Value",portOut:"result",objIn:"123",objOut:"119"}]}]},{objName:"Ops.Math.Math",id:"120",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1"},{name:"math mode index",value:0},{name:"math mode",value:"/"}],portsOut:[{name:"result",links:[{portIn:"Value",portOut:"result",objIn:"124",objOut:"120"}]}]},{objName:"Ops.Math.Math",id:"121",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:30},{name:"math mode index",value:0},{name:"math mode",value:"/"}],portsOut:[{name:"result",links:[{portIn:"posZ",portOut:"result",objIn:"115",objOut:"121"}]}]},{objName:"Ops.Math.Math",id:"122",uiAttribs:{subPatch:0},portsIn:[{name:"number 0"},{name:"number 1",value:30},{name:"math mode index",value:0},{name:"math mode",value:"/"}],portsOut:[{name:"result",links:[{portIn:"posY",portOut:"result",objIn:"115",objOut:"122"}]}]},{objName:"Ops.Anim.Smooth",id:"123",uiAttribs:{subPatch:0},portsIn:[{name:"Update"},{name:"Separate inc/dec",value:false},{name:"Value"},{name:"Inc factor",value:20},{name:"Dec factor",value:4}],portsOut:[{name:"Next",value:0},{name:"Result",links:[{portIn:"number 0",portOut:"Result",objIn:"121",objOut:"123"}]}]},{objName:"Ops.Anim.Smooth",id:"124",uiAttribs:{subPatch:0},portsIn:[{name:"Update"},{name:"Separate inc/dec",value:false},{name:"Value"},{name:"Inc factor",value:20},{name:"Dec factor",value:4}],portsOut:[{name:"Next",value:0},{name:"Result",links:[{portIn:"number 0",portOut:"Result",objIn:"122",objOut:"124"}]}]},{objName:"Ops.Time.DelayedTrigger",id:"125",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"delay",value:3},{name:"Cancel",value:0}],portsOut:[{name:"next",links:[{portIn:"trigger in",portOut:"next",objIn:"126",objOut:"125"}]},{name:"Delaying",value:false}]},{objName:"Ops.Trigger.TriggerCounterLoop",id:"126",uiAttribs:{subPatch:0},portsIn:[{name:"trigger in"},{name:"reset",value:null},{name:"Loop min",value:1},{name:"Loop max",value:0}],portsOut:[{name:"trigger out",value:0},{name:"current count",links:[{portIn:"Boolean",portOut:"current count",objIn:"131",objOut:"126"}]}]},{objName:"Ops.Boolean.IfTrueThen_v2",id:"127",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"boolean"}],portsOut:[{name:"then",links:[{portIn:"exe",portOut:"then",objIn:"125",objOut:"127"},{portIn:"trigger in",portOut:"then",objIn:"126",objOut:"127"},{portIn:"trigger in",portOut:"then",objIn:"5",objOut:"127"}]},{name:"else",value:0}]},{objName:"Ops.Vars.VarSetNumber_v2",id:"128",uiAttribs:{subPatch:0},portsIn:[{name:"Value",value:1},{name:"Variable",value:"is_animation_finished"},{name:"Create new variable",value:0},{name:"",value:["Rename"]}],portsOut:[]},{objName:"Ops.Vars.VarSetNumber_v2",id:"129",uiAttribs:{subPatch:0},portsIn:[{name:"Value"},{name:"Variable",value:"is_animation_finished"},{name:"Create new variable",value:0},{name:"",value:["Rename"]}],portsOut:[]},{objName:"Ops.Vars.VarGetNumber_v2",id:"130",uiAttribs:{subPatch:0},portsIn:[{name:"Variable",value:"is_animation_finished"}],portsOut:[{name:"Value",links:[{portIn:"boolean",portOut:"Value",objIn:"127",objOut:"130"}]}]},{objName:"Ops.Boolean.Not",id:"131",uiAttribs:{subPatch:0},portsIn:[{name:"Boolean"}],portsOut:[{name:"Result",links:[{portIn:"Value",portOut:"Result",objIn:"129",objOut:"131"}]}]},{objName:"Ops.WebAudio.AudioBuffer_v2",id:"132",uiAttribs:{subPatch:0},portsIn:[{name:"URL",value:"assets/main_music_loop.mp3",display:"file"},{name:"Create Loading Task",value:true}],portsOut:[{name:"Audio Buffer",links:[{portIn:"Audio Buffer",portOut:"Audio Buffer",objIn:"133",objOut:"132"}]},{name:"Finished Loading",value:true},{name:"Sample Rate",value:48e3},{name:"Length",value:8614606},{name:"Duration",value:179.47095833333333},{name:"Number of Channels",value:2},{name:"isLoading",value:false}]},{objName:"Ops.WebAudio.AudioBufferPlayer_v2",id:"133",uiAttribs:{subPatch:0},portsIn:[{name:"Audio Buffer"},{name:"Start / Stop"},{name:"Loop",value:true},{name:"Restart",value:0},{name:"Offset",value:0},{name:"Playback Rate",value:1},{name:"Detune",value:0}],portsOut:[{name:"Audio Out",links:[{portIn:"Audio In",portOut:"Audio Out",objIn:"138",objOut:"133"}]},{name:"Is Playing",value:false},{name:"Loading",value:false}]},{objName:"Ops.WebAudio.AudioBufferPlayer_v2",id:"134",uiAttribs:{subPatch:0},portsIn:[{name:"Audio Buffer"},{name:"Start / Stop"},{name:"Loop",value:true},{name:"Restart"},{name:"Offset",value:0},{name:"Playback Rate",value:1},{name:"Detune",value:0}],portsOut:[{name:"Audio Out",links:[{portIn:"Audio In",portOut:"Audio Out",objIn:"139",objOut:"134"}]},{name:"Is Playing",value:false},{name:"Loading",links:[{portIn:"Boolean",portOut:"Loading",objIn:"150",objOut:"134"}]}]},{objName:"Ops.Vars.VarGetNumber_v2",id:"135",uiAttribs:{subPatch:0},portsIn:[{name:"Variable",value:"state"}],portsOut:[{name:"Value",links:[{portIn:"Value",portOut:"Value",objIn:"136",objOut:"135"}]}]},{objName:"Ops.Boolean.IsZero",id:"136",uiAttribs:{subPatch:0},portsIn:[{name:"Value"}],portsOut:[{name:"Result",links:[{portIn:"Boolean",portOut:"Result",objIn:"137",objOut:"136"},{portIn:"bool 1",portOut:"Result",objIn:"151",objOut:"136"}]}]},{objName:"Ops.Boolean.Not",id:"137",uiAttribs:{subPatch:0},portsIn:[{name:"Boolean"}],portsOut:[{name:"Result",links:[{portIn:"Start / Stop",portOut:"Result",objIn:"133",objOut:"137"}]}]},{objName:"Ops.WebAudio.Output_v2",id:"138",uiAttribs:{subPatch:0},portsIn:[{name:"Audio In"},{name:"Volume"},{name:"Mute"},{name:"Show Audio Suspended Button",value:false}],portsOut:[{name:"Current Volume",value:0},{name:"Context State",value:"running"}]},{objName:"Ops.WebAudio.Output_v2",id:"139",uiAttribs:{subPatch:0},portsIn:[{name:"Audio In"},{name:"Volume"},{name:"Mute"},{name:"Show Audio Suspended Button",value:false,anim:{keys:[{t:55.36666666666667,v:0,e:0}],loop:false}}],portsOut:[{name:"Current Volume",value:0},{name:"Context State",value:"running"}]},{objName:"Ops.Vars.VarSetNumber_v2",id:"140",uiAttribs:{subPatch:0},portsIn:[{name:"Value",value:0},{name:"Variable",value:"mute_music"},{name:"Create new variable",value:0},{name:"",value:["Rename"]}],portsOut:[]},{objName:"Ops.Vars.VarSetNumber_v2",id:"141",uiAttribs:{subPatch:0},portsIn:[{name:"Value",value:.3},{name:"Variable",value:"volume"},{name:"Create new variable",value:0},{name:"",value:["Rename"]}],portsOut:[]},{objName:"Ops.Vars.VarGetNumber_v2",id:"142",uiAttribs:{subPatch:0},portsIn:[{name:"Variable",value:"mute_music"}],portsOut:[{name:"Value",links:[{portIn:"Mute",portOut:"Value",objIn:"138",objOut:"142"},{portIn:"Mute",portOut:"Value",objIn:"139",objOut:"142"}]}]},{objName:"Ops.Vars.VarGetNumber_v2",id:"143",uiAttribs:{subPatch:0},portsIn:[{name:"Variable",value:"volume"}],portsOut:[{name:"Value",links:[{portIn:"Volume",portOut:"Value",objIn:"139",objOut:"143"},{portIn:"Volume",portOut:"Value",objIn:"138",objOut:"143"}]}]},{objName:"Ops.Patch.LoadingStatus_v2",id:"144",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"PreRender Ops",value:false},{name:"Play Timeline",value:true}],portsOut:[{name:"Next",links:[{portIn:"exe",portOut:"Next",objIn:"8",objOut:"144"}]},{name:"Finished Initial Loading",value:true},{name:"Loading",value:false},{name:"Progress",links:[{portIn:"Value",portOut:"Progress",objIn:"145",objOut:"144"}]},{name:"Jobs",links:[{portIn:"array",portOut:"Jobs",objIn:"147",objOut:"144"}]},{name:"Trigger Loading Finished ",links:[{portIn:"Restart",portOut:"Trigger Loading Finished ",objIn:"134",objOut:"144"}]}]},{objName:"Ops.Vars.VarSetNumber_v2",id:"145",uiAttribs:{subPatch:0},portsIn:[{name:"Value"},{name:"Variable",value:"loading_status"},{name:"Create new variable",value:0},{name:"",value:["Rename"]}],portsOut:[]},{objName:"Ops.WebAudio.AudioBuffer_v2",id:"146",uiAttribs:{subPatch:0},portsIn:[{name:"URL",value:"assets/start_loop2.mp3",display:"file"},{name:"Create Loading Task",value:true}],portsOut:[{name:"Audio Buffer",links:[{portIn:"Audio Buffer",portOut:"Audio Buffer",objIn:"134",objOut:"146"}]},{name:"Finished Loading",value:true},{name:"Sample Rate",value:48e3},{name:"Length",value:2407317},{name:"Duration",value:50.1524375},{name:"Number of Channels",value:2},{name:"isLoading",links:[{portIn:"Boolean",portOut:"isLoading",objIn:"149",objOut:"146"}]}]},{objName:"Ops.Array.ArrayLength",id:"147",uiAttribs:{subPatch:0},portsIn:[{name:"array"}],portsOut:[{name:"length"}]},{objName:"Ops.Boolean.And",id:"148",uiAttribs:{subPatch:0},portsIn:[{name:"bool 1"},{name:"bool 2"}],portsOut:[{name:"result",links:[{portIn:"bool 2",portOut:"result",objIn:"151",objOut:"148"}]}]},{objName:"Ops.Boolean.Not",id:"149",uiAttribs:{subPatch:0},portsIn:[{name:"Boolean"}],portsOut:[{name:"Result",links:[{portIn:"bool 2",portOut:"Result",objIn:"148",objOut:"149"}]}]},{objName:"Ops.Boolean.Not",id:"150",uiAttribs:{subPatch:0},portsIn:[{name:"Boolean"}],portsOut:[{name:"Result",links:[{portIn:"bool 1",portOut:"Result",objIn:"148",objOut:"150"}]}]},{objName:"Ops.Boolean.And",id:"151",uiAttribs:{subPatch:0},portsIn:[{name:"bool 1"},{name:"bool 2"}],portsOut:[{name:"result",links:[{portIn:"Start / Stop",portOut:"result",objIn:"134",objOut:"151"}]}]},{objName:"Ops.Vars.VarSetNumber_v2",id:"152",uiAttribs:{subPatch:0},portsIn:[{name:"Value",value:0},{name:"Variable",value:"start_music"},{name:"Create new variable",value:0},{name:"",value:["Rename"]}],portsOut:[]},{objName:"Ops.Value.TriggerOnChangeNumber",id:"153",uiAttribs:{subPatch:0},portsIn:[{name:"Value"}],portsOut:[{name:"Next",links:[{portIn:"Restart",portOut:"Next",objIn:"134",objOut:"153"}]},{name:"Number",value:16}]}],users:[],userOps:[],tags:[],_id:"62f3860dbaf942c79aa57718",name:"main3",userId:"626d451a369187b4187e59d1",created:"2022-08-10T10:18:53.536Z",updated:"2022-08-26T12:29:20.760Z",log:[],__v:58,shortId:"EpWg7a",buildInfo:{core:{timestamp:1658229186222,created:"2022-07-19T11:13:06.222Z",git:{branch:"master",commit:"819fc0e7c02646be982b7338326b610a383cd8f6",date:"2022-07-19T11:09:39.000Z",message:"corelib"}},ui:{timestamp:1658229196319,created:"2022-07-19T11:13:16.319Z",git:{branch:"master",commit:"cde4fa72579470c06fa2ad7390223a8b7a061095",date:"2022-06-29T13:18:31.000Z",message:"idiot sandwitch"}},host:"cables.gl"},opsHash:"776a293829f59538ecd303320f95cbe0a6ff6d42",ui:{timeLineLength:20,bookmarks:[],viewBoxesGl:{0:{x:830.8267811703299,y:-854.1400117172478,z:1242.9817175428507}},renderer:{w:574,h:339,s:1}},updatedByUser:"hot_mole",description:"",deployments:{lastDeployment:{date:1661516993587,service:"download"}},exports:12,views:1,cachedUsername:"hot_mole",statsAdmin:{filenameScreenshots:["_screenshots/screenshot.png","_screenshots/screenshot_1660126740536.png","_screenshots/screenshot_1660146453027.png","_screenshots/screenshot_1660204483983.png","_screenshots/screenshot_1660238602436.png","_screenshots/screenshot_1660384482373.png","_screenshots/screenshot_1660398995772.png","_screenshots/screenshot_1660399000162.png","_screenshots/screenshot_1660399070923.png","_screenshots/screenshot_1660401081127.png","_screenshots/screenshot_1660401251336.png","_screenshots/screenshot_1660407611772.png","_screenshots/screenshot_1660409364890.png","_screenshots/screenshot_1660905536786.png","_screenshots/screenshot_1660906191845.png","_screenshots/screenshot_1660906495842.png","_screenshots/screenshot_1660906588552.png","_screenshots/screenshot_1660907050248.png","_screenshots/screenshot_1661014064737.png","_screenshots/screenshot_1661015749478.png","_screenshots/screenshot_1661025081725.png","_screenshots/screenshot_1661163132375.png","_screenshots/screenshot_1661163282128.png","_screenshots/screenshot_1661164180290.png","_screenshots/screenshot_1661171732262.png","_screenshots/screenshot_1661172901061.png","_screenshots/screenshot_1661174413009.png","_screenshots/screenshot_1661176635301.png","_screenshots/screenshot_1661182237735.png","_screenshots/screenshot_1661183193233.png","_screenshots/screenshot_1661191939074.png","_screenshots/screenshot_1661192388927.png","_screenshots/screenshot_1661261163254.png","_screenshots/screenshot_1661267885047.png","_screenshots/screenshot_converted.jpg","_screenshots/screenshot_converted.webp"],filenameExports:["_exports/cables_main31.zip","_exports/cables_main32.zip"],filenameAssets:["12719-v4.jpg","12719.jpg","366b21f608f4ca97523d7a6dc85b1a24.jpg","HighlandGothicFLF.ttf","warehaouse.glb"],hasOldScreenshots:false,hasOldExports:false,sizeScreenshots:15890.927734375,sizeExports:2378.9130859375,sizeAssets:4156.341796875}};if(!CABLES.exportedPatch){CABLES.exportedPatch=CABLES.exportedPatches["EpWg7a"]}"use strict";var CABLES=CABLES||{};CABLES.OPS=CABLES.OPS||{};var Ops=Ops||{};Ops.Gl=Ops.Gl||{};Ops.Anim=Ops.Anim||{};Ops.Html=Ops.Html||{};Ops.Math=Ops.Math||{};Ops.Time=Ops.Time||{};Ops.Vars=Ops.Vars||{};Ops.Array=Ops.Array||{};Ops.Patch=Ops.Patch||{};Ops.Value=Ops.Value||{};Ops.String=Ops.String||{};Ops.Boolean=Ops.Boolean||{};Ops.Devices=Ops.Devices||{};Ops.Gl.GLTF=Ops.Gl.GLTF||{};Ops.Trigger=Ops.Trigger||{};Ops.Gl.Phong=Ops.Gl.Phong||{};Ops.WebAudio=Ops.WebAudio||{};Ops.Gl.Matrix=Ops.Gl.Matrix||{};Ops.Gl.Meshes=Ops.Gl.Meshes||{};Ops.Gl.Shader=Ops.Gl.Shader||{};Ops.Gl.Textures=Ops.Gl.Textures||{};Ops.Devices.Mouse=Ops.Devices.Mouse||{};Ops.Gl.ShaderEffects=Ops.Gl.ShaderEffects||{};Ops.Gl.TextureEffects=Ops.Gl.TextureEffects||{};Ops.Gl.TextureEffects.Noise=Ops.Gl.TextureEffects.Noise||{};Ops.Gl.MainLoop=function(){CABLES.Op.apply(this,arguments);const i=this;const e={};const t=i.inValue("FPS Limit",0),n=i.outTrigger("trigger"),a=i.outNumber("width"),r=i.outNumber("height"),s=i.inValueBool("Reduce FPS not focussed",true),o=i.inValueBool("Reduce FPS loading"),l=i.inValueBool("Clear",true),u=i.inValueBool("ClearAlpha",true),h=i.inValueBool("Fullscreen Button",false),c=i.inValueBool("Active",true),f=i.inValueBool("Hires Displays",false),m=i.inSwitch("Pixel Unit",["Display","CSS"],"Display");i.onAnimFrame=C;f.onChange=function(){if(f.get())i.patch.cgl.pixelDensity=window.devicePixelRatio;else i.patch.cgl.pixelDensity=1;i.patch.cgl.updateSize();if(CABLES.UI)gui.setLayout();m.setUiAttribs({greyout:!f.get()})};c.onChange=function(){i.patch.removeOnAnimFrame(i);if(c.get()){i.setUiAttrib({extendTitle:""});i.onAnimFrame=C;i.patch.addOnAnimFrame(i);i.log("adding again!")}else{i.setUiAttrib({extendTitle:"Inactive"})}};const d=i.patch.cgl;let g=0;let p=0;if(!i.patch.cgl)i.uiAttr({error:"No webgl cgl context"});const _=vec3.create();vec3.set(_,0,0,0);const v=vec3.create();vec3.set(v,0,0,-2);h.onChange=S;setTimeout(S,100);let b=null;let x=true;let O=true;window.addEventListener("blur",()=>{x=false});window.addEventListener("focus",()=>{x=true});document.addEventListener("visibilitychange",()=>{O=!document.hidden});E();m.onChange=()=>{a.set(0);r.set(0)};function A(){if(o.get()&&i.patch.loading.getProgress()<1)return 5;if(s.get()){if(!O)return 10;if(!x)return 30}return t.get()}function S(){function e(){if(b)b.style.display="block"}function t(){if(b)b.style.display="none"}i.patch.cgl.canvas.addEventListener("mouseleave",t);i.patch.cgl.canvas.addEventListener("mouseenter",e);if(h.get()){if(!b){b=document.createElement("div");const n=i.patch.cgl.canvas.parentElement;if(n)n.appendChild(b);b.addEventListener("mouseenter",e);b.addEventListener("click",function(e){if(CABLES.UI&&!e.shiftKey)gui.cycleFullscreen();else d.fullScreen()})}b.style.padding="10px";b.style.position="absolute";b.style.right="5px";b.style.top="5px";b.style.width="20px";b.style.height="20px";b.style.cursor="pointer";b.style["border-radius"]="40px";b.style.background="#444";b.style["z-index"]="9999";b.style.display="none";b.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 490 490" style="width:20px;height:20px;" xml:space="preserve" width="512px" height="512px"><g><path d="M173.792,301.792L21.333,454.251v-80.917c0-5.891-4.776-10.667-10.667-10.667C4.776,362.667,0,367.442,0,373.333V480     c0,5.891,4.776,10.667,10.667,10.667h106.667c5.891,0,10.667-4.776,10.667-10.667s-4.776-10.667-10.667-10.667H36.416     l152.459-152.459c4.093-4.237,3.975-10.99-0.262-15.083C184.479,297.799,177.926,297.799,173.792,301.792z" fill="#FFFFFF"/><path d="M480,0H373.333c-5.891,0-10.667,4.776-10.667,10.667c0,5.891,4.776,10.667,10.667,10.667h80.917L301.792,173.792     c-4.237,4.093-4.354,10.845-0.262,15.083c4.093,4.237,10.845,4.354,15.083,0.262c0.089-0.086,0.176-0.173,0.262-0.262     L469.333,36.416v80.917c0,5.891,4.776,10.667,10.667,10.667s10.667-4.776,10.667-10.667V10.667C490.667,4.776,485.891,0,480,0z" fill="#FFFFFF"/><path d="M36.416,21.333h80.917c5.891,0,10.667-4.776,10.667-10.667C128,4.776,123.224,0,117.333,0H10.667     C4.776,0,0,4.776,0,10.667v106.667C0,123.224,4.776,128,10.667,128c5.891,0,10.667-4.776,10.667-10.667V36.416l152.459,152.459     c4.237,4.093,10.99,3.975,15.083-0.262c3.992-4.134,3.992-10.687,0-14.82L36.416,21.333z" fill="#FFFFFF"/><path d="M480,362.667c-5.891,0-10.667,4.776-10.667,10.667v80.917L316.875,301.792c-4.237-4.093-10.99-3.976-15.083,0.261     c-3.993,4.134-3.993,10.688,0,14.821l152.459,152.459h-80.917c-5.891,0-10.667,4.776-10.667,10.667s4.776,10.667,10.667,10.667     H480c5.891,0,10.667-4.776,10.667-10.667V373.333C490.667,367.442,485.891,362.667,480,362.667z" fill="#FFFFFF"/></g></svg>'}else{if(b){b.style.display="none";b.remove();b=null}}}i.onDelete=function(){d.gl.clearColor(0,0,0,0);d.gl.clear(d.gl.COLOR_BUFFER_BIT|d.gl.DEPTH_BUFFER_BIT)};function C(e){if(!c.get())return;if(d.aborted||d.canvas.clientWidth===0||d.canvas.clientHeight===0)return;const t=performance.now();i.patch.config.fpsLimit=A();if(d.canvasWidth==-1){d.setCanvas(i.patch.config.glCanvasId);return}if(d.canvasWidth!=a.get()||d.canvasHeight!=r.get()){let e=1;if(m.get()=="CSS")e=i.patch.cgl.pixelDensity;a.set(d.canvasWidth/e);r.set(d.canvasHeight/e)}if(CABLES.now()-p>1e3){CGL.fpsReport=CGL.fpsReport||[];if(i.patch.loading.getProgress()>=1&&p!==0)CGL.fpsReport.push(g);g=0;p=CABLES.now()}CGL.MESH.lastShader=null;CGL.MESH.lastMesh=null;d.renderStart(d,_,v);if(l.get()){d.gl.clearColor(0,0,0,1);d.gl.clear(d.gl.COLOR_BUFFER_BIT|d.gl.DEPTH_BUFFER_BIT)}n.trigger();if(CGL.MESH.lastMesh)CGL.MESH.lastMesh.unBind();if(CGL.Texture.previewTexture){if(!CGL.Texture.texturePreviewer)CGL.Texture.texturePreviewer=new CGL.Texture.texturePreview(d);CGL.Texture.texturePreviewer.render(CGL.Texture.previewTexture)}d.renderEnd(d);if(u.get()){d.gl.clearColor(1,1,1,1);d.gl.colorMask(false,false,false,true);d.gl.clear(d.gl.COLOR_BUFFER_BIT);d.gl.colorMask(true,true,true,true)}if(!d.frameStore.phong)d.frameStore.phong={};g++;i.patch.cgl.profileData.profileMainloopMs=performance.now()-t}function E(){setTimeout(()=>{if(i.patch.getOpsByObjName(i.name).length>1){i.setUiError("multimainloop","there should only be one mainloop op!");i.patch.addEventListener("onOpDelete",E)}else i.setUiError("multimainloop",null,1)},500)}};Ops.Gl.MainLoop.prototype=new CABLES.Op;CABLES.OPS["b0472a1d-db16-4ba6-8787-f300fbdc77bb"]={f:Ops.Gl.MainLoop,objName:"Ops.Gl.MainLoop"};Ops.Sequence=function(){CABLES.Op.apply(this,arguments);const r=this;const e={};const t=r.inTrigger("exe"),n=r.inTriggerButton("Clean up connections");const i=[],s=[],a=16;let o=null;t.onTriggered=u;n.onTriggered=h;n.setUiAttribs({hidePort:true});n.setUiAttribs({hideParam:true});for(let t=0;t<a;t++){const c=r.outTrigger("trigger "+t);s.push(c);c.onLinkChanged=l;if(t<a-1){let e=r.inTrigger("exe "+t);e.onTriggered=u;i.push(e)}}function l(){clearTimeout(o);o=setTimeout(()=>{let t=false;for(let e=0;e<s.length;e++)if(s[e].links.length>1)t=true;n.setUiAttribs({hideParam:!t});if(r.isCurrentUiOp())r.refreshParams()},60)}function u(){for(let e=0;e<s.length;e++)s[e].trigger()}function h(){let i=0;for(let n=0;n<s.length;n++){let t=[];if(s[n].links.length>1)for(let e=1;e<s[n].links.length;e++){while(s[i].links.length>0)i++;t.push(s[n].links[e]);const a=s[n].links[e].getOtherPort(s[n]);r.patch.link(r,"trigger "+i,a.parent,a.name);i++}for(let e=0;e<t.length;e++)t[e].remove()}l()}};Ops.Sequence.prototype=new CABLES.Op;CABLES.OPS["a466bc1f-06e9-4595-8849-bffb9fe22f99"]={f:Ops.Sequence,objName:"Ops.Sequence"};Ops.Gl.GLTF.GltfCameraViewMatrix=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("Update"),i=e.inString("Node Name","default"),a=e.outArray("Matrix"),r=e.outBool("Found");let s=null;n.onTriggered=()=>{if(!s)o();if(s){s.start(0);s.end();a.set(s.vMat)}};i.onChange=()=>{s=null};function o(){const t=e.patch.cgl.frameStore.currentScene;if(t){t.cameras=t.cameras||[];for(let e=0;e<t.cameras.length;e++){if(t.cameras[e].name==i.get()){s=t.cameras[e];r.set(true);return}}}r.set(false)}};Ops.Gl.GLTF.GltfCameraViewMatrix.prototype=new CABLES.Op;CABLES.OPS["ab3c43f7-3d73-4f46-8034-454e9c4d51c5"]={f:Ops.Gl.GLTF.GltfCameraViewMatrix,objName:"Ops.Gl.GLTF.GltfCameraViewMatrix"};Ops.String.SwitchString=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueInt("Index"),i=e.outString("Result");const a=[];n.onChange=o;for(var r=0;r<10;r++){var s=e.inString("String "+r);a.push(s);s.onChange=o}function o(){if(n.get()>=0&&a[n.get()]){i.set(a[n.get()].get())}}};Ops.String.SwitchString.prototype=new CABLES.Op;CABLES.OPS["2a7a0c68-f7c9-4249-b19a-d2de5cb4862c"]={f:Ops.String.SwitchString,objName:"Ops.String.SwitchString"};Ops.Trigger.TriggerCounterLoop=function(){CABLES.Op.apply(this,arguments);const n=this;const e={};const t=n.inTriggerButton("trigger in"),i=n.inTriggerButton("reset"),a=n.outTrigger("trigger out"),r=n.outValue("current count"),s=n.inValueInt("Loop min",0),o=n.inValueInt("Loop max",4);let l=Math.floor(s.get());t.onTriggered=function(){let e=Math.floor(s.get());let t=Math.floor(o.get());if(e<t){if(l<e){l=s.get()}else if(l>=t){l=s.get()}else{l++}}else if(e>t){if(l<t){l=e}else if(l>e){e}else if(l<=t){l=e}else{l--}}r.set(l);n.setUiAttrib({extendTitle:l});a.trigger()};i.onTriggered=function(){let e=Math.floor(s.get());let t=Math.floor(o.get());if(e<t){l=e}else if(t<e){l=e}else{l=0}n.setUiAttrib({extendTitle:l});r.set(l)}};Ops.Trigger.TriggerCounterLoop.prototype=new CABLES.Op;CABLES.OPS["d3356c53-e278-433f-af0b-d8327cd99a2d"]={f:Ops.Trigger.TriggerCounterLoop,objName:"Ops.Trigger.TriggerCounterLoop"};Ops.Gl.Matrix.MulViewMatrix=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("render"),i=e.inArray("matrix"),a=e.inValueBool("Identity",false),r=e.outTrigger("trigger");const s=mat4.create();const o=this.patch.cgl;i.set([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);n.onTriggered=function(){o.pushViewMatrix();if(i.get()){if(a.get())mat4.identity(o.vMatrix);mat4.multiply(o.vMatrix,o.vMatrix,i.get())}r.trigger();o.popViewMatrix()}};Ops.Gl.Matrix.MulViewMatrix.prototype=new CABLES.Op;CABLES.OPS["c2833486-717e-4f3c-9dd8-c62cc92ea46e"]={f:Ops.Gl.Matrix.MulViewMatrix,objName:"Ops.Gl.Matrix.MulViewMatrix"};Ops.Array.AnimArray_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("Update"),i=e.inArray("Next Array"),a=e.inFloat("Duration",1),r=e.outTrigger("Next"),s=e.outArray("Matrix");let o=0;let l=0;let u=true;let h=1;const c=new CABLES.Anim;c.createPort(e,"easing",_);c.loop=false;let f=null;a.onChange=i.onChange=_;let m,d;let g=[];n.onTriggered=()=>{let e=CABLES.now()/1e3;const t=c.getValue(e);if(m&&d)b(t)};function p(t){let n=[];n.length=t.length;for(let e=0;e<t.length;e++)n[e]=t[e];return n}function _(){if(!i.get())return;f=i.get();l=performance.now();c.clear(CABLES.now()/1e3);c.setValue(CABLES.now()/1e3,h);if(h==1)h=0;else h=1;if(g.length!=f.length)g=p(f);if(h==0){m=i.get();d=p(g)}else{m=p(g);d=i.get()}c.setValue(a.get()+CABLES.now()/1e3,h);u=false}function v(e,t,n){return(t-e)*n+e}function b(t){if(!m||!d||m.length!=d.length){s.set(null);e.logError("arrays wrong",m.length,d.length)}else{for(let e=0;e<m.length;e++){g[e]=v(m[e],d[e],t)}s.set(null);s.set(g)}r.trigger()}};Ops.Array.AnimArray_v2.prototype=new CABLES.Op;CABLES.OPS["048e852b-62ea-4314-b6f2-9ac5e7cbb066"]={f:Ops.Array.AnimArray_v2,objName:"Ops.Array.AnimArray_v2"};Ops.Gl.TextureEffects.ImageCompose_v3=function(){CABLES.Op.apply(this,arguments);const n=this;const e={imgcomp_frag:"IN vec2 texCoord;\nUNI vec4 bgColor;\nUNI sampler2D tex;\n\nvoid main()\n{\n\n    #ifndef USE_TEX\n        outColor=bgColor;\n    #endif\n    #ifdef USE_TEX\n        outColor=texture(tex,texCoord);\n    #endif\n\n\n\n}\n"};const i=n.patch.cgl,t=n.inTrigger("Render"),a=n.inTexture("Base Texture"),r=n.inSwitch("Size",["Auto","Manual"],"Auto"),s=n.inValueInt("Width",640),o=n.inValueInt("Height",480),l=n.inSwitch("Filter",["nearest","linear","mipmap"],"linear"),u=n.inValueSelect("Wrap",["clamp to edge","repeat","mirrored repeat"],"repeat"),h=n.inDropDown("Pixel Format",CGL.Texture.PIXELFORMATS,CGL.Texture.PFORMATSTR_RGBA8UB),c=n.inValueSlider("R",0),f=n.inValueSlider("G",0),m=n.inValueSlider("B",0),d=n.inValueSlider("A",0),g=n.outTrigger("Next"),p=n.outTexture("texture_out",CGL.Texture.getEmptyTexture(i)),_=n.outNumber("Aspect Ratio"),v=n.outNumber("Texture Width"),b=n.outNumber("Texture Height");n.setPortGroup("Texture Size",[r,s,o]);n.setPortGroup("Texture Parameters",[u,l,h]);c.setUiAttribs({colorPick:true});n.setPortGroup("Color",[c,f,m,d]);const x=[0,0,0,0];let O=null;let A=null;let S=true;let C=false;let E=null;let T=null;let I=null;u.onChange=l.onChange=h.onChange=D;a.onLinkChanged=r.onChange=B;t.onTriggered=n.preRender=j;B();function y(){if(O)O.delete();if(A)A.delete();O=new CGL.TextureEffect(i,{isFloatingPointTexture:N()});A=new CGL.Texture(i,{name:"image_compose_v2_"+n.id,isFloatingPointTexture:N(),filter:M(),wrap:L(),width:P(),height:w()});O.setSourceTexture(A);v.set(P());b.set(w());_.set(P()/w());p.set(CGL.Texture.getEmptyTexture(i));S=false;B()}function M(){if(l.get()=="nearest")return CGL.Texture.FILTER_NEAREST;else if(l.get()=="linear")return CGL.Texture.FILTER_LINEAR;else if(l.get()=="mipmap")return CGL.Texture.FILTER_MIPMAP}function L(){if(u.get()=="repeat")return CGL.Texture.WRAP_REPEAT;else if(u.get()=="mirrored repeat")return CGL.Texture.WRAP_MIRRORED_REPEAT;else if(u.get()=="clamp to edge")return CGL.Texture.WRAP_CLAMP_TO_EDGE}function N(){C=h.get()==CGL.Texture.PFORMATSTR_RGBA32F;return C}function P(){if(a.get()&&r.get()=="Auto")return a.get().width;if(r.get()=="Auto")return i.getViewPort()[2];return Math.ceil(s.get())}function w(){if(a.get()&&r.get()=="Auto")return a.get().height;else if(r.get()=="Auto")return i.getViewPort()[3];else return Math.ceil(o.get())}function D(){S=true}function U(){if((P()!=A.width||w()!=A.height||A.isFloatingPoint()!=N()||A.filter!=M()||A.wrap!=L())&&(P()!==0&&w()!==0)){y();O.setSourceTexture(A);p.set(CGL.Texture.getEmptyTexture(i));p.set(A);R()}}function R(){let e=null;if(r.get()=="Manual"){e=null}else if(r.get()=="Auto"){if(a.get())e="Input Texture";else e="Canvas Size";e+=": "+P()+" x "+w()}let t=false;t=r.uiAttribs.info!=e;r.setUiAttribs({info:e});if(t)n.refreshParams()}function V(){if(E)E.toggleDefine("USE_TEX",a.isLinked())}function B(){c.setUiAttribs({greyout:a.isLinked()});m.setUiAttribs({greyout:a.isLinked()});f.setUiAttribs({greyout:a.isLinked()});d.setUiAttribs({greyout:a.isLinked()});s.setUiAttribs({greyout:r.get()=="Auto"});o.setUiAttribs({greyout:r.get()=="Auto"});s.setUiAttribs({hideParam:r.get()!="Manual"});o.setUiAttribs({hideParam:r.get()!="Manual"});if(A)if(N()&&M()==CGL.Texture.FILTER_MIPMAP)n.setUiError("fpmipmap","Don't use mipmap and 32bit at the same time, many systems do not support this.");else n.setUiError("fpmipmap",null);R();V()}n.preRender=()=>{j()};function G(){if(!E){E=new CGL.Shader(i,"copytextureshader");E.setSource(E.getDefaultVertexShader(),e.imgcomp_frag);T=new CGL.Uniform(E,"t","tex",0);I=new CGL.Uniform(E,"4f","bgColor",c,f,m,d);V()}i.pushShader(E);i.currentTextureEffect.bind();if(a.get())i.setTexture(0,a.get().tex);i.currentTextureEffect.finish();i.popShader()}function j(){if(!O||S)y();const e=i.getViewPort();x[0]=e[0];x[1]=e[1];x[2]=e[2];x[3]=e[3];i.pushBlend(false);U();const t=i.currentTextureEffect;i.currentTextureEffect=O;i.currentTextureEffect.imgCompVer=3;i.currentTextureEffect.width=s.get();i.currentTextureEffect.height=o.get();O.setSourceTexture(A);O.startEffect(a.get()||CGL.Texture.getEmptyTexture(i,C),true);G();g.trigger();p.set(CGL.Texture.getEmptyTexture(i));p.set(O.getCurrentSourceTexture());O.endEffect();i.setViewPort(x[0],x[1],x[2],x[3]);i.popBlend(false);i.currentTextureEffect=t}};Ops.Gl.TextureEffects.ImageCompose_v3.prototype=new CABLES.Op;CABLES.OPS["e890a050-11b7-456e-b09b-d08cd9c1ee41"]={f:Ops.Gl.TextureEffects.ImageCompose_v3,objName:"Ops.Gl.TextureEffects.ImageCompose_v3"};Ops.Gl.Meshes.FullscreenRectangle=function(){CABLES.Op.apply(this,arguments);const e=this;const t={shader_frag:"UNI sampler2D tex;\nIN vec2 texCoord;\n\nvoid main()\n{\n    outColor= texture(tex,texCoord);\n}\n",shader_vert:"{{MODULES_HEAD}}\n\nIN vec3 vPosition;\nUNI mat4 projMatrix;\nUNI mat4 mvMatrix;\n\nOUT vec2 texCoord;\nIN vec2 attrTexCoord;\n\nvoid main()\n{\n   vec4 pos=vec4(vPosition,  1.0);\n\n   texCoord=vec2(attrTexCoord.x,(1.0-attrTexCoord.y));\n\n   gl_Position = projMatrix * mvMatrix * pos;\n}\n"};const n=e.inTrigger("render"),i=e.inSwitch("Scale",["Stretch","Fit"],"Stretch"),a=e.inValueBool("Flip Y"),r=e.inValueBool("Flip X"),s=e.inTexture("Texture"),o=e.outTrigger("trigger");const l=e.patch.cgl;let u=null;let h=new CGL.Geometry("fullscreen rectangle");let c=0,f=0,m=0,d=0,g=0;r.onChange=S;a.onChange=S;const p=new CGL.Shader(l,"fullscreenrectangle");p.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);p.setSource(t.shader_vert,t.shader_frag);p.fullscreenRectUniform=new CGL.Uniform(p,"t","tex",0);p.aspectUni=new CGL.Uniform(p,"f","aspectTex",0);let _=false;let v=true;let b=false;let x=[];n.onTriggered=A;e.toWorkPortsNeedToBeLinked(n);s.onChange=function(){v=true};function O(){let e=s.get();if(e)_=true;else _=false}e.preRender=function(){O();p.bind();if(u)u.render(p);A()};i.onChange=()=>{b=i.get()=="Fit"};function A(){if(l.getViewPort()[2]!=d||l.getViewPort()[3]!=g||!u)C();if(v)O();l.pushPMatrix();mat4.identity(l.pMatrix);mat4.ortho(l.pMatrix,0,d,g,0,-10,1e3);l.pushModelMatrix();mat4.identity(l.mMatrix);l.pushViewMatrix();mat4.identity(l.vMatrix);if(b&&s.get()){const n=s.get().width/s.get().height;let e=g;let t=g*n;if(t>d){e=d*1/n;t=d}x[0]=l.getViewPort()[0];x[1]=l.getViewPort()[1];x[2]=l.getViewPort()[2];x[3]=l.getViewPort()[3];l.setViewPort((d-t)/2,(g-e)/2,t,e)}if(_){if(s.get())l.setTexture(0,s.get().tex);u.render(p)}else{u.render(l.getShader())}l.gl.clear(l.gl.DEPTH_BUFFER_BIT);l.popPMatrix();l.popModelMatrix();l.popViewMatrix();if(b&&s.get())l.setViewPort(x[0],x[1],x[2],x[3]);o.trigger()}function S(){u=null}function C(){const e=l.getViewPort();if(e[2]==d&&e[3]==g&&u)return;let t=0,n=0;d=e[2];g=e[3];h.vertices=new Float32Array([t+d,n+g,0,t,n+g,0,t+d,n,0,t,n,0]);let i=null;if(a.get())i=new Float32Array([1,0,0,0,1,1,0,1]);else i=new Float32Array([1,1,0,1,1,0,0,0]);if(r.get()){i[0]=0;i[2]=1;i[4]=0;i[6]=1}h.setTexCoords(i);h.verticesIndices=new Uint16Array([2,1,0,3,1,2]);h.vertexNormals=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1]);h.tangents=new Float32Array([-1,0,0,-1,0,0,-1,0,0,-1,0,0]);h.biTangents==new Float32Array([0,-1,0,0,-1,0,0,-1,0,0,-1,0]);if(!u)u=new CGL.Mesh(l,h);else u.setGeom(h)}};Ops.Gl.Meshes.FullscreenRectangle.prototype=new CABLES.Op;CABLES.OPS["255bd15b-cc91-4a12-9b4e-53c710cbb282"]={f:Ops.Gl.Meshes.FullscreenRectangle,objName:"Ops.Gl.Meshes.FullscreenRectangle"};Ops.Gl.TextureEffects.ChromaticAberration_v2=function(){CABLES.Op.apply(this,arguments);const t=this;const e={chromatic_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float pixel;\nUNI float onePixel;\nUNI float amount;\nUNI float lensDistort;\n\n#ifdef MASK\nUNI sampler2D texMask;\n#endif\n\n{{CGL.BLENDMODES3}}\n\nvoid main()\n{\n   vec4 base=texture(tex,texCoord);\n   vec4 col=texture(tex,texCoord);\n\n   vec2 tc=texCoord;;\n   float pix = pixel;\n   if(lensDistort>0.0)\n   {\n       float dist = distance(texCoord, vec2(0.5,0.5));\n       tc-=0.5;\n       tc *=smoothstep(-0.9,1.0*lensDistort,1.0-dist);\n       tc+=0.5;\n   }\n\n    #ifdef MASK\n        vec4 m=texture(texMask,texCoord);\n        pix*=m.r*m.a;\n    #endif\n\n    #ifdef SMOOTH\n    #ifdef WEBGL2\n        float numSamples=round(pix/onePixel/4.0+1.0);\n        col.r=0.0;\n        col.b=0.0;\n\n        for(float off=0.0;off<numSamples;off++)\n        {\n            float diff=(pix/numSamples)*off;\n            col.r+=texture(tex,vec2(tc.x+diff,tc.y)).r/numSamples;\n            col.b+=texture(tex,vec2(tc.x-diff,tc.y)).b/numSamples;\n        }\n    #endif\n    #endif\n\n    #ifndef SMOOTH\n        col.r=texture(tex,vec2(tc.x+pix,tc.y)).r;\n        col.b=texture(tex,vec2(tc.x-pix,tc.y)).b;\n    #endif\n\n   outColor= cgl_blendPixel(base,col,amount);\n\n}\n"};const n=t.inTrigger("render"),i=CGL.TextureEffect.AddBlendSelect(t,"Blend Mode","normal"),a=t.inValueSlider("Amount",1),r=t.inValue("Pixel",5),s=t.inValueSlider("Lens Distort",0),o=t.inValueBool("Smooth",false),l=t.inTexture("Mask"),u=t.outTrigger("trigger");const h=t.patch.cgl;const c=new CGL.Shader(h,"chromatic");CGL.TextureEffect.setupBlending(t,c,i,a);c.setSource(c.getDefaultVertexShader(),e.chromatic_frag);const f=new CGL.Uniform(c,"t","tex",0),m=new CGL.Uniform(c,"f","pixel",0),d=new CGL.Uniform(c,"f","onePixel",0),g=new CGL.Uniform(c,"t","texMask",1),p=new CGL.Uniform(c,"f","amount",a),_=new CGL.Uniform(c,"f","lensDistort",s);o.onChange=function(){if(o.get())c.define("SMOOTH");else c.removeDefine("SMOOTH")};l.onChange=function(){if(l.get())c.define("MASK");else c.removeDefine("MASK")};n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(t,3))return;var e=h.currentTextureEffect.getCurrentSourceTexture();m.setValue(r.get()*(1/e.width));d.setValue(1/e.width);h.pushShader(c);h.currentTextureEffect.bind();h.setTexture(0,e.tex);if(l.get())h.setTexture(1,l.get().tex);h.currentTextureEffect.finish();h.popShader();u.trigger()}};Ops.Gl.TextureEffects.ChromaticAberration_v2.prototype=new CABLES.Op;CABLES.OPS["07701f81-1a98-44c0-b1ef-592db3cbb5d3"]={f:Ops.Gl.TextureEffects.ChromaticAberration_v2,objName:"Ops.Gl.TextureEffects.ChromaticAberration_v2"};Ops.Gl.TextureEffects.Noise.Noise_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={noise_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float amount;\nUNI float time;\n\n#ifdef HAS_MULMASK\n    UNI sampler2D texMul;\n#endif\n\n{{CGL.BLENDMODES3}}\n{{MODULES_HEAD}}\n\n{{CGL.RANDOM_TEX}}\n\nvoid main()\n{\n    vec4 rnd;\n\n    #ifdef RGB\n        rnd=vec4(cgl_random3(texCoord.xy+vec2(time)),1.0);\n    #else\n        float r=cgl_random(texCoord.xy+vec2(time));\n        rnd=vec4( r,r,r,1.0 );\n    #endif\n\n    vec4 base=texture(tex,texCoord);\n    vec4 col=rnd;//( _blend(base.rgb,rnd.rgb) ,1.0);\n\n    #ifdef NORMALIZE\n        col.rgb=(col.rgb-0.5)*2.0;\n    #endif\n\n    #ifdef HAS_MULMASK\n        col.rgb*=texture(texMul,texCoord).rgb;\n    #endif\n\n    outColor=cgl_blendPixel(base,col,amount);\n    // outColor=vec4( mix( col.rgb, base.rgb ,1.0-base.a*amount),1.0);\n}"};const n=e.inTrigger("Render"),i=CGL.TextureEffect.AddBlendSelect(e,"Blend Mode","normal"),a=CGL.TextureEffect.AddBlendAlphaMask(e),r=e.inValueSlider("Amount",1),s=e.inValueBool("Animated",true),o=e.inValueBool("RGB",false),l=e.inValueBool("Normalize",false),u=e.inTexture("Multiply"),h=e.outTrigger("Next");const c=e.patch.cgl,f=new CGL.Shader(c,e.name),m=new CGL.Uniform(f,"f","amount",r),d=new CGL.Uniform(f,"f","time",1),g=new CGL.Uniform(f,"t","tex",0),p=new CGL.Uniform(f,"t","texMul",1);f.setSource(f.getDefaultVertexShader(),t.noise_frag);CGL.TextureEffect.setupBlending(e,f,i,r,a);e.toWorkPortsNeedToBeLinked(n);u.onChange=l.onChange=o.onChange=function(){f.toggleDefine("HAS_MULMASK",u.get());f.toggleDefine("RGB",o.get());f.toggleDefine("NORMALIZE",l.get())};n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e,3))return;if(s.get())d.setValue(e.patch.freeTimer.get()/1e3%100);else d.setValue(0);c.pushShader(f);c.setTexture(0,c.currentTextureEffect.getCurrentSourceTexture().tex);if(u.get())c.setTexture(1,u.get().tex);c.currentTextureEffect.bind();c.currentTextureEffect.finish();c.popShader();h.trigger()}};Ops.Gl.TextureEffects.Noise.Noise_v2.prototype=new CABLES.Op;CABLES.OPS["b1d9aacc-dc52-43a6-a00f-414f08768800"]={f:Ops.Gl.TextureEffects.Noise.Noise_v2,objName:"Ops.Gl.TextureEffects.Noise.Noise_v2"};Ops.Gl.Meshes.Cube_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("Render"),i=e.inValueBool("Render Mesh",true),s=e.inValue("Width",1),o=e.inValue("Length",1),l=e.inValue("Height",1),u=e.inValueBool("Center",true),h=e.inSwitch("Mapping",["Side","Cube +-"],"Side"),f=e.inValue("Bias",0),m=e.inValueBool("Flip X",true),c=e.inValueBool("Top",true),d=e.inValueBool("Bottom",true),g=e.inValueBool("Left",true),p=e.inValueBool("Right",true),_=e.inValueBool("Front",true),v=e.inValueBool("Back",true),a=e.outTrigger("Next"),b=e.outObject("geometry",null,"geometry");const x=e.patch.cgl;e.toWorkPortsNeedToBeLinked(n);e.setPortGroup("Mapping",[h,f,m]);e.setPortGroup("Geometry",[s,l,o,u]);e.setPortGroup("Sides",[c,d,g,p,_,v]);let O=null,A=null,S=true,C=true;f.onChange=m.onChange=c.onChange=d.onChange=g.onChange=p.onChange=_.onChange=v.onChange=h.onChange=s.onChange=l.onChange=o.onChange=u.onChange=r;function r(){C=true}n.onLinkChanged=function(){if(!n.isLinked()){b.set(null);return}E()};n.onTriggered=function(){if(C)E();if(i.get()&&A&&S)A.render(x.getShader());a.trigger()};e.preRender=function(){E();A.render(x.getShader())};function E(){if(!O)O=new CGL.Geometry("cubemesh");O.clear();let e=s.get();let t=-1*s.get();let n=l.get();let i=-1*l.get();let a=o.get();let r=-1*o.get();if(!u.get()){t=0;i=0;r=0}else{e*=.5;t*=.5;n*=.5;i*=.5;a*=.5;r*=.5}if(h.get()=="Side")T(O,e,n,a,t,i,r);else I(O,e,n,a,t,i,r);O.verticesIndices=[];if(c.get())O.verticesIndices.push(8,9,10,8,10,11);if(d.get())O.verticesIndices.push(12,13,14,12,14,15);if(g.get())O.verticesIndices.push(20,21,22,20,22,23);if(p.get())O.verticesIndices.push(16,17,18,16,18,19);if(v.get())O.verticesIndices.push(4,5,6,4,6,7);if(_.get())O.verticesIndices.push(0,1,2,0,2,3);if(O.verticesIndices.length===0)S=false;else S=true;if(A)A.dispose();A=new CGL.Mesh(x,O);b.set(null);b.set(O);C=false}e.onDelete=function(){if(A)A.dispose()};function T(e,t,n,i,a,r,s){e.vertices=[a,r,i,t,r,i,t,n,i,a,n,i,a,r,s,a,n,s,t,n,s,t,r,s,a,n,s,a,n,i,t,n,i,t,n,s,a,r,s,t,r,s,t,r,i,a,r,i,t,r,s,t,n,s,t,n,i,t,r,i,a,r,s,a,r,i,a,n,i,a,n,s];const o=f.get();let l=1;let u=0;if(m.get()){l=0;u=1}e.setTexCoords([u+o,1-o,l-o,1-o,l-o,0+o,u+o,0+o,l-o,1-o,l-o,0+o,u+o,0+o,u+o,1-o,u+o,0+o,u+o,1-o,l-o,1-o,l-o,0+o,l-o,0+o,u+o,0+o,u+o,1-o,l-o,1-o,l-o,1-o,l-o,0+o,u+o,0+o,u+o,1-o,u+o,1-o,l-o,1-o,l-o,0+o,u+o,0+o]);e.vertexNormals=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]);e.tangents=new Float32Array([-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1]);e.biTangents=new Float32Array([0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0])}function I(e,t,n,i,a,r,s){e.vertices=[a,r,i,t,r,i,t,n,i,a,n,i,a,r,s,a,n,s,t,n,s,t,r,s,a,n,s,a,n,i,t,n,i,t,n,s,a,r,s,t,r,s,t,r,i,a,r,i,t,r,s,t,n,s,t,n,i,t,r,i,a,r,s,a,r,i,a,n,i,a,n,s];const o=.25;const l=1/3;const u=f.get();let h=0;if(m.get())h=1;const c=[];c.push(h+o+u,l*2-u,h+o*2-u,l*2-u,h+o*2-u,l+u,h+o+u,l+u,h+o*4-u,l*2-u,h+o*4-u,l+u,h+o*3+u,l+u,h+o*3+u,l*2-u);if(m.get())c.push(o+u,0-u,o*2-u,0-u,o*2-u,l*1+u,o+u,l*1+u,o+u,l*3+u,o+u,l*2-u,o*2-u,l*2-u,o*2-u,l*3+u);else c.push(o+u,0+u,o+u,l*1-u,o*2-u,l*1-u,o*2-u,0+u,o+u,l*3-u,o*2-u,l*3-u,o*2-u,l*2+u,o+u,l*2+u);c.push(h+o*3-u,1-l-u,h+o*3-u,1-l*2+u,h+o*2+u,1-l*2+u,h+o*2+u,1-l-u,h+o*0+u,1-l-u,h+o*1-u,1-l-u,h+o*1-u,1-l*2+u,h+o*0+u,1-l*2+u);e.setTexCoords(c);e.vertexNormals=[0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0];e.tangents=new Float32Array([-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1]);e.biTangents=new Float32Array([0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0])}};Ops.Gl.Meshes.Cube_v2.prototype=new CABLES.Op;CABLES.OPS["37b92ba4-cea5-42ae-bf28-a513ca28549c"]={f:Ops.Gl.Meshes.Cube_v2,objName:"Ops.Gl.Meshes.Cube_v2"};Ops.Gl.Matrix.Transform=function(){CABLES.Op.apply(this,arguments);const t=this;const e={};const n=t.inTrigger("render"),i=t.inValue("posX",0),a=t.inValue("posY",0),r=t.inValue("posZ",0),s=t.inValue("scale",1),o=t.inValue("rotX",0),l=t.inValue("rotY",0),u=t.inValue("rotZ",0),h=t.outTrigger("trigger");t.setPortGroup("Rotation",[o,l,u]);t.setPortGroup("Position",[i,a,r]);t.setPortGroup("Scale",[s]);t.setUiAxisPorts(i,a,r);const c=t.patch.cgl;const f=vec3.create();const m=vec3.create();const d=mat4.create();mat4.identity(d);let g=false,p=false,_=true,v=true,b=true;o.onChange=l.onChange=u.onChange=E;i.onChange=a.onChange=r.onChange=S;s.onChange=C;n.onTriggered=function(){let e=false;if(_){O();e=true}if(v){A();e=true}if(b)e=true;if(e)x();c.pushModelMatrix();mat4.multiply(c.mMatrix,c.mMatrix,d);h.trigger();c.popModelMatrix();if(CABLES.UI&&CABLES.UI.showCanvasTransforms)gui.setTransform(t.id,i.get(),a.get(),r.get());if(t.isCurrentUiOp())gui.setTransformGizmo({posX:i,posY:a,posZ:r})};t.transform3d=function(){return{pos:[i,a,r]}};function x(){mat4.identity(d);if(p)mat4.translate(d,d,f);if(o.get()!==0)mat4.rotateX(d,d,o.get()*CGL.DEG2RAD);if(l.get()!==0)mat4.rotateY(d,d,l.get()*CGL.DEG2RAD);if(u.get()!==0)mat4.rotateZ(d,d,u.get()*CGL.DEG2RAD);if(g)mat4.scale(d,d,m);b=false}function O(){p=false;if(i.get()!==0||a.get()!==0||r.get()!==0)p=true;vec3.set(f,i.get(),a.get(),r.get());_=false}function A(){g=true;vec3.set(m,s.get(),s.get(),s.get());v=false}function S(){_=true}function C(){v=true}function E(){b=true}x()};Ops.Gl.Matrix.Transform.prototype=new CABLES.Op;CABLES.OPS["650baeb1-db2d-4781-9af6-ab4e9d4277be"]={f:Ops.Gl.Matrix.Transform,objName:"Ops.Gl.Matrix.Transform"};Ops.Gl.GLTF.GltfScene_v3=function(){CABLES.Op.apply(this,arguments);const x=this;const l={inc_camera_js:"const gltfCamera = class\n{\n    constructor(gltf, node)\n    {\n        this.node=node;\n        this.name=node.name;\n        // console.log(gltf);\n        this.config=gltf.json.cameras[node.camera];\n\n        this.pos = vec3.create();\n        this.quat = quat.create();\n        this.quatOr = quat.create();\n        this.vCenter = vec3.create();\n        this.vUp = vec3.create();\n        this.vMat = mat4.create();\n\n    }\n\n    updateAnim(time)\n    {\n        if (this.node && this.node._animTrans)\n        {\n\n            vec3.set(this.pos,\n                this.node._animTrans[0].getValue(time),\n                this.node._animTrans[1].getValue(time),\n                this.node._animTrans[2].getValue(time));\n\n            quat.set(this.quat,\n                this.node._animRot[0].getValue(time),\n                this.node._animRot[1].getValue(time),\n                this.node._animRot[2].getValue(time),\n                this.node._animRot[3].getValue(time));\n        }\n    }\n\n    start(time)\n    {\n        if (cgl.frameStore.shadowPass) return;\n\n        this.updateAnim(time);\n        const asp = cgl.getViewPort()[2] / cgl.getViewPort()[3];\n\n        cgl.pushPMatrix();\n        // mat4.perspective(\n        //     cgl.pMatrix,\n        //     this.config.perspective.yfov*0.5,\n        //     asp,\n        //     this.config.perspective.znear,\n        //     this.config.perspective.zfar);\n\n        cgl.pushViewMatrix();\n        // mat4.identity(cgl.vMatrix);\n\n        // if(this.node && this.node.parent)\n        // {\n        //     console.log(this.node.parent)\n            // vec3.add(this.pos,this.pos,this.node.parent._node.translation);\n            // vec3.sub(this.vCenter,this.vCenter,this.node.parent._node.translation);\n            // mat4.translate(cgl.vMatrix,cgl.vMatrix,\n            // [\n            //     -this.node.parent._node.translation[0],\n            //     -this.node.parent._node.translation[1],\n            //     -this.node.parent._node.translation[2]\n            // ])\n        // }\n\n\n\n        // vec3.set(this.vUp, 0, 1, 0);\n        // vec3.set(this.vCenter, 0, -1, 0);\n        // // vec3.set(this.vCenter, 0, 1, 0);\n        // vec3.transformQuat(this.vCenter, this.vCenter, this.quat);\n        // vec3.normalize(this.vCenter, this.vCenter);\n        // vec3.add(this.vCenter, this.vCenter, this.pos);\n\n\n        // mat4.lookAt(cgl.vMatrix, this.pos, this.vCenter, this.vUp);\n\n\n        let mv=mat4.create();\n        mat4.invert(mv,this.node.modelMatAbs());\n\n        // console.log(this.node.modelMatAbs());\n\n        this.vMat=mv;\n\n        mat4.identity(cgl.vMatrix);\n        // console.log(mv);\n        mat4.mul(cgl.vMatrix,cgl.vMatrix,mv);\n\n\n    }\n\n    end()\n    {\n        if (cgl.frameStore.shadowPass) return;\n        cgl.popPMatrix();\n        cgl.popViewMatrix();\n    }\n};\n\n",inc_gltf_js:'const CHUNK_HEADER_SIZE = 8;\n\nconst Gltf = class\n{\n    constructor()\n    {\n        this.json = {};\n        this.accBuffers = [];\n        this.meshes = [];\n        this.nodes = [];\n        this.shaders = [];\n        this.timing = [];\n        this.cams = [];\n        this.startTime = performance.now();\n        this.bounds = new CGL.BoundingBox();\n        this.loaded = Date.now();\n        this.accBuffersDelete = [];\n    }\n\n    getNode(n)\n    {\n        for (let i = 0; i < this.nodes.length; i++)\n        {\n            if (this.nodes[i].name == n) return this.nodes[i];\n        }\n    }\n\n    unHideAll()\n    {\n        for (let i = 0; i < this.nodes.length; i++)\n        {\n            this.nodes[i].unHide();\n        }\n    }\n};\n\nfunction Utf8ArrayToStr(array)\n{\n    if (window.TextDecoder) return new TextDecoder("utf-8").decode(array);\n\n    let out, i, len, c;\n    let char2, char3;\n\n    out = "";\n    len = array.length;\n    i = 0;\n    while (i < len)\n    {\n        c = array[i++];\n        switch (c >> 4)\n        {\n        case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n            // 0xxxxxxx\n            out += String.fromCharCode(c);\n            break;\n        case 12: case 13:\n            // 110x xxxx   10xx xxxx\n            char2 = array[i++];\n            out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n            break;\n        case 14:\n            // 1110 xxxx  10xx xxxx  10xx xxxx\n            char2 = array[i++];\n            char3 = array[i++];\n            out += String.fromCharCode(((c & 0x0F) << 12) |\n                    ((char2 & 0x3F) << 6) |\n                    ((char3 & 0x3F) << 0));\n            break;\n        }\n    }\n\n    return out;\n}\n\nfunction readChunk(dv, bArr, arrayBuffer, offset)\n{\n    const chunk = {};\n\n    if (offset >= dv.byteLength)\n    {\n        op.log("could not read chunk...");\n        return;\n    }\n    chunk.size = dv.getUint32(offset + 0, le);\n\n    // chunk.type = new TextDecoder("utf-8").decode(bArr.subarray(offset+4, offset+4+4));\n    chunk.type = Utf8ArrayToStr(bArr.subarray(offset + 4, offset + 4 + 4));\n\n    if (chunk.type == "BIN\\0")\n    {\n        // console.log(chunk.size,arrayBuffer.length,offset);\n        // try\n        // {\n        chunk.dataView = new DataView(arrayBuffer, offset + 8, chunk.size);\n        // }\n        // catch(e)\n        // {\n        //     chunk.dataView = null;\n        //     console.log(e);\n        // }\n    }\n    else\n    if (chunk.type == "JSON")\n    {\n        const json = Utf8ArrayToStr(bArr.subarray(offset + 8, offset + 8 + chunk.size));\n\n        try\n        {\n            const obj = JSON.parse(json);\n            chunk.data = obj;\n            outGenerator.set(obj.asset.generator);\n        }\n        catch (e)\n        {\n        }\n    }\n    else\n    {\n        op.warn("unknown type", chunk.type);\n    }\n\n    return chunk;\n}\n\nfunction loadAnims(gltf)\n{\n    const uniqueAnimNames = {};\n\n    for (let i = 0; i < gltf.json.animations.length; i++)\n    {\n        const an = gltf.json.animations[i];\n\n        for (let ia = 0; ia < an.channels.length; ia++)\n        {\n            const chan = an.channels[ia];\n\n            const node = gltf.nodes[chan.target.node];\n            const sampler = an.samplers[chan.sampler];\n\n            const acc = gltf.json.accessors[sampler.input];\n            const bufferIn = gltf.accBuffers[sampler.input];\n\n            const accOut = gltf.json.accessors[sampler.output];\n            const bufferOut = gltf.accBuffers[sampler.output];\n\n            gltf.accBuffersDelete.push(sampler.output, sampler.input);\n\n            if (bufferIn && bufferOut)\n            {\n                let numComps = 1;\n                if (accOut.type == "VEC2")numComps = 2;\n                else if (accOut.type == "VEC3")numComps = 3;\n                else if (accOut.type == "VEC4")numComps = 4;\n                else op.warn("unknown accOut.type", accOut.type);\n\n                const anims = [];\n\n                uniqueAnimNames[an.name] = true;\n\n                for (let k = 0; k < numComps; k++)\n                {\n                    const newAnim = new CABLES.TL.Anim();\n                    // newAnim.name=an.name;\n                    anims.push(newAnim);\n                }\n\n                if (sampler.interpolation == "LINEAR") {}\n                else if (sampler.interpolation == "STEP") for (let k = 0; k < numComps; k++) anims[k].defaultEasing = CABLES.EASING_ABSOLUTE;\n                else if (sampler.interpolation == "CUBICSPLINE") for (let k = 0; k < numComps; k++) anims[k].defaultEasing = CABLES.EASING_CUBICSPLINE;\n                else op.warn("unknown interpolation", sampler.interpolation);\n\n                // console.log(bufferOut)\n\n                // if there is no keyframe for time 0 copy value of first keyframe at time 0\n                if (bufferIn[0] !== 0.0)\n                    for (let k = 0; k < numComps; k++)\n                        anims[k].setValue(0, bufferOut[0 * numComps + k]);\n\n                // console.log(sampler.interpolation,bufferOut.length/numComps)\n\n                for (let j = 0; j < bufferIn.length; j++)\n                {\n                    maxTime = Math.max(bufferIn[j], maxTime);\n\n                    for (let k = 0; k < numComps; k++)\n                    {\n                        if (anims[k].defaultEasing === CABLES.EASING_CUBICSPLINE)\n                        {\n                            const idx = ((j * numComps) * 3 + k);\n\n                            const key = anims[k].setValue(bufferIn[j], bufferOut[idx + numComps]);\n                            key.bezTangIn = bufferOut[idx];\n                            key.bezTangOut = bufferOut[idx + (numComps * 2)];\n\n                            // console.log(an.name,k,bufferOut[idx+1]);\n                        }\n                        else\n                        {\n                            // console.log(an.name,k,bufferOut[j * numComps + k]);\n                            anims[k].setValue(bufferIn[j], bufferOut[j * numComps + k]);\n                        }\n                    }\n                }\n\n                node.setAnim(chan.target.path, an.name, anims);\n            }\n            else\n            {\n                op.warn("loadAmins bufferIn undefined ", bufferIn === undefined);\n                op.warn("loadAmins bufferOut undefined ", bufferOut === undefined);\n                op.warn("loadAmins ", sampler, accOut);\n                op.warn("loadAmins num accBuffers", gltf.accBuffers.length);\n                op.warn("loadAmins num accessors", gltf.json.accessors.length);\n            }\n        }\n    }\n\n    outAnims.set(null);\n    outAnims.set(Object.keys(uniqueAnimNames));\n}\n\nfunction loadCams(gltf)\n{\n    if (!gltf || !gltf.json.cameras) return;\n\n    gltf.cameras = gltf.cameras || [];\n\n    for (let i = 0; i < gltf.nodes.length; i++)\n    {\n        if (gltf.nodes[i].hasOwnProperty("camera"))\n        {\n            const cam = new gltfCamera(gltf, gltf.nodes[i]);\n            gltf.cameras.push(cam);\n        }\n    }\n}\n\nfunction loadAfterDraco()\n{\n    if (!window.DracoDecoder)\n    {\n        setTimeout(() =>\n        {\n            loadAfterDraco();\n        }, 100);\n    }\n\n    reloadSoon();\n}\n\nfunction parseGltf(arrayBuffer)\n{\n    let j = 0, i = 0;\n\n    const gltf = new Gltf();\n    gltf.timing.push("Start parsing", Math.round((performance.now() - gltf.startTime)));\n\n    if (!arrayBuffer) return;\n    const byteArray = new Uint8Array(arrayBuffer);\n    let pos = 0;\n\n    // var string = new TextDecoder("utf-8").decode(byteArray.subarray(pos, 4));\n    const string = Utf8ArrayToStr(byteArray.subarray(pos, 4));\n    pos += 4;\n    if (string != "glTF") return;\n\n    gltf.timing.push("dataview", Math.round((performance.now() - gltf.startTime)));\n\n    const dv = new DataView(arrayBuffer);\n    const version = dv.getUint32(pos, le);\n    pos += 4;\n    const size = dv.getUint32(pos, le);\n    pos += 4;\n\n    outVersion.set(version);\n\n    const chunks = [];\n    gltf.chunks = chunks;\n\n    chunks.push(readChunk(dv, byteArray, arrayBuffer, pos));\n    pos += chunks[0].size + CHUNK_HEADER_SIZE;\n    gltf.json = chunks[0].data;\n    outJson.set(gltf.json);\n    outExtensions.set(gltf.json.extensionsUsed || []);\n\n    let ch = readChunk(dv, byteArray, arrayBuffer, pos);\n    while (ch)\n    {\n        chunks.push(ch);\n        pos += ch.size + CHUNK_HEADER_SIZE;\n        ch = readChunk(dv, byteArray, arrayBuffer, pos);\n    }\n\n    gltf.chunks = chunks;\n\n    const views = chunks[0].data.bufferViews;\n    const accessors = chunks[0].data.accessors;\n\n    gltf.timing.push("Parse buffers", Math.round((performance.now() - gltf.startTime)));\n\n    if (gltf.json.extensionsUsed && gltf.json.extensionsUsed.indexOf("KHR_draco_mesh_compression") > -1)\n    {\n        if (!window.DracoDecoder)\n        {\n            op.setUiError("gltfdraco", "GLTF draco compression lib not found / add draco op to your patch!");\n\n            loadAfterDraco();\n            return gltf;\n        }\n        else\n        {\n            gltf.useDraco = true;\n        }\n    }\n\n    op.setUiError("gltfdraco", null);\n    // let accPos = (view.byteOffset || 0) + (acc.byteOffset || 0);\n\n    if (views)\n    {\n        for (i = 0; i < accessors.length; i++)\n        {\n            const acc = accessors[i];\n\n            const view = views[acc.bufferView];\n\n            // if(!view || !acc)\n            // {\n\n            //     continue;\n            // }\n\n            let numComps = 0;\n            if (acc.type == "SCALAR")numComps = 1;\n            else if (acc.type == "VEC2")numComps = 2;\n            else if (acc.type == "VEC3")numComps = 3;\n            else if (acc.type == "VEC4")numComps = 4;\n            else if (acc.type == "MAT4")numComps = 16;\n            else console.error("unknown accessor type", acc.type);\n\n            //   const decoder = new decoderModule.Decoder();\n            //   const decodedGeometry = decodeDracoData(data, decoder);\n            //   // Encode mesh\n            //   encodeMeshToFile(decodedGeometry, decoder);\n\n            //   decoderModule.destroy(decoder);\n            //   decoderModule.destroy(decodedGeometry);\n\n            // 5120 (BYTE)\t1\n            // 5121 (UNSIGNED_BYTE)\t1\n            // 5122 (SHORT)\t2\n\n            if (chunks[1].dataView)\n            {\n                if (view)\n                {\n                    const num = acc.count * numComps;\n                    let accPos = (view.byteOffset || 0) + (acc.byteOffset || 0);\n                    let stride = view.byteStride || 0;\n                    let dataBuff = null;\n\n                    if (acc.componentType == 5126 || acc.componentType == 5125) // 4byte FLOAT or INT\n                    {\n                        stride = stride || 4;\n\n                        const isInt = acc.componentType == 5125;\n                        if (isInt)dataBuff = new Uint32Array(num);\n                        else dataBuff = new Float32Array(num);\n\n                        for (j = 0; j < num; j++)\n                        {\n                            if (isInt) dataBuff[j] = chunks[1].dataView.getUint32(accPos, le);\n                            else dataBuff[j] = chunks[1].dataView.getFloat32(accPos, le);\n\n                            if (stride != 4 && (j + 1) % numComps === 0)accPos += stride - (numComps * 4);\n                            accPos += 4;\n                        }\n                    }\n                    else if (acc.componentType == 5123) // UNSIGNED_SHORT\n                    {\n                        stride = stride || 2;\n\n                        dataBuff = new Uint16Array(num);\n\n                        for (j = 0; j < num; j++)\n                        {\n                            dataBuff[j] = chunks[1].dataView.getUint16(accPos, le);\n\n                            if (stride != 2 && (j + 1) % numComps === 0) accPos += stride - (numComps * 2);\n\n                            accPos += 2;\n                        }\n                    }\n                    else if (acc.componentType == 5121) // UNSIGNED_BYTE\n                    {\n                        stride = stride || 1;\n\n                        dataBuff = new Uint8Array(num);\n\n                        for (j = 0; j < num; j++)\n                        {\n                            dataBuff[j] = chunks[1].dataView.getUint8(accPos, le);\n\n                            if (stride != 1 && (j + 1) % numComps === 0) accPos += stride - (numComps * 1);\n\n                            accPos += 1;\n                        }\n                    }\n\n                    else\n                    {\n                        console.error("unknown component type", acc.componentType);\n                    }\n\n                    gltf.accBuffers.push(dataBuff);\n                }\n                else\n                {\n                    // console.log("has no dataview");\n                }\n            }\n        }\n    }\n\n    gltf.timing.push("Parse mesh groups", Math.round((performance.now() - gltf.startTime)));\n\n    gltf.json.meshes = gltf.json.meshes || [];\n\n    if (gltf.json.meshes)\n    {\n        for (i = 0; i < gltf.json.meshes.length; i++)\n        {\n            const mesh = new gltfMeshGroup(gltf, gltf.json.meshes[i]);\n            gltf.meshes.push(mesh);\n        }\n    }\n\n    gltf.timing.push("Parse nodes", Math.round((performance.now() - gltf.startTime)));\n\n    for (i = 0; i < gltf.json.nodes.length; i++)\n    {\n        if (gltf.json.nodes[i].children)\n            for (j = 0; j < gltf.json.nodes[i].children.length; j++)\n            {\n                gltf.json.nodes[gltf.json.nodes[i].children[j]].isChild = true;\n            }\n    }\n\n    for (i = 0; i < gltf.json.nodes.length; i++)\n    {\n        const node = new gltfNode(gltf.json.nodes[i], gltf);\n        gltf.nodes.push(node);\n    }\n\n    for (i = 0; i < gltf.nodes.length; i++)\n    {\n        const node = gltf.nodes[i];\n\n        if (!node.children) continue;\n        for (let j = 0; j < node.children.length; j++)\n        {\n            gltf.nodes[node.children[j]].parent = node;\n        }\n    }\n\n    for (i = 0; i < gltf.nodes.length; i++)\n    {\n        if (gltf.nodes[i].skin > -1)\n        {\n            gltf.nodes[i].skinRenderer = new GltfSkin(gltf.nodes[i]);\n        }\n    }\n\n    needsMatUpdate = true;\n\n    gltf.timing.push("load anims", Math.round((performance.now() - gltf.startTime)));\n\n    if (gltf.json.animations) loadAnims(gltf);\n\n    gltf.timing.push("load cameras", Math.round((performance.now() - gltf.startTime)));\n\n    if (gltf.json.cameras) loadCams(gltf);\n\n    gltf.timing.push("finished", Math.round((performance.now() - gltf.startTime)));\n\n    return gltf;\n}\n',inc_mesh_js:'let gltfMesh = class\n{\n    constructor(name, prim, gltf, finished)\n    {\n        this.POINTS = 0;\n        this.LINES = 1;\n        this.LINE_LOOP = 2;\n        this.LINE_STRIP = 3;\n        this.TRIANGLES = 4;\n        this.TRIANGLE_STRIP = 5;\n        this.TRIANGLE_FAN = 6;\n\n        this.test = 0;\n        this.name = name;\n        this.submeshIndex = 0;\n        this.material = prim.material;\n        this.mesh = null;\n        this.geom = new CGL.Geometry("gltf_" + this.name);\n        this.geom.verticesIndices = [];\n        this.bounds = null;\n        this.primitive = 4;\n        if (prim.hasOwnProperty("mode")) this.primitive = prim.mode;\n\n        if (prim.hasOwnProperty("indices")) this.geom.verticesIndices = gltf.accBuffers[prim.indices];\n\n        gltf.loadingMeshes = gltf.loadingMeshes || 0;\n        gltf.loadingMeshes++;\n\n        this.materialJson =\n            this._matPbrMetalness =\n            this._matPbrRoughness =\n            this._matDiffuseColor = null;\n\n        if (gltf.json.materials)\n        {\n            if (this.material != -1) this.materialJson = gltf.json.materials[this.material];\n\n            if (this.materialJson && this.materialJson.pbrMetallicRoughness)\n            {\n                if (this.materialJson.pbrMetallicRoughness.baseColorFactor)\n                    this._matDiffuseColor = this.materialJson.pbrMetallicRoughness.baseColorFactor;\n\n                this._matDiffuseColor = this.materialJson.pbrMetallicRoughness.baseColorFactor;\n\n                this._matPbrMetalness = this.materialJson.pbrMetallicRoughness.metallicFactor || null;\n                this._matPbrRoughness = this.materialJson.pbrMetallicRoughness.roughnessFactor || null;\n            }\n        }\n\n        if (gltf.useDraco && prim.extensions.KHR_draco_mesh_compression)\n        {\n            const view = gltf.chunks[0].data.bufferViews[prim.extensions.KHR_draco_mesh_compression.bufferView];\n            const num = view.byteLength;\n            const dataBuff = new Int8Array(num);\n            let accPos = (view.byteOffset || 0);// + (acc.byteOffset || 0);\n            for (let j = 0; j < num; j++)\n            {\n                dataBuff[j] = gltf.chunks[1].dataView.getInt8(accPos, le);\n                accPos++;\n            }\n\n            const dracoDecoder = window.DracoDecoder;\n            dracoDecoder.decodeGeometry(dataBuff.buffer, (geometry) =>\n            {\n                const geom = new CGL.Geometry("draco mesh " + name);\n\n                for (let i = 0; i < geometry.attributes.length; i++)\n                {\n                    const attr = geometry.attributes[i];\n\n                    if (attr.name === "position") geom.vertices = attr.array;\n                    else if (attr.name === "normal") geom.vertexNormals = attr.array;\n                    else if (attr.name === "uv") geom.texCoords = attr.array;\n                    else if (attr.name === "color") geom.vertexColors = this.calcVertexColors(attr.array);\n                    else if (attr.name === "joints") geom.setAttribute("attrJoints", Array.from(attr.array), 4);\n                    else if (attr.name === "weights")\n                    {\n                        const arr4 = new Float32Array(attr.array.length / attr.itemSize * 4);\n\n                        for (let k = 0; k < attr.array.length / attr.itemSize; k++)\n                        {\n                            arr4[k * 4] = arr4[k * 4 + 1] = arr4[k * 4 + 2] = arr4[k * 4 + 3] = 0;\n                            for (let j = 0; j < attr.itemSize; j++)\n                                arr4[k * 4 + j] = attr.array[k * attr.itemSize + j];\n                        }\n                        geom.setAttribute("attrWeights", arr4, 4);\n                    }\n                    else op.logWarn("unknown draco attrib", attr);\n                }\n\n                geometry.attributes = null;\n                geom.verticesIndices = geometry.index.array;\n\n                this.setGeom(geom);\n\n                this.mesh = null;\n                gltf.loadingMeshes--;\n                if (finished)finished(this);\n            }, (error) => { op.logError(error); });\n        }\n        else\n        {\n            gltf.loadingMeshes--;\n            this.fillGeomAttribs(gltf, this.geom, prim.attributes);\n\n            if (prim.targets)\n            {\n                console.log("prim.targets", prim.targets.length);\n                for (let j = 0; j < prim.targets.length; j++)\n                {\n                    // var tgeom=new CGL.Geometry("gltf_"+this.name);\n                    let tgeom = this.geom.copy();\n\n                    if (prim.hasOwnProperty("indices")) tgeom.verticesIndices = gltf.accBuffers[prim.indices];\n\n                    this.fillGeomAttribs(gltf, tgeom, prim.targets[j], false);\n\n                    { // calculate normals for final position of morphtarget for later...\n                        for (let i = 0; i < tgeom.vertices.length; i++) tgeom.vertices[i] += this.geom.vertices[i];\n                        tgeom.calculateNormals();\n                        for (let i = 0; i < tgeom.vertices.length; i++) tgeom.vertices[i] -= this.geom.vertices[i];\n                    }\n\n                    this.geom.morphTargets.push(tgeom);\n                }\n            }\n            if (finished)finished(this);\n        }\n    }\n\n    _linearToSrgb(x)\n    {\n        if (x <= 0)\n            return 0;\n        else if (x >= 1)\n            return 1;\n        else if (x < 0.0031308)\n            return x * 12.92;\n        else\n            return Math.pow(x, 1 / 2.2) * 1.055 - 0.055;\n    }\n\n    calcVertexColors(arr)\n    {\n        let vertexColors = null;\n        if (arr instanceof Float32Array)\n        {\n            let div = false;\n            for (let i = 0; i < arr.length; i++)\n            {\n                if (arr[i] > 1)\n                {\n                    div = true;\n                    continue;\n                }\n            }\n\n            if (div)\n                for (let i = 0; i < arr.length; i++) arr[i] /= 65535;\n\n            vertexColors = arr;\n        }\n\n        else if (arr instanceof Uint16Array)\n        {\n            const fb = new Float32Array(arr.length);\n            for (let i = 0; i < arr.length; i++) fb[i] = arr[i] / 65535;\n\n            vertexColors = fb;\n        }\n        else vertexColors = arr;\n\n        for (let i = 0; i < vertexColors.length; i++)\n        {\n            vertexColors[i] = this._linearToSrgb(vertexColors[i]);\n        }\n\n        return vertexColors;\n    }\n\n    fillGeomAttribs(gltf, tgeom, attribs, setGeom)\n    {\n        if (attribs.hasOwnProperty("POSITION")) tgeom.vertices = gltf.accBuffers[attribs.POSITION];\n        if (attribs.hasOwnProperty("NORMAL")) tgeom.vertexNormals = gltf.accBuffers[attribs.NORMAL];\n        if (attribs.hasOwnProperty("TANGENT")) tgeom.tangents = gltf.accBuffers[attribs.TANGENT];\n\n        if (attribs.hasOwnProperty("COLOR_0")) tgeom.vertexColors = this.calcVertexColors(gltf.accBuffers[attribs.COLOR_0]);\n        if (attribs.hasOwnProperty("COLOR_1")) tgeom.setAttribute("attrVertColor1", this.calcVertexColors(gltf.accBuffers[attribs.COLOR_1]), 4);\n        if (attribs.hasOwnProperty("COLOR_2")) tgeom.setAttribute("attrVertColor2", this.calcVertexColors(gltf.accBuffers[attribs.COLOR_2]), 4);\n        if (attribs.hasOwnProperty("COLOR_3")) tgeom.setAttribute("attrVertColor3", this.calcVertexColors(gltf.accBuffers[attribs.COLOR_3]), 4);\n        if (attribs.hasOwnProperty("COLOR_4")) tgeom.setAttribute("attrVertColor4", this.calcVertexColors(gltf.accBuffers[attribs.COLOR_4]), 4);\n\n        if (attribs.hasOwnProperty("TEXCOORD_0"))tgeom.texCoords = gltf.accBuffers[attribs.TEXCOORD_0];\n        if (attribs.hasOwnProperty("TEXCOORD_1"))tgeom.setAttribute("attrTexCoord1", gltf.accBuffers[attribs.TEXCOORD_1], 2);\n        if (attribs.hasOwnProperty("TEXCOORD_2"))tgeom.setAttribute("attrTexCoord2", gltf.accBuffers[attribs.TEXCOORD_2], 2);\n        if (attribs.hasOwnProperty("TEXCOORD_3"))tgeom.setAttribute("attrTexCoord3", gltf.accBuffers[attribs.TEXCOORD_3], 2);\n        if (attribs.hasOwnProperty("TEXCOORD_4"))tgeom.setAttribute("attrTexCoord4", gltf.accBuffers[attribs.TEXCOORD_4], 2);\n\n        if (attribs.hasOwnProperty("WEIGHTS_0"))\n        {\n            tgeom.setAttribute("attrWeights", gltf.accBuffers[attribs.WEIGHTS_0], 4);\n        }\n        if (attribs.hasOwnProperty("JOINTS_0"))\n        {\n            if (!gltf.accBuffers[attribs.JOINTS_0])console.log("no !gltf.accBuffers[attribs.JOINTS_0]");\n            tgeom.setAttribute("attrJoints", gltf.accBuffers[attribs.JOINTS_0], 4);\n        }\n\n        if (attribs.hasOwnProperty("POSITION")) gltf.accBuffersDelete.push(attribs.POSITION);\n        if (attribs.hasOwnProperty("NORMAL")) gltf.accBuffersDelete.push(attribs.NORMAL);\n        if (attribs.hasOwnProperty("TEXCOORD_0")) gltf.accBuffersDelete.push(attribs.TEXCOORD_0);\n        if (attribs.hasOwnProperty("TANGENT")) gltf.accBuffersDelete.push(attribs.TANGENT);\n        if (attribs.hasOwnProperty("COLOR_0"))gltf.accBuffersDelete.push(attribs.COLOR_0);\n        if (attribs.hasOwnProperty("COLOR_0"))gltf.accBuffersDelete.push(attribs.COLOR_0);\n        if (attribs.hasOwnProperty("COLOR_1"))gltf.accBuffersDelete.push(attribs.COLOR_1);\n        if (attribs.hasOwnProperty("COLOR_2"))gltf.accBuffersDelete.push(attribs.COLOR_2);\n        if (attribs.hasOwnProperty("COLOR_3"))gltf.accBuffersDelete.push(attribs.COLOR_3);\n\n        if (attribs.hasOwnProperty("TEXCOORD_1")) gltf.accBuffersDelete.push(attribs.TEXCOORD_1);\n        if (attribs.hasOwnProperty("TEXCOORD_2")) gltf.accBuffersDelete.push(attribs.TEXCOORD_2);\n        if (attribs.hasOwnProperty("TEXCOORD_3")) gltf.accBuffersDelete.push(attribs.TEXCOORD_3);\n        if (attribs.hasOwnProperty("TEXCOORD_4")) gltf.accBuffersDelete.push(attribs.TEXCOORD_4);\n\n        if (setGeom !== false) if (tgeom && tgeom.verticesIndices) this.setGeom(tgeom);\n    }\n\n    setGeom(geom)\n    {\n        if (inNormFormat.get() == "X-ZY")\n        {\n            for (let i = 0; i < geom.vertexNormals.length; i += 3)\n            {\n                let t = geom.vertexNormals[i + 2];\n                geom.vertexNormals[i + 2] = geom.vertexNormals[i + 1];\n                geom.vertexNormals[i + 1] = -t;\n            }\n        }\n\n        if (inVertFormat.get() == "XZ-Y")\n        {\n            for (let i = 0; i < geom.vertices.length; i += 3)\n            {\n                let t = geom.vertices[i + 2];\n                geom.vertices[i + 2] = -geom.vertices[i + 1];\n                geom.vertices[i + 1] = t;\n            }\n        }\n\n        if (this.primitive == this.TRIANGLES)\n        {\n            if (!geom.vertexNormals.length || inCalcNormals.get()) geom.calculateNormals();\n\n            if ((!geom.biTangents || geom.biTangents.length == 0) && geom.tangents)\n            {\n                const bitan = vec3.create();\n                const tan = vec3.create();\n\n                const tangents = geom.tangents;\n                geom.tangents = new Float32Array(tangents.length / 4 * 3);\n                geom.biTangents = new Float32Array(tangents.length / 4 * 3);\n\n                for (let i = 0; i < tangents.length; i += 4)\n                {\n                    const idx = i / 4 * 3;\n\n                    vec3.cross(\n                        bitan,\n                        [geom.vertexNormals[idx], geom.vertexNormals[idx + 1], geom.vertexNormals[idx + 2]],\n                        [tangents[i], tangents[i + 1], tangents[i + 2]]\n                    );\n\n                    vec3.div(bitan, bitan, [tangents[i + 3], tangents[i + 3], tangents[i + 3]]);\n                    vec3.normalize(bitan, bitan);\n\n                    geom.biTangents[idx + 0] = bitan[0];\n                    geom.biTangents[idx + 1] = bitan[1];\n                    geom.biTangents[idx + 2] = bitan[2];\n\n                    geom.tangents[idx + 0] = tangents[i + 0];\n                    geom.tangents[idx + 1] = tangents[i + 1];\n                    geom.tangents[idx + 2] = tangents[i + 2];\n                }\n            }\n\n            if (geom.tangents.length === 0 || inCalcNormals.get()) geom.calcTangentsBitangents();\n        }\n\n        this.geom = geom;\n\n        this.bounds = geom.getBounds();\n    }\n\n    render(cgl, ignoreMaterial, skinRenderer)\n    {\n        if (!this.mesh && this.geom && this.geom.verticesIndices)\n        {\n            let g = this.geom;\n            if (this.geom.vertices.length / 3 > 64000)\n            {\n                g = this.geom.copy();\n                g.unIndex(false, true);\n            }\n\n            let glprim;\n            if (this.primitive == this.TRIANGLES)glprim = cgl.gl.TRIANGLES;\n            else if (this.primitive == this.LINES)glprim = cgl.gl.LINES;\n            else if (this.primitive == this.LINE_STRIP)glprim = cgl.gl.LINE_STRIP;\n            else if (this.primitive == this.POINTS)glprim = cgl.gl.POINTS;\n            else\n            {\n                op.logWarn("unknown primitive type", this);\n            }\n\n            this.mesh = new CGL.Mesh(cgl, g, glprim);\n            this.mesh._geom = null;\n        }\n        else\n        {\n            // update morphTargets\n            if (this.geom && this.geom.morphTargets.length)\n            {\n                this.morphGeom = this.geom.copy();\n\n                this.test = time * 11.7;\n\n                if (this.test >= this.geom.morphTargets.length - 1) this.test = 0;\n\n                const mt = this.geom.morphTargets[Math.floor(this.test)];\n                const mt2 = this.geom.morphTargets[Math.floor(this.test + 1)];\n\n                if (mt && mt.vertices && mt2)\n                {\n                    if (this.morphGeom.vertexNormals.length != mt.vertexNormals.length)\n                        this.morphGeom.vertexNormals = new Float32Array(mt.vertexNormals.length);\n\n                    const fract = this.test % 1;\n                    for (let i = 0; i < this.morphGeom.vertices.length; i++)\n                    {\n                        this.morphGeom.vertices[i] =\n                            this.geom.vertices[i] +\n                            (1.0 - fract) * mt.vertices[i] +\n                            fract * mt2.vertices[i];\n\n                        this.morphGeom.vertexNormals[i] =\n                            (1.0 - fract) * mt.vertexNormals[i] +\n                            fract * mt2.vertexNormals[i];\n                    }\n\n                    this.mesh.updateNormals(this.morphGeom);\n                    this.mesh.updateVertices(this.morphGeom);\n                }\n            }\n\n            let useMat = !ignoreMaterial && this.material != -1 && gltf.shaders[this.material];\n            if (skinRenderer)useMat = false;\n\n            // console.log(gltf.shaders[this.material])\n\n            if (useMat) cgl.pushShader(gltf.shaders[this.material]);\n\n            const currentShader = cgl.getShader() || {};\n            const uniDiff = currentShader.uniformColorDiffuse;\n\n            const uniPbrMetalness = currentShader.uniformPbrMetalness;\n            const uniPbrRoughness = currentShader.uniformPbrRoughness;\n\n            if (!gltf.shaders[this.material] && inUseMatProps.get())\n            {\n                if (uniDiff && this._matDiffuseColor)\n                {\n                    this._matDiffuseColorOrig = [uniDiff.getValue()[0], uniDiff.getValue()[1], uniDiff.getValue()[2], uniDiff.getValue()[3]];\n                    uniDiff.setValue(this._matDiffuseColor);\n                }\n\n                if (uniPbrMetalness)\n                    if (this._matPbrMetalness != null)\n                    {\n                        this._matPbrMetalnessOrig = uniPbrMetalness.getValue();\n                        uniPbrMetalness.setValue(this._matPbrMetalness);\n                    }\n                    else\n                        uniPbrMetalness.setValue(0);\n\n                if (uniPbrRoughness)\n                    if (this._matPbrRoughness != null)\n                    {\n                        this._matPbrRoughnessOrig = uniPbrRoughness.getValue();\n                        uniPbrRoughness.setValue(this._matPbrRoughness);\n                    }\n                    else uniPbrRoughness.setValue(0);\n            }\n\n            if (this.mesh) this.mesh.render(cgl.getShader(), ignoreMaterial);\n\n            if (inUseMatProps.get())\n            {\n                if (uniDiff && this._matDiffuseColor) uniDiff.setValue(this._matDiffuseColorOrig);\n                if (uniPbrMetalness && this._matPbrMetalnessOrig != undefined) uniPbrMetalness.setValue(this._matPbrMetalnessOrig);\n                if (uniPbrRoughness && this._matPbrRoughnessOrig != undefined) uniPbrRoughness.setValue(this._matPbrRoughnessOrig);\n            }\n\n            if (useMat) cgl.popShader();\n        }\n    }\n};\n',inc_meshGroup_js:"const gltfMeshGroup = class\n{\n    constructor(gltf, m)\n    {\n        this.bounds = new CGL.BoundingBox();\n        this.meshes = [];\n        this.name = m.name;\n        const prims = m.primitives;\n\n        for (let i = 0; i < prims.length; i++)\n        {\n            const mesh = new gltfMesh(this.name, prims[i], gltf,\n                (mesh) =>\n                {\n                    this.bounds.apply(mesh.bounds);\n                });\n\n            mesh.submeshIndex = i;\n            this.meshes.push(mesh);\n        }\n    }\n\n    render(cgl, ignoreMat, skinRenderer, _time)\n    {\n        for (let i = 0; i < this.meshes.length; i++)\n        {\n            const useMat = gltf.shaders[this.meshes[i].material];\n\n            if (useMat) cgl.pushShader(gltf.shaders[this.meshes[i].material]);\n            // console.log(gltf.shaders[this.meshes[i].material],this.meshes[i].material)\n            if (skinRenderer)skinRenderer.renderStart(cgl, skinRenderer._time);\n\n            this.meshes[i].render(cgl, ignoreMat, skinRenderer, _time);\n            if (skinRenderer)skinRenderer.renderFinish(cgl);\n            if (useMat) cgl.popShader();\n        }\n    }\n};\n",inc_node_js:'const gltfNode = class\n{\n    constructor(node, gltf)\n    {\n        this.isChild = node.isChild || false;\n        this.name = node.name;\n        if (node.hasOwnProperty("camera")) this.camera = node.camera;\n        this.hidden = false;\n        this.mat = mat4.create();\n        this._animMat = mat4.create();\n        this._tempMat = mat4.create();\n        this._tempQuat = quat.create();\n        this._tempRotmat = mat4.create();\n        this.mesh = null;\n        this.children = [];\n        this._node = node;\n        this._gltf = gltf;\n        this.absMat = mat4.create();\n        this.addTranslate = null;\n        this.addMulMat = null;\n        this.updateMatrix();\n        this._animActions = {};\n    }\n\n    get skin()\n    {\n        if (this._node.hasOwnProperty("skin")) return this._node.skin;\n        else return -1;\n    }\n\n    hasSkin()\n    {\n        if (this._node.hasOwnProperty("skin")) return this._gltf.json.skins[this._node.skin].name || "unknown";\n        return false;\n    }\n\n    updateMatrix()\n    {\n        mat4.identity(this.mat);\n        if (this._node.translation) mat4.translate(this.mat, this.mat, this._node.translation);\n\n        if (this._node.rotation)\n        {\n            const rotmat = mat4.create();\n            this._rot = this._node.rotation;\n\n            mat4.fromQuat(rotmat, this._node.rotation);\n            mat4.mul(this.mat, this.mat, rotmat);\n        }\n\n        if (this._node.scale)\n        {\n            this._scale = this._node.scale;\n            mat4.scale(this.mat, this.mat, this._scale);\n        }\n\n        if (this._node.hasOwnProperty("mesh"))\n        {\n            this.mesh = this._gltf.meshes[this._node.mesh];\n        }\n\n        if (this._node.children)\n        {\n            for (let i = 0; i < this._node.children.length; i++)\n            {\n                this._gltf.json.nodes[i].isChild = true;\n                if (this._gltf.nodes[this._node.children[i]]) this._gltf.nodes[this._node.children[i]].isChild = true;\n                this.children.push(this._node.children[i]);\n            }\n        }\n    }\n\n    unHide()\n    {\n        this.hidden = false;\n        for (let i = 0; i < this.children.length; i++)\n            if (this.children[i].unHide) this.children[i].unHide();\n    }\n\n    calcBounds(gltf, mat, bounds)\n    {\n        const localMat = mat4.create();\n\n        if (mat) mat4.copy(localMat, mat);\n        if (this.mat) mat4.mul(localMat, localMat, this.mat);\n\n        if (this.mesh)\n        {\n            const bb = this.mesh.bounds.copy();\n            bb.mulMat4(localMat);\n            bounds.apply(bb);\n\n            if (bounds.changed)\n            {\n                boundingPoints.push(\n                    bb._min[0] || 0, bb._min[1] || 0, bb._min[2] || 0,\n                    bb._max[0] || 0, bb._max[1] || 0, bb._max[2] || 0);\n            }\n        }\n\n        for (let i = 0; i < this.children.length; i++)\n        {\n            if (gltf.nodes[this.children[i]] && gltf.nodes[this.children[i]].calcBounds)\n            {\n                const b = gltf.nodes[this.children[i]].calcBounds(gltf, localMat, bounds);\n\n                bounds.apply(b);\n            }\n        }\n\n        if (bounds.changed) return bounds;\n        else return null;\n    }\n\n    setAnimAction(name)\n    {\n        if (name && !this._animActions[name]) return;// console.log("no action found: ", name);\n\n        for (let path in this._animActions[name])\n        {\n            if (path == "translation") this._animTrans = this._animActions[name][path];\n            else if (path == "rotation") this._animRot = this._animActions[name][path];\n            else if (path == "scale") this._animScale = this._animActions[name][path];\n            else console.warn("unknown anim path", path, this._animActions[name][path]);\n        }\n    }\n\n    setAnim(path, name, anims)\n    {\n        this._animActions[name] = this._animActions[name] || {};\n\n        if (this._animActions[name][path])op.warn("animation action path already exists", name, path, this._animActions[name][path]);\n\n        this._animActions[name][path] = anims;\n\n        // console.log(name,path,this._animTrans);\n        // console.log(this._animActions);\n\n        if (path == "translation") this._animTrans = anims;\n        else if (path == "rotation") this._animRot = anims;\n        else if (path == "scale") this._animScale = anims;\n        else console.warn("unknown anim path", path, anims);\n    }\n\n    modelMatLocal()\n    {\n        return this._animMat || this.mat;\n    }\n\n    modelMatAbs()\n    {\n        return this.absMat;\n    }\n\n    transform(cgl, _time)\n    {\n        if (!_time && _time != 0)_time = time;\n\n        this._lastTimeTrans = _time;\n\n        if (!this._animTrans && !this._animRot && !this._animScale)\n        {\n            mat4.mul(cgl.mMatrix, cgl.mMatrix, this.mat);\n            this._animMat = null;\n        }\n        else\n        {\n            this._animMat = this._animMat || mat4.create();\n            mat4.identity(this._animMat);\n\n            const playAnims = true;\n\n            if (playAnims && this._animTrans)\n            {\n                mat4.translate(this._animMat, this._animMat, [\n                    this._animTrans[0].getValue(_time),\n                    this._animTrans[1].getValue(_time),\n                    this._animTrans[2].getValue(_time)]);\n            }\n            else\n            if (this._node.translation) mat4.translate(this._animMat, this._animMat, this._node.translation);\n\n            if (playAnims && this._animRot)\n            {\n                if (this._animRot[0].defaultEasing == CABLES.EASING_LINEAR) CABLES.TL.Anim.slerpQuaternion(_time, this._tempQuat, this._animRot[0], this._animRot[1], this._animRot[2], this._animRot[3]);\n                else if (this._animRot[0].defaultEasing == CABLES.EASING_ABSOLUTE)\n                {\n                    this._tempQuat[0] = this._animRot[0].getValue(_time);\n                    this._tempQuat[1] = this._animRot[1].getValue(_time);\n                    this._tempQuat[2] = this._animRot[2].getValue(_time);\n                    this._tempQuat[3] = this._animRot[3].getValue(_time);\n                }\n                else if (this._animRot[0].defaultEasing == CABLES.EASING_CUBICSPLINE)\n                {\n                    CABLES.TL.Anim.slerpQuaternion(_time, this._tempQuat, this._animRot[0], this._animRot[1], this._animRot[2], this._animRot[3]);\n                }\n\n                mat4.fromQuat(this._tempMat, this._tempQuat);\n                mat4.mul(this._animMat, this._animMat, this._tempMat);\n            }\n            else if (this._rot)\n            {\n                mat4.fromQuat(this._tempRotmat, this._rot);\n                mat4.mul(this._animMat, this._animMat, this._tempRotmat);\n            }\n\n            if (playAnims && this._animScale)\n            {\n                mat4.scale(this._animMat, this._animMat, [\n                    this._animScale[0].getValue(_time),\n                    this._animScale[1].getValue(_time),\n                    this._animScale[2].getValue(_time)]);\n            }\n            else if (this._scale) mat4.scale(this._animMat, this._animMat, this._scale);\n\n            mat4.mul(cgl.mMatrix, cgl.mMatrix, this._animMat);\n        }\n\n        if (this.addTranslate)mat4.translate(cgl.mMatrix, cgl.mMatrix, this.addTranslate);\n\n        if (this.addMulMat) mat4.mul(cgl.mMatrix, cgl.mMatrix, this.addMulMat);\n\n        mat4.copy(this.absMat, cgl.mMatrix);\n    }\n\n    render(cgl, dontTransform, dontDrawMesh, ignoreMaterial, ignoreChilds, drawHidden, _time)\n    {\n        if (!dontTransform) cgl.pushModelMatrix();\n\n        if (_time === undefined)_time = gltf.time;\n\n        if (!dontTransform || this.skinRenderer) this.transform(cgl, _time);\n\n        if (this.hidden && !drawHidden)\n        {\n        }\n        else\n        {\n            if (this.skinRenderer)\n            {\n                this.skinRenderer.time = _time;\n                if (!dontDrawMesh) this.mesh.render(cgl, ignoreMaterial, this.skinRenderer, _time);\n            }\n            else\n            {\n                if (this.mesh && !dontDrawMesh)\n                    this.mesh.render(cgl, ignoreMaterial, null, _time);\n            }\n        }\n\n        if (!ignoreChilds && !this.hidden)\n            for (let i = 0; i < this.children.length; i++)\n                if (gltf.nodes[this.children[i]])\n                {\n                    gltf.nodes[this.children[i]].render(cgl, dontTransform, dontDrawMesh, ignoreMaterial, ignoreChilds, drawHidden, _time);\n                }\n\n        if (!dontTransform)cgl.popModelMatrix();\n    }\n};\n',inc_print_js:'let tab = null;\n\nfunction closeTab()\n{\n    if (tab)gui.mainTabs.closeTab(tab.id);\n    tab = null;\n}\n\nfunction printNode(html, node, level)\n{\n    if (!gltf) return;\n\n    html += "<tr class=\\"row\\">";\n\n    let ident = "";\n    let identSpace = "";\n\n    for (let i = 1; i < level; i++)\n    {\n        identSpace += "&nbsp;&nbsp;&nbsp;";\n        let identClass = "identBg";\n        if (i == 1)identClass = "identBgLevel0";\n        ident += "<td class=\\"ident " + identClass + "\\" ><div style=\\"\\"></div></td>";\n    }\n    let id = CABLES.uuid();\n    html += ident;\n    html += "<td colspan=\\"" + (21 - level) + "\\">";\n    // html+=\'<div style="display:inline-block;border:0px solid red;height:10px;width:\'+level*10+\'px"></div>\';\n\n    if (node.mesh && node.mesh.meshes.length)html += "<span class=\\"icon icon-cube\\"></span>&nbsp;";\n    else html += "<span class=\\"icon icon-box-select\\"></span> &nbsp;";\n\n    html += node.name + "</td><td></td>";\n\n    if (node.mesh)\n    {\n        html += "<td>";\n        for (let i = 0; i < node.mesh.meshes.length; i++)\n        {\n            if (i > 0)html += ", ";\n            html += node.mesh.meshes[i].name;\n        }\n\n        html += "</td>";\n\n        html += "<td>";\n        html += node.hasSkin() || "-";\n        html += "</td>";\n\n        html += "<td>";\n        let countMats = 0;\n        for (let i = 0; i < node.mesh.meshes.length; i++)\n        {\n            if (countMats > 0)html += ", ";\n            if (node.mesh.meshes[i].material)\n            {\n                html += gltf.json.materials[node.mesh.meshes[i].material].name;\n                countMats++;\n            }\n        }\n        if (countMats == 0)html += "none";\n        html += "</td>";\n    }\n    else\n    {\n        html += "<td>-</td><td>-</td><td>-</td>";\n    }\n\n    html += "<td>";\n    if (node._animRot || node._animScale || node._animTrans)\n    {\n        if (node._animRot) html += "Rot ";\n        if (node._animScale) html += "Scale ";\n        if (node._animTrans) html += "Trans ";\n    }\n    else html += "None";\n    html += "</td>";\n\n    html += "<td>";\n    let hideclass = "";\n    if (node.hidden)hideclass = "node-hidden";\n\n    // html+=\'\';\n    html += "<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\',\'transform\')\\" class=\\"treebutton\\">Transform</a>";\n    html += " <a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\',\'hierarchy\')\\" class=\\"treebutton\\">Hierarchy</a>";\n    html += " <a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\')\\" class=\\"treebutton\\">Node</a>";\n\n    if (node.hasSkin())\n        html += " <a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\',false,{skin:true});\\" class=\\"treebutton\\">Skin</a>";\n\n    html += "</td><td>";\n    html += "&nbsp;<span class=\\"icon iconhover icon-eye " + hideclass + "\\" onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').toggleNodeVisibility(\'" + node.name + "\');this.classList.toggle(\'node-hidden\');\\"></span>";\n    html += "</td>";\n\n    html += "</tr>";\n\n    if (node.children)\n    {\n        for (let i = 0; i < node.children.length; i++)\n            html = printNode(html, gltf.nodes[node.children[i]], level + 1);\n    }\n\n    return html;\n}\n\nfunction printMaterial(mat, idx)\n{\n    let html = "<tr>";\n    html += " <td>" + idx + "</td>";\n    html += " <td>" + mat.name + "</td>";\n    // html+=\' <td><a onclick="" class="treebutton">Assign</a><td>\';\n\n    html += " <td>";\n    if (mat.pbrMetallicRoughness && mat.pbrMetallicRoughness.baseColorFactor)\n    {\n        let rgb = "";\n        rgb += "" + Math.round(mat.pbrMetallicRoughness.baseColorFactor[0] * 255);\n        rgb += "," + Math.round(mat.pbrMetallicRoughness.baseColorFactor[1] * 255);\n        rgb += "," + Math.round(mat.pbrMetallicRoughness.baseColorFactor[2] * 255);\n\n        html += "<div style=\\"width:15px;height:15px;;background-color:rgb(" + rgb + ")\\">&nbsp;</a>";\n    }\n    html += " <td style=\\"\\">" + (gltf.shaders[idx] ? "-" : "<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').assignMaterial(\'" + mat.name + "\')\\" class=\\"treebutton\\">Assign</a>") + "<td>";\n    html += "<td>";\n\n    html += "</tr>";\n    return html;\n}\n\nfunction printInfo()\n{\n    if (!gltf) return;\n\n    const startTime = performance.now();\n    const sizes = {};\n    let html = "<div style=\\"overflow:scroll;width:100%;height:100%\\">";\n\n    html += "generator:" + gltf.json.asset.generator;\n\n    let numNodes = 0;\n    if (gltf.json.nodes)numNodes = gltf.json.nodes.length;\n    html += "<div id=\\"groupNodes\\">Nodes (" + numNodes + ")</div>";\n\n    html += "<table id=\\"sectionNodes\\" class=\\"table treetable\\">";\n\n    html += "<tr>";\n    html += " <th colspan=\\"21\\">Name</th>";\n    html += " <th>Mesh</th>";\n    html += " <th>Skin</th>";\n    html += " <th>Material</th>";\n    html += " <th>Anim</th>";\n    html += " <th>Expose</th>";\n    html += " <th></th>";\n    html += "</tr>";\n\n    for (let i = 0; i < gltf.nodes.length; i++)\n    {\n        if (!gltf.nodes[i].isChild)\n            html = printNode(html, gltf.nodes[i], 1);\n    }\n    html += "</table>";\n\n    /// //////////////////\n\n    let numMaterials = 0;\n    if (gltf.json.materials)numMaterials = gltf.json.materials.length;\n    html += "<div id=\\"groupMaterials\\">Materials (" + numMaterials + ")</div>";\n\n    if (!gltf.json.materials || gltf.json.materials.length == 0)\n    {\n    }\n    else\n    {\n        html += "<table id=\\"materialtable\\"  class=\\"table treetable\\">";\n        html += "<tr>";\n        html += " <th>Index</th>";\n        html += " <th>Name</th>";\n        html += " <th>Color</th>";\n        html += " <th>Function</th>";\n        html += " <th></th>";\n        html += "</tr>";\n        for (let i = 0; i < gltf.json.materials.length; i++)\n        {\n            html += printMaterial(gltf.json.materials[i], i);\n        }\n        html += "</table>";\n    }\n\n    /// ///////////////////////\n\n    html += "<div id=\\"groupMeshes\\">Meshes (" + gltf.json.meshes.length + ")</div>";\n\n    html += "<table id=\\"meshestable\\"  class=\\"table treetable\\">";\n    html += "<tr>";\n    html += " <th>Name</th>";\n    html += " <th>Node</th>";\n    html += " <th>Material</th>";\n    html += " <th>Vertices</th>";\n    html += " <th>Attributes</th>";\n    html += "</tr>";\n\n    let sizeBufferViews = [];\n    sizes.meshes = 0;\n\n    console.log(gltf);\n\n    for (let i = 0; i < gltf.json.meshes.length; i++)\n    {\n        html += "<tr>";\n        html += "<td>" + gltf.json.meshes[i].name + "</td>";\n\n        html += "<td>";\n        let count = 0;\n        let nodename = "";\n        for (var j = 0; j < gltf.json.nodes.length; j++)\n        {\n            if (gltf.json.nodes[j].mesh == i)\n            {\n                count++;\n                if (count == 1)\n                {\n                    nodename = gltf.json.nodes[j].name;\n                }\n            }\n        }\n        if (count > 1) html += (count) + " nodes (" + nodename + " ...)";\n        else html += nodename;\n        html += "</td>";\n\n        // -------\n\n        html += "<td>";\n        for (var j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            if (gltf.json.meshes[i].primitives[j].material)\n            {\n                html += gltf.json.materials[gltf.json.meshes[i].primitives[j].material].name + " ";\n            }\n            else html += "None";\n        }\n        html += "</td>";\n\n        html += "<td>";\n        let numVerts = 0;\n        for (var j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            if (gltf.json.meshes[i].primitives[j].attributes.POSITION != undefined)\n            {\n                let v = parseInt(gltf.json.accessors[gltf.json.meshes[i].primitives[j].attributes.POSITION].count);\n                numVerts += v;\n                html += "" + v + "<br/>";\n            }\n            else html += "-<br/>";\n        }\n\n        if (gltf.json.meshes[i].primitives.length > 0)\n            html += "=" + numVerts;\n        html += "</td>";\n\n        html += "<td style=\\"vertical-align:top;\\">";\n        for (let j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            html += Object.keys(gltf.json.meshes[i].primitives[j].attributes);\n            html += " <a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeGeom(\'" + gltf.json.meshes[i].name + "\'," + j + ")\\" class=\\"treebutton\\">Geometry</a>";\n            html += "<br/>";\n        }\n        html += "</td>";\n        html += "</tr>";\n\n        for (let j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            const accessor = gltf.json.accessors[gltf.json.meshes[i].primitives[j].indices];\n            if (accessor)\n            {\n                let bufView = accessor.bufferView;\n\n                if (sizeBufferViews.indexOf(bufView) == -1)\n                {\n                    sizeBufferViews.push(bufView);\n                    if (gltf.json.bufferViews[bufView])sizes.meshes += gltf.json.bufferViews[bufView].byteLength;\n                }\n            }\n\n            for (let k in gltf.json.meshes[i].primitives[j].attributes)\n            {\n                const attr = gltf.json.meshes[i].primitives[j].attributes[k];\n                const bufView2 = gltf.json.accessors[attr].bufferView;\n\n                if (sizeBufferViews.indexOf(bufView2) == -1)\n                {\n                    sizeBufferViews.push(bufView2);\n                    if (gltf.json.bufferViews[bufView2])sizes.meshes += gltf.json.bufferViews[bufView2].byteLength;\n                }\n            }\n        }\n    }\n    html += "</table>";\n\n    /// //////////////////////////////////\n\n    let numAnims = 0;\n    if (gltf.json.animations)numAnims = gltf.json.animations.length;\n    html += "<div id=\\"groupAnims\\">Animations (" + numAnims + ")</div>";\n\n    if (gltf.json.animations)\n    {\n        html += "<table id=\\"sectionAnim\\" class=\\"table treetable\\">";\n        html += "<tr>";\n        html += "  <th>Name</th>";\n        html += "  <th>Target node</th>";\n        html += "  <th>Path</th>";\n        html += "  <th>Interpolation</th>";\n        html += "  <th>Keys</th>";\n        html += "</tr>";\n\n        sizes.animations = 0;\n\n        for (let i = 0; i < gltf.json.animations.length; i++)\n        {\n            for (let j = 0; j < gltf.json.animations[i].samplers.length; j++)\n            {\n                let bufView = gltf.json.accessors[gltf.json.animations[i].samplers[j].input].bufferView;\n                if (sizeBufferViews.indexOf(bufView) == -1)\n                {\n                    sizeBufferViews.push(bufView);\n                    sizes.animations += gltf.json.bufferViews[bufView].byteLength;\n                }\n\n                bufView = gltf.json.accessors[gltf.json.animations[i].samplers[j].output].bufferView;\n                if (sizeBufferViews.indexOf(bufView) == -1)\n                {\n                    sizeBufferViews.push(bufView);\n                    sizes.animations += gltf.json.bufferViews[bufView].byteLength;\n                }\n            }\n\n            for (let j = 0; j < gltf.json.animations[i].channels.length; j++)\n            {\n                html += "<tr>";\n                html += "  <td> Anim " + i + ": " + gltf.json.animations[i].name + "</td>";\n\n                html += "  <td>" + gltf.nodes[gltf.json.animations[i].channels[j].target.node].name + "</td>";\n                html += "  <td>";\n                html += gltf.json.animations[i].channels[j].target.path + " ";\n                html += "  </td>";\n\n                const smplidx = gltf.json.animations[i].channels[j].sampler;\n                const smplr = gltf.json.animations[i].samplers[smplidx];\n\n                html += "  <td>" + smplr.interpolation + "</td>";\n\n                html += "  <td>" + gltf.json.accessors[smplr.output].count;\n\n                html += "&nbsp;&nbsp;<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').showAnim(\'" + i + "\',\'" + j + "\')\\" class=\\"icon icon-search\\"></a>";\n\n                html += "</td>";\n\n                html += "</tr>";\n            }\n        }\n        html += "</table>";\n    }\n    else\n    {\n\n    }\n\n    /// ///////////////////\n\n    let numImages = 0;\n    if (gltf.json.images)numImages = gltf.json.images.length;\n    html += "<div id=\\"groupImages\\">Images (" + numImages + ")</div>";\n\n    if (gltf.json.images)\n    {\n        html += "<table id=\\"sectionImages\\" class=\\"table treetable\\">";\n\n        html += "<tr>";\n        html += "  <th>name</th>";\n        html += "  <th>type</th>";\n        html += "  <th>func</th>";\n\n        html += "</tr>";\n\n        sizes.images = 0;\n\n        for (let i = 0; i < gltf.json.images.length; i++)\n        {\n            if (gltf.json.images[i].bufferView)\n                sizes.images += gltf.json.bufferViews[gltf.json.images[i].bufferView].byteLength;\n\n            html += "<tr>";\n            html += "<td>" + gltf.json.images[i].name + "</td>";\n            html += "<td>" + gltf.json.images[i].mimeType + "</td>";\n            html += "<td>";\n\n            let name = gltf.json.images[i].name;\n            if (name === undefined)name = gltf.json.images[i].bufferView;\n\n            html += "<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeTexture(\'" + name + "\')\\" class=\\"treebutton\\">Expose</a>";\n            html += "</td>";\n\n            html += "<tr>";\n        }\n        html += "</table>";\n    }\n\n    /// ///////////////////////\n\n    let numCameras = 0;\n    if (gltf.json.cameras)numCameras = gltf.json.cameras.length;\n    html += "<div id=\\"groupCameras\\">Cameras (" + numCameras + ")</div>";\n\n    if (gltf.json.cameras)\n    {\n        html += "<table id=\\"sectionCameras\\" class=\\"table treetable\\">";\n\n        html += "<tr>";\n        html += "  <th>name</th>";\n        html += "  <th>type</th>";\n        html += "  <th>info</th>";\n        html += "</tr>";\n\n        for (let i = 0; i < gltf.json.cameras.length; i++)\n        {\n            html += "<tr>";\n            html += "<td>" + gltf.json.cameras[i].name + "</td>";\n            html += "<td>" + gltf.json.cameras[i].type + "</td>";\n            html += "<td>";\n            html += "yfov: " + Math.round(gltf.json.cameras[i].perspective.yfov * 100) / 100;\n            html += ", ";\n            html += "zfar: " + Math.round(gltf.json.cameras[i].perspective.zfar * 100) / 100;\n            html += ", ";\n            html += "znear: " + Math.round(gltf.json.cameras[i].perspective.znear * 100) / 100;\n            html += "</td>";\n\n            html += "<tr>";\n        }\n        html += "</table>";\n    }\n\n    /// ////////////////////////////////////\n\n    let numSkins = 0;\n    if (gltf.json.skins)numSkins = gltf.json.skins.length;\n    html += "<div id=\\"groupSkins\\">Skins (" + numSkins + ")</div>";\n\n    if (gltf.json.skins)\n    {\n        // html += "<h3>Skins (" + gltf.json.skins.length + ")</h3>";\n        html += "<table id=\\"sectionSkins\\" class=\\"table treetable\\">";\n\n        html += "<tr>";\n        html += "  <th>name</th>";\n        html += "  <th></th>";\n        html += "  <th>total joints</th>";\n        html += "</tr>";\n\n        for (let i = 0; i < gltf.json.skins.length; i++)\n        {\n            html += "<tr>";\n            html += "<td>" + gltf.json.skins[i].name + "</td>";\n            html += "<td>" + "</td>";\n            html += "<td>" + gltf.json.skins[i].joints.length + "</td>";\n            html += "<td>";\n            html += "</td>";\n            html += "<tr>";\n        }\n        html += "</table>";\n    }\n\n    /// //////////////////////////\n\n    let sizeBin = 0;\n    if (gltf.json.buffers)\n        sizeBin = gltf.json.buffers[0].byteLength;\n\n    html += "<div id=\\"groupBinary\\">File Size Allocation (" + Math.round(sizeBin / 1024) + "k )</div>";\n\n    html += "<table id=\\"sectionBinary\\" class=\\"table treetable\\">";\n    html += "<tr>";\n    html += "  <th>name</th>";\n    html += "  <th>size</th>";\n    html += "  <th>%</th>";\n    html += "</tr>";\n    let sizeUnknown = sizeBin;\n    for (let i in sizes)\n    {\n        // html+=i+\':\'+Math.round(sizes[i]/1024);\n        html += "<tr>";\n        html += "<td>" + i + "</td>";\n        html += "<td>" + readableSize(sizes[i]) + " </td>";\n        html += "<td>" + Math.round(sizes[i] / sizeBin * 100) + "% </td>";\n        html += "<tr>";\n        sizeUnknown -= sizes[i];\n    }\n\n    if (sizeUnknown != 0)\n    {\n        html += "<tr>";\n        html += "<td>unknown</td>";\n        html += "<td>" + readableSize(sizeUnknown) + " </td>";\n        html += "<td>" + Math.round(sizeUnknown / sizeBin * 100) + "% </td>";\n        html += "<tr>";\n    }\n\n    html += "</table>";\n    html += "</div>";\n\n    tab = new CABLES.UI.Tab("GLTF", { "icon": "cube", "infotext": "tab_gltf", "padding": true, "singleton": true });\n    gui.mainTabs.addTab(tab, true);\n\n    tab.addEventListener("onClose", closeTab);\n    tab.html(html);\n\n    CABLES.UI.Collapsable.setup(ele.byId("groupNodes"), ele.byId("sectionNodes"), false);\n    CABLES.UI.Collapsable.setup(ele.byId("groupMaterials"), ele.byId("materialtable"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupAnims"), ele.byId("sectionAnim"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupMeshes"), ele.byId("meshestable"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupCameras"), ele.byId("sectionCameras"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupImages"), ele.byId("sectionImages"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupSkins"), ele.byId("sectionSkins"), true);\n    CABLES.UI.Collapsable.setup(ele.byId("groupBinary"), ele.byId("sectionBinary"), true);\n\n    gui.maintabPanel.show(true);\n}\n\nfunction readableSize(n)\n{\n    if (n > 1024) return Math.round(n / 1024) + " kb";\n    if (n > 1024 * 500) return Math.round(n / 1024) + " mb";\n    else return n + " bytes";\n}\n',inc_skin_js:'const GltfSkin = class\n{\n    constructor(node)\n    {\n        this._mod = null;\n        this._node = node;\n        this._lastTime = 0;\n        this._matArr = [];\n        this._m = mat4.create();\n        this._invBindMatrix = mat4.create();\n    }\n\n    renderFinish(cgl)\n    {\n        cgl.popModelMatrix();\n        this._mod.unbind();\n    }\n\n    renderStart(cgl, time)\n    {\n        if (!this._mod)\n        {\n            this._mod = new CGL.ShaderModifier(cgl, op.name + this._node.name);\n\n            this._mod.addModule({\n                "priority": -2,\n                "name": "MODULE_VERTEX_POSITION",\n                "srcHeadVert": attachments.skin_head_vert || "",\n                "srcBodyVert": attachments.skin_vert || ""\n            });\n\n            this._mod.addUniformVert("m4[]", "MOD_boneMats", []);// bohnenmatze\n            const tr = vec3.create();\n        }\n\n        const skinIdx = this._node.skin;\n        const arrLength = gltf.json.skins[skinIdx].joints.length * 16;\n\n        // if(this._lastTime!=inTime.get())\n        {\n            // this._lastTime=inTime.get();\n            if (this._matArr.length != arrLength) this._matArr.length = arrLength;\n\n            for (let i = 0; i < gltf.json.skins[skinIdx].joints.length; i++)\n            {\n                const i16 = i * 16;\n                const jointIdx = gltf.json.skins[skinIdx].joints[i];\n                const nodeJoint = gltf.nodes[jointIdx];\n\n                for (let j = 0; j < 16; j++)\n                    this._invBindMatrix[j] = gltf.accBuffers[gltf.json.skins[skinIdx].inverseBindMatrices][i16 + j];\n\n                mat4.mul(this._m, nodeJoint.modelMatAbs(), this._invBindMatrix);\n\n                for (let j = 0; j < this._m.length; j++) this._matArr[i16 + j] = this._m[j];\n            }\n\n            this._mod.setUniformValue("MOD_boneMats", this._matArr);\n            // this._lastTime = time;\n        }\n        // else\n        // {\n        //     // console.log("skip")\n        // }\n\n        this._mod.define("SKIN_NUM_BONES", gltf.json.skins[skinIdx].joints.length);\n\n        this._mod.bind();\n\n        // draw mesh...\n        cgl.pushModelMatrix();\n        mat4.identity(cgl.mMatrix);\n    }\n};\n',skin_vert:"int index=int(attrJoints.x);\nvec4 newPos = (MOD_boneMats[index] * pos) * attrWeights.x;\nvec3 newNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.x).xyz);\n\nindex=int(attrJoints.y);\nnewPos += (MOD_boneMats[index] * pos) * attrWeights.y;\nnewNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.y).xyz)+newNorm;\n\nindex=int(attrJoints.z);\nnewPos += (MOD_boneMats[index] * pos) * attrWeights.z;\nnewNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.z).xyz)+newNorm;\n\nindex=int(attrJoints.w);\nnewPos += (MOD_boneMats[index] * pos) * attrWeights.w ;\nnewNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.w).xyz)+newNorm;\n\npos=newPos;\n\nnorm=normalize(newNorm.xyz);\n\n\n",skin_head_vert:"\nIN vec4 attrWeights;\nIN vec4 attrJoints;\nUNI mat4 MOD_boneMats[SKIN_NUM_BONES];\n"};const a=class{constructor(e,t){this.node=t;this.name=t.name;this.config=e.json.cameras[t.camera];this.pos=vec3.create();this.quat=quat.create();this.quatOr=quat.create();this.vCenter=vec3.create();this.vUp=vec3.create();this.vMat=mat4.create()}updateAnim(e){if(this.node&&this.node._animTrans){vec3.set(this.pos,this.node._animTrans[0].getValue(e),this.node._animTrans[1].getValue(e),this.node._animTrans[2].getValue(e));quat.set(this.quat,this.node._animRot[0].getValue(e),this.node._animRot[1].getValue(e),this.node._animRot[2].getValue(e),this.node._animRot[3].getValue(e))}}start(e){if(ne.frameStore.shadowPass)return;this.updateAnim(e);const t=ne.getViewPort()[2]/ne.getViewPort()[3];ne.pushPMatrix();ne.pushViewMatrix();let n=mat4.create();mat4.invert(n,this.node.modelMatAbs());this.vMat=n;mat4.identity(ne.vMatrix);mat4.mul(ne.vMatrix,ne.vMatrix,n)}end(){if(ne.frameStore.shadowPass)return;ne.popPMatrix();ne.popViewMatrix()}};const O=8;const A=class{constructor(){this.json={};this.accBuffers=[];this.meshes=[];this.nodes=[];this.shaders=[];this.timing=[];this.cams=[];this.startTime=performance.now();this.bounds=new CGL.BoundingBox;this.loaded=Date.now();this.accBuffersDelete=[]}getNode(t){for(let e=0;e<this.nodes.length;e++){if(this.nodes[e].name==t)return this.nodes[e]}}unHideAll(){for(let e=0;e<this.nodes.length;e++){this.nodes[e].unHide()}}};function S(e){if(window.TextDecoder)return new TextDecoder("utf-8").decode(e);let t,n,i,a;let r,s;t="";i=e.length;n=0;while(n<i){a=e[n++];switch(a>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:t+=String.fromCharCode(a);break;case 12:case 13:r=e[n++];t+=String.fromCharCode((a&31)<<6|r&63);break;case 14:r=e[n++];s=e[n++];t+=String.fromCharCode((a&15)<<12|(r&63)<<6|(s&63)<<0);break}}return t}function C(e,t,n,i){const a={};if(i>=e.byteLength){x.log("could not read chunk...");return}a.size=e.getUint32(i+0,te);a.type=S(t.subarray(i+4,i+4+4));if(a.type=="BIN\0"){a.dataView=new DataView(n,i+8,a.size)}else if(a.type=="JSON"){const r=S(t.subarray(i+8,i+8+a.size));try{const s=JSON.parse(r);a.data=s;z.set(s.asset.generator)}catch(e){}}else{x.warn("unknown type",a.type)}return a}function E(t){const i={};for(let e=0;e<t.json.animations.length;e++){const a=t.json.animations[e];for(let e=0;e<a.channels.length;e++){const r=a.channels[e];const s=t.nodes[r.target.node];const o=a.samplers[r.sampler];const n=t.json.accessors[o.input];const l=t.accBuffers[o.input];const u=t.json.accessors[o.output];const h=t.accBuffers[o.output];t.accBuffersDelete.push(o.output,o.input);if(l&&h){let n=1;if(u.type=="VEC2")n=2;else if(u.type=="VEC3")n=3;else if(u.type=="VEC4")n=4;else x.warn("unknown accOut.type",u.type);const c=[];i[a.name]=true;for(let e=0;e<n;e++){const f=new CABLES.TL.Anim;c.push(f)}if(o.interpolation=="LINEAR"){}else if(o.interpolation=="STEP")for(let e=0;e<n;e++)c[e].defaultEasing=CABLES.EASING_ABSOLUTE;else if(o.interpolation=="CUBICSPLINE")for(let e=0;e<n;e++)c[e].defaultEasing=CABLES.EASING_CUBICSPLINE;else x.warn("unknown interpolation",o.interpolation);if(l[0]!==0)for(let e=0;e<n;e++)c[e].setValue(0,h[0*n+e]);for(let t=0;t<l.length;t++){oe=Math.max(l[t],oe);for(let e=0;e<n;e++){if(c[e].defaultEasing===CABLES.EASING_CUBICSPLINE){const m=t*n*3+e;const d=c[e].setValue(l[t],h[m+n]);d.bezTangIn=h[m];d.bezTangOut=h[m+n*2]}else{c[e].setValue(l[t],h[t*n+e])}}}s.setAnim(r.target.path,a.name,c)}else{x.warn("loadAmins bufferIn undefined ",l===undefined);x.warn("loadAmins bufferOut undefined ",h===undefined);x.warn("loadAmins ",o,u);x.warn("loadAmins num accBuffers",t.accBuffers.length);x.warn("loadAmins num accessors",t.json.accessors.length)}}}Q.set(null);Q.set(Object.keys(i))}function T(n){if(!n||!n.json.cameras)return;n.cameras=n.cameras||[];for(let t=0;t<n.nodes.length;t++){if(n.nodes[t].hasOwnProperty("camera")){const e=new a(n,n.nodes[t]);n.cameras.push(e)}}}function I(){if(!window.DracoDecoder){setTimeout(()=>{I()},100)}Ae()}function r(e){let a=0,t=0;const r=new A;r.timing.push("Start parsing",Math.round(performance.now()-r.startTime));if(!e)return;const n=new Uint8Array(e);let i=0;const s=S(n.subarray(i,4));i+=4;if(s!="glTF")return;r.timing.push("dataview",Math.round(performance.now()-r.startTime));const o=new DataView(e);const l=o.getUint32(i,te);i+=4;const u=o.getUint32(i,te);i+=4;H.set(l);const h=[];r.chunks=h;h.push(C(o,n,e,i));i+=h[0].size+O;r.json=h[0].data;Z.set(r.json);Y.set(r.json.extensionsUsed||[]);let c=C(o,n,e,i);while(c){h.push(c);i+=c.size+O;c=C(o,n,e,i)}r.chunks=h;const f=h[0].data.bufferViews;const m=h[0].data.accessors;r.timing.push("Parse buffers",Math.round(performance.now()-r.startTime));if(r.json.extensionsUsed&&r.json.extensionsUsed.indexOf("KHR_draco_mesh_compression")>-1){if(!window.DracoDecoder){x.setUiError("gltfdraco","GLTF draco compression lib not found / add draco op to your patch!");I();return r}else{r.useDraco=true}}x.setUiError("gltfdraco",null);if(f){for(t=0;t<m.length;t++){const d=m[t];const g=f[d.bufferView];let i=0;if(d.type=="SCALAR")i=1;else if(d.type=="VEC2")i=2;else if(d.type=="VEC3")i=3;else if(d.type=="VEC4")i=4;else if(d.type=="MAT4")i=16;else console.error("unknown accessor type",d.type);if(h[1].dataView){if(g){const p=d.count*i;let e=(g.byteOffset||0)+(d.byteOffset||0);let t=g.byteStride||0;let n=null;if(d.componentType==5126||d.componentType==5125){t=t||4;const _=d.componentType==5125;if(_)n=new Uint32Array(p);else n=new Float32Array(p);for(a=0;a<p;a++){if(_)n[a]=h[1].dataView.getUint32(e,te);else n[a]=h[1].dataView.getFloat32(e,te);if(t!=4&&(a+1)%i===0)e+=t-i*4;e+=4}}else if(d.componentType==5123){t=t||2;n=new Uint16Array(p);for(a=0;a<p;a++){n[a]=h[1].dataView.getUint16(e,te);if(t!=2&&(a+1)%i===0)e+=t-i*2;e+=2}}else if(d.componentType==5121){t=t||1;n=new Uint8Array(p);for(a=0;a<p;a++){n[a]=h[1].dataView.getUint8(e,te);if(t!=1&&(a+1)%i===0)e+=t-i*1;e+=1}}else{console.error("unknown component type",d.componentType)}r.accBuffers.push(n)}else{}}}}r.timing.push("Parse mesh groups",Math.round(performance.now()-r.startTime));r.json.meshes=r.json.meshes||[];if(r.json.meshes){for(t=0;t<r.json.meshes.length;t++){const v=new y(r,r.json.meshes[t]);r.meshes.push(v)}}r.timing.push("Parse nodes",Math.round(performance.now()-r.startTime));for(t=0;t<r.json.nodes.length;t++){if(r.json.nodes[t].children)for(a=0;a<r.json.nodes[t].children.length;a++){r.json.nodes[r.json.nodes[t].children[a]].isChild=true}}for(t=0;t<r.json.nodes.length;t++){const b=new M(r.json.nodes[t],r);r.nodes.push(b)}for(t=0;t<r.nodes.length;t++){const b=r.nodes[t];if(!b.children)continue;for(let e=0;e<b.children.length;e++){r.nodes[b.children[e]].parent=b}}for(t=0;t<r.nodes.length;t++){if(r.nodes[t].skin>-1){r.nodes[t].skinRenderer=new w(r.nodes[t])}}ue=true;r.timing.push("load anims",Math.round(performance.now()-r.startTime));if(r.json.animations)E(r);r.timing.push("load cameras",Math.round(performance.now()-r.startTime));if(r.json.cameras)T(r);r.timing.push("finished",Math.round(performance.now()-r.startTime));return r}let s=class{constructor(e,n,r,s){this.POINTS=0;this.LINES=1;this.LINE_LOOP=2;this.LINE_STRIP=3;this.TRIANGLES=4;this.TRIANGLE_STRIP=5;this.TRIANGLE_FAN=6;this.test=0;this.name=e;this.submeshIndex=0;this.material=n.material;this.mesh=null;this.geom=new CGL.Geometry("gltf_"+this.name);this.geom.verticesIndices=[];this.bounds=null;this.primitive=4;if(n.hasOwnProperty("mode"))this.primitive=n.mode;if(n.hasOwnProperty("indices"))this.geom.verticesIndices=r.accBuffers[n.indices];r.loadingMeshes=r.loadingMeshes||0;r.loadingMeshes++;this.materialJson=this._matPbrMetalness=this._matPbrRoughness=this._matDiffuseColor=null;if(r.json.materials){if(this.material!=-1)this.materialJson=r.json.materials[this.material];if(this.materialJson&&this.materialJson.pbrMetallicRoughness){if(this.materialJson.pbrMetallicRoughness.baseColorFactor)this._matDiffuseColor=this.materialJson.pbrMetallicRoughness.baseColorFactor;this._matDiffuseColor=this.materialJson.pbrMetallicRoughness.baseColorFactor;this._matPbrMetalness=this.materialJson.pbrMetallicRoughness.metallicFactor||null;this._matPbrRoughness=this.materialJson.pbrMetallicRoughness.roughnessFactor||null}}if(r.useDraco&&n.extensions.KHR_draco_mesh_compression){const i=r.chunks[0].data.bufferViews[n.extensions.KHR_draco_mesh_compression.bufferView];const a=i.byteLength;const o=new Int8Array(a);let t=i.byteOffset||0;for(let e=0;e<a;e++){o[e]=r.chunks[1].dataView.getInt8(t,te);t++}const l=window.DracoDecoder;l.decodeGeometry(o.buffer,t=>{const n=new CGL.Geometry("draco mesh "+e);for(let e=0;e<t.attributes.length;e++){const i=t.attributes[e];if(i.name==="position")n.vertices=i.array;else if(i.name==="normal")n.vertexNormals=i.array;else if(i.name==="uv")n.texCoords=i.array;else if(i.name==="color")n.vertexColors=this.calcVertexColors(i.array);else if(i.name==="joints")n.setAttribute("attrJoints",Array.from(i.array),4);else if(i.name==="weights"){const a=new Float32Array(i.array.length/i.itemSize*4);for(let t=0;t<i.array.length/i.itemSize;t++){a[t*4]=a[t*4+1]=a[t*4+2]=a[t*4+3]=0;for(let e=0;e<i.itemSize;e++)a[t*4+e]=i.array[t*i.itemSize+e]}n.setAttribute("attrWeights",a,4)}else x.logWarn("unknown draco attrib",i)}t.attributes=null;n.verticesIndices=t.index.array;this.setGeom(n);this.mesh=null;r.loadingMeshes--;if(s)s(this)},e=>{x.logError(e)})}else{r.loadingMeshes--;this.fillGeomAttribs(r,this.geom,n.attributes);if(n.targets){console.log("prim.targets",n.targets.length);for(let e=0;e<n.targets.length;e++){let t=this.geom.copy();if(n.hasOwnProperty("indices"))t.verticesIndices=r.accBuffers[n.indices];this.fillGeomAttribs(r,t,n.targets[e],false);{for(let e=0;e<t.vertices.length;e++)t.vertices[e]+=this.geom.vertices[e];t.calculateNormals();for(let e=0;e<t.vertices.length;e++)t.vertices[e]-=this.geom.vertices[e]}this.geom.morphTargets.push(t)}}if(s)s(this)}}_linearToSrgb(e){if(e<=0)return 0;else if(e>=1)return 1;else if(e<.0031308)return e*12.92;else return Math.pow(e,1/2.2)*1.055-.055}calcVertexColors(n){let i=null;if(n instanceof Float32Array){let t=false;for(let e=0;e<n.length;e++){if(n[e]>1){t=true;continue}}if(t)for(let e=0;e<n.length;e++)n[e]/=65535;i=n}else if(n instanceof Uint16Array){const t=new Float32Array(n.length);for(let e=0;e<n.length;e++)t[e]=n[e]/65535;i=t}else i=n;for(let e=0;e<i.length;e++){i[e]=this._linearToSrgb(i[e])}return i}fillGeomAttribs(e,t,n,i){if(n.hasOwnProperty("POSITION"))t.vertices=e.accBuffers[n.POSITION];if(n.hasOwnProperty("NORMAL"))t.vertexNormals=e.accBuffers[n.NORMAL];if(n.hasOwnProperty("TANGENT"))t.tangents=e.accBuffers[n.TANGENT];if(n.hasOwnProperty("COLOR_0"))t.vertexColors=this.calcVertexColors(e.accBuffers[n.COLOR_0]);if(n.hasOwnProperty("COLOR_1"))t.setAttribute("attrVertColor1",this.calcVertexColors(e.accBuffers[n.COLOR_1]),4);if(n.hasOwnProperty("COLOR_2"))t.setAttribute("attrVertColor2",this.calcVertexColors(e.accBuffers[n.COLOR_2]),4);if(n.hasOwnProperty("COLOR_3"))t.setAttribute("attrVertColor3",this.calcVertexColors(e.accBuffers[n.COLOR_3]),4);if(n.hasOwnProperty("COLOR_4"))t.setAttribute("attrVertColor4",this.calcVertexColors(e.accBuffers[n.COLOR_4]),4);if(n.hasOwnProperty("TEXCOORD_0"))t.texCoords=e.accBuffers[n.TEXCOORD_0];if(n.hasOwnProperty("TEXCOORD_1"))t.setAttribute("attrTexCoord1",e.accBuffers[n.TEXCOORD_1],2);if(n.hasOwnProperty("TEXCOORD_2"))t.setAttribute("attrTexCoord2",e.accBuffers[n.TEXCOORD_2],2);if(n.hasOwnProperty("TEXCOORD_3"))t.setAttribute("attrTexCoord3",e.accBuffers[n.TEXCOORD_3],2);if(n.hasOwnProperty("TEXCOORD_4"))t.setAttribute("attrTexCoord4",e.accBuffers[n.TEXCOORD_4],2);if(n.hasOwnProperty("WEIGHTS_0")){t.setAttribute("attrWeights",e.accBuffers[n.WEIGHTS_0],4)}if(n.hasOwnProperty("JOINTS_0")){if(!e.accBuffers[n.JOINTS_0])console.log("no !gltf.accBuffers[attribs.JOINTS_0]");t.setAttribute("attrJoints",e.accBuffers[n.JOINTS_0],4)}if(n.hasOwnProperty("POSITION"))e.accBuffersDelete.push(n.POSITION);if(n.hasOwnProperty("NORMAL"))e.accBuffersDelete.push(n.NORMAL);if(n.hasOwnProperty("TEXCOORD_0"))e.accBuffersDelete.push(n.TEXCOORD_0);if(n.hasOwnProperty("TANGENT"))e.accBuffersDelete.push(n.TANGENT);if(n.hasOwnProperty("COLOR_0"))e.accBuffersDelete.push(n.COLOR_0);if(n.hasOwnProperty("COLOR_0"))e.accBuffersDelete.push(n.COLOR_0);if(n.hasOwnProperty("COLOR_1"))e.accBuffersDelete.push(n.COLOR_1);if(n.hasOwnProperty("COLOR_2"))e.accBuffersDelete.push(n.COLOR_2);if(n.hasOwnProperty("COLOR_3"))e.accBuffersDelete.push(n.COLOR_3);if(n.hasOwnProperty("TEXCOORD_1"))e.accBuffersDelete.push(n.TEXCOORD_1);if(n.hasOwnProperty("TEXCOORD_2"))e.accBuffersDelete.push(n.TEXCOORD_2);if(n.hasOwnProperty("TEXCOORD_3"))e.accBuffersDelete.push(n.TEXCOORD_3);if(n.hasOwnProperty("TEXCOORD_4"))e.accBuffersDelete.push(n.TEXCOORD_4);if(i!==false)if(t&&t.verticesIndices)this.setGeom(t)}setGeom(n){if(U.get()=="X-ZY"){for(let t=0;t<n.vertexNormals.length;t+=3){let e=n.vertexNormals[t+2];n.vertexNormals[t+2]=n.vertexNormals[t+1];n.vertexNormals[t+1]=-e}}if(R.get()=="XZ-Y"){for(let t=0;t<n.vertices.length;t+=3){let e=n.vertices[t+2];n.vertices[t+2]=-n.vertices[t+1];n.vertices[t+1]=e}}if(this.primitive==this.TRIANGLES){if(!n.vertexNormals.length||V.get())n.calculateNormals();if((!n.biTangents||n.biTangents.length==0)&&n.tangents){const t=vec3.create();const e=vec3.create();const i=n.tangents;n.tangents=new Float32Array(i.length/4*3);n.biTangents=new Float32Array(i.length/4*3);for(let e=0;e<i.length;e+=4){const a=e/4*3;vec3.cross(t,[n.vertexNormals[a],n.vertexNormals[a+1],n.vertexNormals[a+2]],[i[e],i[e+1],i[e+2]]);vec3.div(t,t,[i[e+3],i[e+3],i[e+3]]);vec3.normalize(t,t);n.biTangents[a+0]=t[0];n.biTangents[a+1]=t[1];n.biTangents[a+2]=t[2];n.tangents[a+0]=i[e+0];n.tangents[a+1]=i[e+1];n.tangents[a+2]=i[e+2]}}if(n.tangents.length===0||V.get())n.calcTangentsBitangents()}this.geom=n;this.bounds=n.getBounds()}render(n,t,i){if(!this.mesh&&this.geom&&this.geom.verticesIndices){let e=this.geom;if(this.geom.vertices.length/3>64e3){e=this.geom.copy();e.unIndex(false,true)}let t;if(this.primitive==this.TRIANGLES)t=n.gl.TRIANGLES;else if(this.primitive==this.LINES)t=n.gl.LINES;else if(this.primitive==this.LINE_STRIP)t=n.gl.LINE_STRIP;else if(this.primitive==this.POINTS)t=n.gl.POINTS;else{x.logWarn("unknown primitive type",this)}this.mesh=new CGL.Mesh(n,e,t);this.mesh._geom=null}else{if(this.geom&&this.geom.morphTargets.length){this.morphGeom=this.geom.copy();this.test=le*11.7;if(this.test>=this.geom.morphTargets.length-1)this.test=0;const l=this.geom.morphTargets[Math.floor(this.test)];const u=this.geom.morphTargets[Math.floor(this.test+1)];if(l&&l.vertices&&u){if(this.morphGeom.vertexNormals.length!=l.vertexNormals.length)this.morphGeom.vertexNormals=new Float32Array(l.vertexNormals.length);const h=this.test%1;for(let e=0;e<this.morphGeom.vertices.length;e++){this.morphGeom.vertices[e]=this.geom.vertices[e]+(1-h)*l.vertices[e]+h*u.vertices[e];this.morphGeom.vertexNormals[e]=(1-h)*l.vertexNormals[e]+h*u.vertexNormals[e]}this.mesh.updateNormals(this.morphGeom);this.mesh.updateVertices(this.morphGeom)}}let e=!t&&this.material!=-1&&se.shaders[this.material];if(i)e=false;if(e)n.pushShader(se.shaders[this.material]);const a=n.getShader()||{};const r=a.uniformColorDiffuse;const s=a.uniformPbrMetalness;const o=a.uniformPbrRoughness;if(!se.shaders[this.material]&&j.get()){if(r&&this._matDiffuseColor){this._matDiffuseColorOrig=[r.getValue()[0],r.getValue()[1],r.getValue()[2],r.getValue()[3]];r.setValue(this._matDiffuseColor)}if(s)if(this._matPbrMetalness!=null){this._matPbrMetalnessOrig=s.getValue();s.setValue(this._matPbrMetalness)}else s.setValue(0);if(o)if(this._matPbrRoughness!=null){this._matPbrRoughnessOrig=o.getValue();o.setValue(this._matPbrRoughness)}else o.setValue(0)}if(this.mesh)this.mesh.render(n.getShader(),t);if(j.get()){if(r&&this._matDiffuseColor)r.setValue(this._matDiffuseColorOrig);if(s&&this._matPbrMetalnessOrig!=undefined)s.setValue(this._matPbrMetalnessOrig);if(o&&this._matPbrRoughnessOrig!=undefined)o.setValue(this._matPbrRoughnessOrig)}if(e)n.popShader()}}};const y=class{constructor(t,e){this.bounds=new CGL.BoundingBox;this.meshes=[];this.name=e.name;const n=e.primitives;for(let e=0;e<n.length;e++){const i=new s(this.name,n[e],t,e=>{this.bounds.apply(e.bounds)});i.submeshIndex=e;this.meshes.push(i)}}render(t,n,i,a){for(let e=0;e<this.meshes.length;e++){const r=se.shaders[this.meshes[e].material];if(r)t.pushShader(se.shaders[this.meshes[e].material]);if(i)i.renderStart(t,i._time);this.meshes[e].render(t,n,i,a);if(i)i.renderFinish(t);if(r)t.popShader()}}};const M=class{constructor(e,t){this.isChild=e.isChild||false;this.name=e.name;if(e.hasOwnProperty("camera"))this.camera=e.camera;this.hidden=false;this.mat=mat4.create();this._animMat=mat4.create();this._tempMat=mat4.create();this._tempQuat=quat.create();this._tempRotmat=mat4.create();this.mesh=null;this.children=[];this._node=e;this._gltf=t;this.absMat=mat4.create();this.addTranslate=null;this.addMulMat=null;this.updateMatrix();this._animActions={}}get skin(){if(this._node.hasOwnProperty("skin"))return this._node.skin;else return-1}hasSkin(){if(this._node.hasOwnProperty("skin"))return this._gltf.json.skins[this._node.skin].name||"unknown";return false}updateMatrix(){mat4.identity(this.mat);if(this._node.translation)mat4.translate(this.mat,this.mat,this._node.translation);if(this._node.rotation){const e=mat4.create();this._rot=this._node.rotation;mat4.fromQuat(e,this._node.rotation);mat4.mul(this.mat,this.mat,e)}if(this._node.scale){this._scale=this._node.scale;mat4.scale(this.mat,this.mat,this._scale)}if(this._node.hasOwnProperty("mesh")){this.mesh=this._gltf.meshes[this._node.mesh]}if(this._node.children){for(let e=0;e<this._node.children.length;e++){this._gltf.json.nodes[e].isChild=true;if(this._gltf.nodes[this._node.children[e]])this._gltf.nodes[this._node.children[e]].isChild=true;this.children.push(this._node.children[e])}}}unHide(){this.hidden=false;for(let e=0;e<this.children.length;e++)if(this.children[e].unHide)this.children[e].unHide()}calcBounds(t,e,n){const i=mat4.create();if(e)mat4.copy(i,e);if(this.mat)mat4.mul(i,i,this.mat);if(this.mesh){const a=this.mesh.bounds.copy();a.mulMat4(i);n.apply(a);if(n.changed){re.push(a._min[0]||0,a._min[1]||0,a._min[2]||0,a._max[0]||0,a._max[1]||0,a._max[2]||0)}}for(let e=0;e<this.children.length;e++){if(t.nodes[this.children[e]]&&t.nodes[this.children[e]].calcBounds){const r=t.nodes[this.children[e]].calcBounds(t,i,n);n.apply(r)}}if(n.changed)return n;else return null}setAnimAction(t){if(t&&!this._animActions[t])return;for(let e in this._animActions[t]){if(e=="translation")this._animTrans=this._animActions[t][e];else if(e=="rotation")this._animRot=this._animActions[t][e];else if(e=="scale")this._animScale=this._animActions[t][e];else console.warn("unknown anim path",e,this._animActions[t][e])}}setAnim(e,t,n){this._animActions[t]=this._animActions[t]||{};if(this._animActions[t][e])x.warn("animation action path already exists",t,e,this._animActions[t][e]);this._animActions[t][e]=n;if(e=="translation")this._animTrans=n;else if(e=="rotation")this._animRot=n;else if(e=="scale")this._animScale=n;else console.warn("unknown anim path",e,n)}modelMatLocal(){return this._animMat||this.mat}modelMatAbs(){return this.absMat}transform(e,t){if(!t&&t!=0)t=le;this._lastTimeTrans=t;if(!this._animTrans&&!this._animRot&&!this._animScale){mat4.mul(e.mMatrix,e.mMatrix,this.mat);this._animMat=null}else{this._animMat=this._animMat||mat4.create();mat4.identity(this._animMat);const n=true;if(n&&this._animTrans){mat4.translate(this._animMat,this._animMat,[this._animTrans[0].getValue(t),this._animTrans[1].getValue(t),this._animTrans[2].getValue(t)])}else if(this._node.translation)mat4.translate(this._animMat,this._animMat,this._node.translation);if(n&&this._animRot){if(this._animRot[0].defaultEasing==CABLES.EASING_LINEAR)CABLES.TL.Anim.slerpQuaternion(t,this._tempQuat,this._animRot[0],this._animRot[1],this._animRot[2],this._animRot[3]);else if(this._animRot[0].defaultEasing==CABLES.EASING_ABSOLUTE){this._tempQuat[0]=this._animRot[0].getValue(t);this._tempQuat[1]=this._animRot[1].getValue(t);this._tempQuat[2]=this._animRot[2].getValue(t);this._tempQuat[3]=this._animRot[3].getValue(t)}else if(this._animRot[0].defaultEasing==CABLES.EASING_CUBICSPLINE){CABLES.TL.Anim.slerpQuaternion(t,this._tempQuat,this._animRot[0],this._animRot[1],this._animRot[2],this._animRot[3])}mat4.fromQuat(this._tempMat,this._tempQuat);mat4.mul(this._animMat,this._animMat,this._tempMat)}else if(this._rot){mat4.fromQuat(this._tempRotmat,this._rot);mat4.mul(this._animMat,this._animMat,this._tempRotmat)}if(n&&this._animScale){mat4.scale(this._animMat,this._animMat,[this._animScale[0].getValue(t),this._animScale[1].getValue(t),this._animScale[2].getValue(t)])}else if(this._scale)mat4.scale(this._animMat,this._animMat,this._scale);mat4.mul(e.mMatrix,e.mMatrix,this._animMat)}if(this.addTranslate)mat4.translate(e.mMatrix,e.mMatrix,this.addTranslate);if(this.addMulMat)mat4.mul(e.mMatrix,e.mMatrix,this.addMulMat);mat4.copy(this.absMat,e.mMatrix)}render(t,n,i,a,r,s,o){if(!n)t.pushModelMatrix();if(o===undefined)o=se.time;if(!n||this.skinRenderer)this.transform(t,o);if(this.hidden&&!s){}else{if(this.skinRenderer){this.skinRenderer.time=o;if(!i)this.mesh.render(t,a,this.skinRenderer,o)}else{if(this.mesh&&!i)this.mesh.render(t,a,null,o)}}if(!r&&!this.hidden)for(let e=0;e<this.children.length;e++)if(se.nodes[this.children[e]]){se.nodes[this.children[e]].render(t,n,i,a,r,s,o)}if(!n)t.popModelMatrix()}};let v=null;function b(){if(v)gui.mainTabs.closeTab(v.id);v=null}function L(n,i,a){if(!se)return;n+='<tr class="row">';let r="";let s="";for(let t=1;t<a;t++){s+="&nbsp;&nbsp;&nbsp;";let e="identBg";if(t==1)e="identBgLevel0";r+='<td class="ident '+e+'" ><div style=""></div></td>'}let e=CABLES.uuid();n+=r;n+='<td colspan="'+(21-a)+'">';if(i.mesh&&i.mesh.meshes.length)n+='<span class="icon icon-cube"></span>&nbsp;';else n+='<span class="icon icon-box-select"></span> &nbsp;';n+=i.name+"</td><td></td>";if(i.mesh){n+="<td>";for(let e=0;e<i.mesh.meshes.length;e++){if(e>0)n+=", ";n+=i.mesh.meshes[e].name}n+="</td>";n+="<td>";n+=i.hasSkin()||"-";n+="</td>";n+="<td>";let t=0;for(let e=0;e<i.mesh.meshes.length;e++){if(t>0)n+=", ";if(i.mesh.meshes[e].material){n+=se.json.materials[i.mesh.meshes[e].material].name;t++}}if(t==0)n+="none";n+="</td>"}else{n+="<td>-</td><td>-</td><td>-</td>"}n+="<td>";if(i._animRot||i._animScale||i._animTrans){if(i._animRot)n+="Rot ";if(i._animScale)n+="Scale ";if(i._animTrans)n+="Trans "}else n+="None";n+="</td>";n+="<td>";let t="";if(i.hidden)t="node-hidden";n+="<a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeNode('"+i.name+"','transform')\" class=\"treebutton\">Transform</a>";n+=" <a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeNode('"+i.name+"','hierarchy')\" class=\"treebutton\">Hierarchy</a>";n+=" <a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeNode('"+i.name+'\')" class="treebutton">Node</a>';if(i.hasSkin())n+=" <a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeNode('"+i.name+'\',false,{skin:true});" class="treebutton">Skin</a>';n+="</td><td>";n+='&nbsp;<span class="icon iconhover icon-eye '+t+'" onclick="gui.corePatch().getOpById(\''+x.id+"').toggleNodeVisibility('"+i.name+"');this.classList.toggle('node-hidden');\"></span>";n+="</td>";n+="</tr>";if(i.children){for(let e=0;e<i.children.length;e++)n=L(n,se.nodes[i.children[e]],a+1)}return n}function N(t,e){let n="<tr>";n+=" <td>"+e+"</td>";n+=" <td>"+t.name+"</td>";n+=" <td>";if(t.pbrMetallicRoughness&&t.pbrMetallicRoughness.baseColorFactor){let e="";e+=""+Math.round(t.pbrMetallicRoughness.baseColorFactor[0]*255);e+=","+Math.round(t.pbrMetallicRoughness.baseColorFactor[1]*255);e+=","+Math.round(t.pbrMetallicRoughness.baseColorFactor[2]*255);n+='<div style="width:15px;height:15px;;background-color:rgb('+e+')">&nbsp;</a>'}n+=' <td style="">'+(se.shaders[e]?"-":"<a onclick=\"gui.corePatch().getOpById('"+x.id+"').assignMaterial('"+t.name+'\')" class="treebutton">Assign</a>')+"<td>";n+="<td>";n+="</tr>";return n}function e(){if(!se)return;const e=performance.now();const a={};let r='<div style="overflow:scroll;width:100%;height:100%">';r+="generator:"+se.json.asset.generator;let t=0;if(se.json.nodes)t=se.json.nodes.length;r+='<div id="groupNodes">Nodes ('+t+")</div>";r+='<table id="sectionNodes" class="table treetable">';r+="<tr>";r+=' <th colspan="21">Name</th>';r+=" <th>Mesh</th>";r+=" <th>Skin</th>";r+=" <th>Material</th>";r+=" <th>Anim</th>";r+=" <th>Expose</th>";r+=" <th></th>";r+="</tr>";for(let e=0;e<se.nodes.length;e++){if(!se.nodes[e].isChild)r=L(r,se.nodes[e],1)}r+="</table>";let n=0;if(se.json.materials)n=se.json.materials.length;r+='<div id="groupMaterials">Materials ('+n+")</div>";if(!se.json.materials||se.json.materials.length==0){}else{r+='<table id="materialtable"  class="table treetable">';r+="<tr>";r+=" <th>Index</th>";r+=" <th>Name</th>";r+=" <th>Color</th>";r+=" <th>Function</th>";r+=" <th></th>";r+="</tr>";for(let e=0;e<se.json.materials.length;e++){r+=N(se.json.materials[e],e)}r+="</table>"}r+='<div id="groupMeshes">Meshes ('+se.json.meshes.length+")</div>";r+='<table id="meshestable"  class="table treetable">';r+="<tr>";r+=" <th>Name</th>";r+=" <th>Node</th>";r+=" <th>Material</th>";r+=" <th>Vertices</th>";r+=" <th>Attributes</th>";r+="</tr>";let s=[];a.meshes=0;console.log(se);for(let i=0;i<se.json.meshes.length;i++){r+="<tr>";r+="<td>"+se.json.meshes[i].name+"</td>";r+="<td>";let e=0;let t="";for(var o=0;o<se.json.nodes.length;o++){if(se.json.nodes[o].mesh==i){e++;if(e==1){t=se.json.nodes[o].name}}}if(e>1)r+=e+" nodes ("+t+" ...)";else r+=t;r+="</td>";r+="<td>";for(var o=0;o<se.json.meshes[i].primitives.length;o++){if(se.json.meshes[i].primitives[o].material){r+=se.json.materials[se.json.meshes[i].primitives[o].material].name+" "}else r+="None"}r+="</td>";r+="<td>";let n=0;for(var o=0;o<se.json.meshes[i].primitives.length;o++){if(se.json.meshes[i].primitives[o].attributes.POSITION!=undefined){let e=parseInt(se.json.accessors[se.json.meshes[i].primitives[o].attributes.POSITION].count);n+=e;r+=""+e+"<br/>"}else r+="-<br/>"}if(se.json.meshes[i].primitives.length>0)r+="="+n;r+="</td>";r+='<td style="vertical-align:top;">';for(let e=0;e<se.json.meshes[i].primitives.length;e++){r+=Object.keys(se.json.meshes[i].primitives[e].attributes);r+=" <a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeGeom('"+se.json.meshes[i].name+"',"+e+')" class="treebutton">Geometry</a>';r+="<br/>"}r+="</td>";r+="</tr>";for(let t=0;t<se.json.meshes[i].primitives.length;t++){const m=se.json.accessors[se.json.meshes[i].primitives[t].indices];if(m){let e=m.bufferView;if(s.indexOf(e)==-1){s.push(e);if(se.json.bufferViews[e])a.meshes+=se.json.bufferViews[e].byteLength}}for(let e in se.json.meshes[i].primitives[t].attributes){const d=se.json.meshes[i].primitives[t].attributes[e];const g=se.json.accessors[d].bufferView;if(s.indexOf(g)==-1){s.push(g);if(se.json.bufferViews[g])a.meshes+=se.json.bufferViews[g].byteLength}}}}r+="</table>";let i=0;if(se.json.animations)i=se.json.animations.length;r+='<div id="groupAnims">Animations ('+i+")</div>";if(se.json.animations){r+='<table id="sectionAnim" class="table treetable">';r+="<tr>";r+="  <th>Name</th>";r+="  <th>Target node</th>";r+="  <th>Path</th>";r+="  <th>Interpolation</th>";r+="  <th>Keys</th>";r+="</tr>";a.animations=0;for(let n=0;n<se.json.animations.length;n++){for(let t=0;t<se.json.animations[n].samplers.length;t++){let e=se.json.accessors[se.json.animations[n].samplers[t].input].bufferView;if(s.indexOf(e)==-1){s.push(e);a.animations+=se.json.bufferViews[e].byteLength}e=se.json.accessors[se.json.animations[n].samplers[t].output].bufferView;if(s.indexOf(e)==-1){s.push(e);a.animations+=se.json.bufferViews[e].byteLength}}for(let e=0;e<se.json.animations[n].channels.length;e++){r+="<tr>";r+="  <td> Anim "+n+": "+se.json.animations[n].name+"</td>";r+="  <td>"+se.nodes[se.json.animations[n].channels[e].target.node].name+"</td>";r+="  <td>";r+=se.json.animations[n].channels[e].target.path+" ";r+="  </td>";const p=se.json.animations[n].channels[e].sampler;const _=se.json.animations[n].samplers[p];r+="  <td>"+_.interpolation+"</td>";r+="  <td>"+se.json.accessors[_.output].count;r+="&nbsp;&nbsp;<a onclick=\"gui.corePatch().getOpById('"+x.id+"').showAnim('"+n+"','"+e+'\')" class="icon icon-search"></a>';r+="</td>";r+="</tr>"}}r+="</table>"}else{}let l=0;if(se.json.images)l=se.json.images.length;r+='<div id="groupImages">Images ('+l+")</div>";if(se.json.images){r+='<table id="sectionImages" class="table treetable">';r+="<tr>";r+="  <th>name</th>";r+="  <th>type</th>";r+="  <th>func</th>";r+="</tr>";a.images=0;for(let t=0;t<se.json.images.length;t++){if(se.json.images[t].bufferView)a.images+=se.json.bufferViews[se.json.images[t].bufferView].byteLength;r+="<tr>";r+="<td>"+se.json.images[t].name+"</td>";r+="<td>"+se.json.images[t].mimeType+"</td>";r+="<td>";let e=se.json.images[t].name;if(e===undefined)e=se.json.images[t].bufferView;r+="<a onclick=\"gui.corePatch().getOpById('"+x.id+"').exposeTexture('"+e+'\')" class="treebutton">Expose</a>';r+="</td>";r+="<tr>"}r+="</table>"}let u=0;if(se.json.cameras)u=se.json.cameras.length;r+='<div id="groupCameras">Cameras ('+u+")</div>";if(se.json.cameras){r+='<table id="sectionCameras" class="table treetable">';r+="<tr>";r+="  <th>name</th>";r+="  <th>type</th>";r+="  <th>info</th>";r+="</tr>";for(let e=0;e<se.json.cameras.length;e++){r+="<tr>";r+="<td>"+se.json.cameras[e].name+"</td>";r+="<td>"+se.json.cameras[e].type+"</td>";r+="<td>";r+="yfov: "+Math.round(se.json.cameras[e].perspective.yfov*100)/100;r+=", ";r+="zfar: "+Math.round(se.json.cameras[e].perspective.zfar*100)/100;r+=", ";r+="znear: "+Math.round(se.json.cameras[e].perspective.znear*100)/100;r+="</td>";r+="<tr>"}r+="</table>"}let h=0;if(se.json.skins)h=se.json.skins.length;r+='<div id="groupSkins">Skins ('+h+")</div>";if(se.json.skins){r+='<table id="sectionSkins" class="table treetable">';r+="<tr>";r+="  <th>name</th>";r+="  <th></th>";r+="  <th>total joints</th>";r+="</tr>";for(let e=0;e<se.json.skins.length;e++){r+="<tr>";r+="<td>"+se.json.skins[e].name+"</td>";r+="<td>"+"</td>";r+="<td>"+se.json.skins[e].joints.length+"</td>";r+="<td>";r+="</td>";r+="<tr>"}r+="</table>"}let c=0;if(se.json.buffers)c=se.json.buffers[0].byteLength;r+='<div id="groupBinary">File Size Allocation ('+Math.round(c/1024)+"k )</div>";r+='<table id="sectionBinary" class="table treetable">';r+="<tr>";r+="  <th>name</th>";r+="  <th>size</th>";r+="  <th>%</th>";r+="</tr>";let f=c;for(let e in a){r+="<tr>";r+="<td>"+e+"</td>";r+="<td>"+P(a[e])+" </td>";r+="<td>"+Math.round(a[e]/c*100)+"% </td>";r+="<tr>";f-=a[e]}if(f!=0){r+="<tr>";r+="<td>unknown</td>";r+="<td>"+P(f)+" </td>";r+="<td>"+Math.round(f/c*100)+"% </td>";r+="<tr>"}r+="</table>";r+="</div>";v=new CABLES.UI.Tab("GLTF",{icon:"cube",infotext:"tab_gltf",padding:true,singleton:true});gui.mainTabs.addTab(v,true);v.addEventListener("onClose",b);v.html(r);CABLES.UI.Collapsable.setup(ele.byId("groupNodes"),ele.byId("sectionNodes"),false);CABLES.UI.Collapsable.setup(ele.byId("groupMaterials"),ele.byId("materialtable"),true);CABLES.UI.Collapsable.setup(ele.byId("groupAnims"),ele.byId("sectionAnim"),true);CABLES.UI.Collapsable.setup(ele.byId("groupMeshes"),ele.byId("meshestable"),true);CABLES.UI.Collapsable.setup(ele.byId("groupCameras"),ele.byId("sectionCameras"),true);CABLES.UI.Collapsable.setup(ele.byId("groupImages"),ele.byId("sectionImages"),true);CABLES.UI.Collapsable.setup(ele.byId("groupSkins"),ele.byId("sectionSkins"),true);CABLES.UI.Collapsable.setup(ele.byId("groupBinary"),ele.byId("sectionBinary"),true);gui.maintabPanel.show(true)}function P(e){if(e>1024)return Math.round(e/1024)+" kb";if(e>1024*500)return Math.round(e/1024)+" mb";else return e+" bytes"}const w=class{constructor(e){this._mod=null;this._node=e;this._lastTime=0;this._matArr=[];this._m=mat4.create();this._invBindMatrix=mat4.create()}renderFinish(e){e.popModelMatrix();this._mod.unbind()}renderStart(e,t){if(!this._mod){this._mod=new CGL.ShaderModifier(e,x.name+this._node.name);this._mod.addModule({priority:-2,name:"MODULE_VERTEX_POSITION",srcHeadVert:l.skin_head_vert||"",srcBodyVert:l.skin_vert||""});this._mod.addUniformVert("m4[]","MOD_boneMats",[]);const a=vec3.create()}const n=this._node.skin;const i=se.json.skins[n].joints.length*16;{if(this._matArr.length!=i)this._matArr.length=i;for(let e=0;e<se.json.skins[n].joints.length;e++){const r=e*16;const s=se.json.skins[n].joints[e];const o=se.nodes[s];for(let e=0;e<16;e++)this._invBindMatrix[e]=se.accBuffers[se.json.skins[n].inverseBindMatrices][r+e];mat4.mul(this._m,o.modelMatAbs(),this._invBindMatrix);for(let e=0;e<this._m.length;e++)this._matArr[r+e]=this._m[e]}this._mod.setUniformValue("MOD_boneMats",this._matArr)}this._mod.define("SKIN_NUM_BONES",se.json.skins[n].joints.length);this._mod.bind();e.pushModelMatrix();mat4.identity(e.mMatrix)}};const t=x.inString("data"),n=x.inTrigger("Render"),o=x.inUrl("glb File",[".glb"]),u=x.inBool("Draw",true),h=x.inDropDown("Camera",["None"],"None"),c=x.inString("Animation",""),f=x.inTriggerButton("Show Structure"),m=x.inSwitch("Center",["None","XYZ","XZ"],"XYZ"),d=x.inBool("Rescale",true),g=x.inFloat("Rescale Size",2.5),p=x.inFloat("Time"),_=x.inBool("Sync to timeline",false),D=x.inBool("Loop",true),U=x.inSwitch("Normals Format",["XYZ","X-ZY"],"XYZ"),R=x.inSwitch("Vertices Format",["XYZ","XZ-Y"],"XYZ"),V=x.inBool("Calc Normals",false),B=x.inObject("Materials"),G=x.inArray("Hide Nodes"),j=x.inBool("Use Material Properties",false),k=x.inBool("Active",true),F=x.outTrigger("Render Before"),X=x.outTrigger("Next"),z=x.outString("Generator"),H=x.outNumber("GLTF Version"),Y=x.outArray("GLTF Extensions Used"),W=x.outNumber("Anim Length",0),K=x.outNumber("Anim Time",0),Z=x.outObject("Json"),Q=x.outArray("Anims"),q=x.outArray("BoundingPoints"),J=x.outObject("Bounds"),$=x.outTrigger("Finished"),ee=x.outBool("Loading");x.setPortGroup("Timing",[p,_,D]);const te=true;const ne=x.patch.cgl;o.onChange=R.onChange=V.onChange=U.onChange=Ae;let ie=false;let ae=null;let re=[];let se=null;let oe=0;let le=0;let ue=true;let he=null;let ce=null;let fe=null;const me=vec3.create();let de=0;let ge=false;const pe=vec3.create();f.onTriggered=e;t.setUiAttribs({hideParam:true,hidePort:true});t.onChange=Te;G.onChange=Ee;c.onChange=ye;x.setPortGroup("Transform",[d,g,m]);m.onChange=ve;function _e(){const t=["None"];if(se){for(let e=0;e<se.nodes.length;e++){if(se.nodes[e].camera>=0){t.push(se.nodes[e].name)}}}h.uiAttribs.values=t}function ve(){ge=m.get()!="None";if(se&&se.bounds){pe.set(se.bounds.center);pe[0]=-pe[0];pe[1]=-pe[1];pe[2]=-pe[2];if(m.get()=="XZ")pe[1]=-se.bounds.minY}}d.onChange=function(){g.setUiAttribs({greyout:!d.get()})};B.onChange=function(){ue=true};x.onDelete=function(){b()};_.onChange=function(){p.setUiAttribs({greyout:_.get()})};h.onChange=be;function be(){ae=null;if(!se)return;for(let e=0;e<se.nodes.length;e++){if(se.nodes[e].name==h.get())ae=new a(se,se.nodes[e])}}n.onTriggered=function(){if(!ie)return;if(!k.get())return;if(_.get())le=x.patch.timer.getTime();else le=Math.max(0,p.get());if(D.get()){le%=oe;if(le<de)$.trigger()}else{if(oe>0&&le>=oe)$.trigger()}de=le;ne.pushModelMatrix();K.set(le||0);if(ie&&se&&se.bounds){if(d.get()){let e=g.get()/se.bounds.maxAxis;se.scale=e;vec3.set(me,e,e,e);mat4.scale(ne.mMatrix,ne.mMatrix,me)}if(ge){mat4.translate(ne.mMatrix,ne.mMatrix,pe)}}ne.frameStore.currentScene=se;F.trigger();if(ie){if(ue)Se();if(ae)ae.start(le);if(se){se.time=le;{if(se.bounds&&ne.shouldDrawHelpers(x)){if(CABLES.UI.renderHelper)ne.pushShader(CABLES.GL_MARKER.getDefaultShader(ne));else ne.pushShader(CABLES.GL_MARKER.getSelectedShader(ne));se.bounds.render(ne);ne.popShader()}if(u.get()){for(let e=0;e<se.nodes.length;e++)if(!se.nodes[e].isChild)se.nodes[e].render(ne)}else{for(let e=0;e<se.nodes.length;e++)if(!se.nodes[e].isChild)se.nodes[e].render(ne,false,true)}}}}X.trigger();ne.frameStore.currentScene=null;ne.popModelMatrix();if(ae)ae.end()};function xe(){if(!se){x.setUiError("nogltf","gltf not found");return}x.setUiError("nogltf",null);if(se.loadingMeshes>0){setTimeout(xe,100);return}se.timing.push("finishLoading()",Math.round(performance.now()-se.startTime));ue=true;W.set(oe);se.bounds=new CGL.BoundingBox;if(!se)x.setUiError("urlerror",'could not load gltf:<br/>"'+o.get()+'"',2);else x.setUiError("urlerror",null);se.timing.push("start calc bounds",Math.round(performance.now()-se.startTime));for(let e=0;e<se.nodes.length;e++){const t=se.nodes[e];t.updateMatrix();if(!t.isChild)t.calcBounds(se,null,se.bounds)}if(se.bounds)J.set(se.bounds);se.timing.push("calced bounds",Math.round(performance.now()-se.startTime));Ee();se.timing.push("hideNodesFromData",Math.round(performance.now()-se.startTime));if(v)e();se.timing.push("printinfo",Math.round(performance.now()-se.startTime));_e();be();q.set(re);if(se){if(o.get()&&!o.get().startsWith("data:")){x.setUiAttrib({extendTitle:CABLES.basename(o.get())})}se.loaded=Date.now()}if(se){for(let e=0;e<se.nodes.length;e++){if(!se.nodes[e].isChild){se.nodes[e].render(ne,false,true,true,false,true,0)}}for(let e=0;e<se.nodes.length;e++){const t=se.nodes[e];t.children=Ne(t.children)}}ve();ye();ee.set(false);ne.patch.loading.finished(ce);ce=null;x.setUiAttrib({accBuffersDelete:CABLES.basename(o.get())});if(se.accBuffersDelete){for(let e=0;e<se.accBuffersDelete.length;e++){se.accBuffers[se.accBuffersDelete[e]]=null}}ie=true}function Oe(e){if(!k.get())return;if(!ce)ce=ne.patch.loading.start("gltfScene",o.get());let t=o.get();let n=x.patch.getFilePath(String(o.get()));if(o.get()&&!o.get().startsWith("data:")){if(e)n+="?rnd="+CABLES.generateUUID()}ie=false;ee.set(true);fetch(n).then(e=>e.arrayBuffer()).then(e=>{if(o.get()!=t){ne.patch.loading.finished(ce);ce=null;return}re=[];oe=0;se=r(e);xe()});b();const i=new XMLHttpRequest;i.open("GET",n,true);i.responseType="arraybuffer";ne.patch.loading.addAssetLoadingTask(()=>{})}x.onFileChanged=function(e){se.accBuffersDelete[i];if(e&&e.length>3&&o.get()&&o.get().indexOf(e)>-1)Ae(true)};x.onFileChanged=function(e){if(o.get()&&o.get().indexOf(e)>-1){Ae(true)}};k.onChange=()=>{if(k.get())Ae();if(!k.get()){se=null}};function Ae(e){clearTimeout(he);he=setTimeout(function(){Oe(e)},30)}function Se(){if(!se)return;se.shaders={};if(B.links.length==1&&B.get()){const n=B.links[0].portOut.parent;const i=n.getPort("Shader");const a=n.getPort("Material Name");if(!i&&!a){const r=B.get();for(let t in r){console.log("matname",t);if(r[t]&&se.json.materials)for(let e=0;e<se.json.materials.length;e++){console.log("gltf.json.materials[i].name",se.json.materials[e].name);if(se.json.materials[e].name==t){if(se.shaders[e]){n.warn("double material assignment:",name)}se.shaders[e]=r[t];console.log("shader found!",se.shaders[e])}}}}}if(B.get()){for(let e=0;e<B.links.length;e++){const t=B.links[e].portOut.parent;const i=t.getPort("Shader");const a=t.getPort("Material Name");if(i&&a&&i.get()){const name=a.get();if(se.json.materials)for(let e=0;e<se.json.materials.length;e++)if(se.json.materials[e].name==name){if(se.shaders[e]){t.warn("double material assignment:",name)}se.shaders[e]=i.get()}}}}ue=false;if(v)e()}function Ce(){const t=G.get();if(!se||!fe||!fe.hiddenNodes)return;if(!t){return}for(let e=0;e<t.length;e++){const n=se.getNode(t[e]);if(n)n.hidden=true}}function Ee(){if(!fe)Te();if(!se)return;se.unHideAll();if(fe&&fe.hiddenNodes){for(const e in fe.hiddenNodes){const t=se.getNode(e);if(t)t.hidden=true;else x.verbose("node to be hidden not found",e,t)}}Ce()}function Te(){fe=t.get();if(!fe||fe==="")fe={};else fe=JSON.parse(fe);if(se)Ee();return fe}function Ie(){t.set(JSON.stringify(fe))}function ye(){if(se&&se.nodes){for(let e=0;e<se.nodes.length;e++){se.nodes[e].setAnimAction(c.get())}}}function Me(t,n){for(let e=0;e<se.nodes.length;e++){if(se.nodes[e].children.indexOf(n)>=0){t.push(se.nodes[e]);if(se.nodes[e].isChild)Me(t,e)}}}x.exposeTexture=function(e){const t=gui.corePatch().addOp("Ops.Gl.GLTF.GltfTexture");t.getPort("Name").set(e);Le(t,1);x.patch.link(x,X.name,t,"Render");gui.patchView.centerSelectOp(t.id,true);gui.patchView.testCollision(t)};x.exposeGeom=function(e,t){const n=gui.corePatch().addOp("Ops.Gl.GLTF.GltfGeometry");n.getPort("Name").set(e);n.getPort("Submesh").set(t);Le(n,1);x.patch.link(x,X.name,n,"Update");gui.patchView.centerSelectOp(n.id,true);gui.patchView.testCollision(n)};function Le(e,t){t=t||1;e.setUiAttrib({translate:{x:x.uiAttribs.translate.x,y:x.uiAttribs.translate.y+t*CABLES.GLUI.glUiConfig.newOpDistanceY}})}x.exposeNode=function(n,e,i){let t=e=="hierarchy";if(t){let a=[];for(let e=0;e<se.nodes.length;e++){if(se.nodes[e].name==n){let t=[];const r=se.nodes[e];Me(t,e);t=t.reverse();t.push(r,r);let n=X.name;let i=x;for(let e=0;e<t.length;e++){const s=gui.corePatch().addOp("Ops.Gl.GLTF.GltfNode_v2");s.getPort("Node Name").set(t[e].name);x.patch.link(i,n,s,"Render");Le(s,e);if(e==t.length-1){s.getPort("Transformation").set(false)}else{s.getPort("Draw Mesh").set(false);s.getPort("Draw Childs").set(false)}n="Next";i=s;a.push(s);gui.patchView.testCollision(s)}}}for(let e=0;e<a.length;e++){a[e].selectChilds()}}else{let t="Ops.Gl.GLTF.GltfNode_v2";if(i&&i.skin)t="Ops.Gl.GLTF.GltfSkin";if(e=="transform")t="Ops.Gl.GLTF.GltfNodeTransform_v2";gui.serverOps.loadOpLibs(t,()=>{let e=gui.corePatch().addOp(t);e.getPort("Node Name").set(n);Le(e);x.patch.link(x,X.name,e,"Render");gui.patchView.centerSelectOp(e.id,true);gui.patchView.testCollision(e)})}gui.closeModal()};x.assignMaterial=function(e){const t=gui.corePatch().addOp("Ops.Gl.GLTF.GltfSetMaterial");t.getPort("Material Name").set(e);x.patch.link(x,B.name,t,"Material");gui.patchView.centerSelectOp(t.id,true);Le(t);gui.patchView.testCollision(t);gui.closeModal()};x.toggleNodeVisibility=function(e){const t=se.getNode(e);t.hidden=!t.hidden;fe.hiddenNodes=fe.hiddenNodes||{};if(t)if(t.hidden)fe.hiddenNodes[e]=true;else delete fe.hiddenNodes[e];Ie()};x.showAnim=function(e,t){console.log("showanim",t);console.log(se.json.animations[e].channels[t]);const n=se.json.animations[e];const i=se.json.animations[e].channels[t];const a=se.nodes[i.target.node];const r=n.samplers[i.sampler];const s=se.json.accessors[r.input];const o=se.accBuffers[r.input];const l=se.json.accessors[r.output];const u=se.accBuffers[r.output];console.log({channel:i,sampler:r,bufferIn:o,bufferOut:u})};function Ne(n){const i={},a=[];for(let e=0,t=n.length;e<t;++e){if(!i.hasOwnProperty(n[e])){a.push(n[e]);i[n[e]]=1}}return a}};Ops.Gl.GLTF.GltfScene_v3.prototype=new CABLES.Op;CABLES.OPS["a9c59d94-8aea-4c20-ab5d-63ce46ecfa16"]={f:Ops.Gl.GLTF.GltfScene_v3,objName:"Ops.Gl.GLTF.GltfScene_v3"};Ops.Gl.TextureEffects.EdgeDetection_v4=function(){CABLES.Op.apply(this,arguments);const e=this;const t={edgedetect_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float amount;\nUNI float width;\nUNI float strength;\nUNI float texWidth;\nUNI float texHeight;\nUNI float mulColor;\n\nconst vec4 lumcoeff = vec4(0.299,0.587,0.114, 0.);\n\nvec3 desaturate(vec3 color)\n{\n    return vec3(dot(vec3(0.2126,0.7152,0.0722), color));\n}\n\n{{CGL.BLENDMODES3}}\n\nvoid main()\n{\n    // vec4 col=vec4(1.0,0.0,0.0,1.0);\n\n    // float pixelX=0.27/texWidth;\n    // float pixelY=0.27/texHeight;\n    float pixelX=(width+0.01)*4.0/texWidth;\n    float pixelY=(width+0.01)*4.0/texHeight;\n\nvec2 tc=texCoord;\n// #ifdef OFFSETPIXEL\n    tc.x+=1.0/texWidth*0.5;\n    tc.y+=1.0/texHeight*0.5;\n// #endif\n    // col=texture(tex,texCoord);\n\n    float count=1.0;\n    vec4 base=texture(tex,texCoord);\n\n\tvec4 horizEdge = vec4( 0.0 );\n\thorizEdge -= texture( tex, vec2( tc.x - pixelX, tc.y - pixelY ) ) * 1.0;\n\thorizEdge -= texture( tex, vec2( tc.x - pixelX, tc.y     ) ) * 2.0;\n\thorizEdge -= texture( tex, vec2( tc.x - pixelX, tc.y + pixelY ) ) * 1.0;\n\thorizEdge += texture( tex, vec2( tc.x + pixelX, tc.y - pixelY ) ) * 1.0;\n\thorizEdge += texture( tex, vec2( tc.x + pixelX, tc.y     ) ) * 2.0;\n\thorizEdge += texture( tex, vec2( tc.x + pixelX, tc.y + pixelY ) ) * 1.0;\n\tvec4 vertEdge = vec4( 0.0 );\n\tvertEdge -= texture( tex, vec2( tc.x - pixelX, tc.y - pixelY ) ) * 1.0;\n\tvertEdge -= texture( tex, vec2( tc.x    , tc.y - pixelY ) ) * 2.0;\n\tvertEdge -= texture( tex, vec2( tc.x + pixelX, tc.y - pixelY ) ) * 1.0;\n\tvertEdge += texture( tex, vec2( tc.x - pixelX, tc.y + pixelY ) ) * 1.0;\n\tvertEdge += texture( tex, vec2( tc.x    , tc.y + pixelY ) ) * 2.0;\n\tvertEdge += texture( tex, vec2( tc.x + pixelX, tc.y + pixelY ) ) * 1.0;\n\n\thorizEdge*=base.a;\n\tvertEdge*=base.a;\n\n\n\tvec3 edge = sqrt((horizEdge.rgb/count * horizEdge.rgb/count) + (vertEdge.rgb/count * vertEdge.rgb/count));\n\n    edge=desaturate(edge);\n    edge*=strength;\n\n    if(mulColor>0.0) edge*=texture( tex, texCoord ).rgb*mulColor*4.0;\n    edge=max(min(edge,1.0),0.0);\n\n    //blend section\n    vec4 col=vec4(edge,base.a);\n\n    outColor=cgl_blendPixel(base,col,amount*base.a);\n}\n\n"};const n=e.inTrigger("Render"),i=CGL.TextureEffect.AddBlendSelect(e,"Blend Mode","normal"),a=e.inValueSlider("Amount",1),r=e.inFloat("Strength",4),s=e.inValueSlider("Width",.1),o=e.inValueSlider("Mul Color",0),l=e.outTrigger("Trigger");const u=e.patch.cgl;const h=new CGL.Shader(u,e.name);h.setSource(h.getDefaultVertexShader(),t.edgedetect_frag);const c=new CGL.Uniform(h,"t","tex",0),f=new CGL.Uniform(h,"f","amount",a),m=new CGL.Uniform(h,"f","strength",r),d=new CGL.Uniform(h,"f","width",s),g=new CGL.Uniform(h,"f","texWidth",128),p=new CGL.Uniform(h,"f","texHeight",128),_=new CGL.Uniform(h,"f","mulColor",o);CGL.TextureEffect.setupBlending(e,h,i,a);n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e,3))return;u.pushShader(h);u.currentTextureEffect.bind();u.setTexture(0,u.currentTextureEffect.getCurrentSourceTexture().tex);g.setValue(u.currentTextureEffect.getCurrentSourceTexture().width);p.setValue(u.currentTextureEffect.getCurrentSourceTexture().height);u.currentTextureEffect.finish();u.popShader();l.trigger()}};Ops.Gl.TextureEffects.EdgeDetection_v4.prototype=new CABLES.Op;CABLES.OPS["0240e26e-b86d-43b2-8c72-6795bb86dc76"]={f:Ops.Gl.TextureEffects.EdgeDetection_v4,objName:"Ops.Gl.TextureEffects.EdgeDetection_v4"};Ops.Gl.Shader.MatCapMaterialNew_v3=function(){CABLES.Op.apply(this,arguments);const e=this;const t={matcap_frag:"{{MODULES_HEAD}}\n\n#ifdef HAS_TEXTURES\n    IN vec2 texCoord;\n#endif\n\nIN vec3 transformedNormal;\nIN vec3 viewSpacePosition;\n\nUNI vec4 inColor;\n\nUNI sampler2D texMatcap;\n\n#ifdef HAS_DIFFUSE_TEXTURE\n   UNI sampler2D texDiffuse;\n#endif\n\n#ifdef USE_SPECULAR_TEXTURE\n   UNI sampler2D texSpec;\n   UNI sampler2D texSpecMatCap;\n#endif\n\n#ifdef HAS_AO_TEXTURE\n    UNI sampler2D texAo;\n    UNI float aoIntensity;\n#endif\n\n#ifdef HAS_NORMAL_TEXTURE\n    IN vec3 vBiTangent;\n    IN vec3 vTangent;\n    IN mat3 normalMatrix;\n\n    UNI sampler2D texNormal;\n    UNI float normalMapIntensity;\n#endif\n\n#ifdef HAS_TEXTURE_OPACITY\n    UNI sampler2D texOpacity;\n#endif\n\n#ifdef CALC_SSNORMALS\n    IN vec3 eye_relative_pos;\n\n    // from https://www.enkisoftware.com/devlogpost-20150131-1-Normal_generation_in_the_pixel_shader\n    vec3 CalculateScreenSpaceNormals() {\n    \tvec3 dFdxPos = dFdx(eye_relative_pos);\n    \tvec3 dFdyPos = dFdy(eye_relative_pos);\n    \tvec3 screenSpaceNormal = normalize( cross(dFdxPos, dFdyPos));\n        return normalize(screenSpaceNormal);\n    }\n#endif\n\n// * taken & modified from https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderLib/meshmatcap_frag.glsl.js\nvec2 getMatCapUV(vec3 viewSpacePosition, vec3 normal) {\n    vec3 viewDir = normalize(-viewSpacePosition);\n\tvec3 x = normalize(vec3(viewDir.z, 0.0, - viewDir.x));\n\tvec3 y = normalize(cross(viewDir, x));\n\tvec2 uv = vec2(dot(x, normal), dot(y, normal)) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\treturn uv;\n}\n\nvoid main()\n{\n    vec3 viewSpaceNormal = normalize(transformedNormal);\n\n    #ifdef HAS_TEXTURES\n        vec2 texCoords = texCoord;\n        {{MODULE_BEGIN_FRAG}}\n    #endif\n\n\n    #ifdef CALC_SSNORMALS\n        viewSpaceNormal = CalculateScreenSpaceNormals();\n    #endif\n\n\n   #ifdef HAS_NORMAL_TEXTURE\n        vec3 normalFromMap = texture( texNormal, texCoord ).xyz * 2.0 - 1.0;\n        normalFromMap = normalize(normalFromMap);\n\n        vec3 tangent;\n        vec3 binormal;\n\n        #ifdef CALC_TANGENT\n            vec3 c1 = cross(normalFromMap, vec3(0.0, 0.0, 1.0));\n            vec3 c2 = cross(normalFromMap, vec3(0.0, 1.0, 0.0));\n\n            tangent = c1;\n            tangent = normalize(tangent);\n            binormal = cross(viewSpaceNormal, tangent);\n            binormal = normalize(binormal);\n        #endif\n\n        #ifndef CALC_TANGENT\n            tangent = normalize(normalMatrix * vTangent);\n            vec3 bitangent = normalize(normalMatrix * vBiTangent);\n            binormal = normalize(cross(viewSpaceNormal, bitangent));\n        #endif\n\n        normalFromMap = normalize(\n            tangent * normalFromMap.x\n            + binormal * normalFromMap.y\n            + viewSpaceNormal * normalFromMap.z\n        );\n\n        vec3 mixedNormal = normalize(viewSpaceNormal + normalFromMap * normalMapIntensity);\n\n        viewSpaceNormal = mixedNormal;\n    #endif\n\n    vec4 col = texture(texMatcap, getMatCapUV(viewSpacePosition, viewSpaceNormal));\n\n    #ifdef HAS_DIFFUSE_TEXTURE\n        col = col*texture(texDiffuse, texCoords);\n    #endif\n\n    col.rgb *= inColor.rgb;\n\n\n    #ifdef HAS_AO_TEXTURE\n        col = col\n            * mix(\n                vec4(1.0,1.0,1.0,1.0),\n                texture(texAo, texCoords),\n                aoIntensity\n            );\n    #endif\n\n    #ifdef USE_SPECULAR_TEXTURE\n        vec4 spec = texture(texSpecMatCap, getMatCapUV(viewSpacePosition, viewSpaceNormal));\n        spec *= texture(texSpec, texCoords);\n        col += spec;\n    #endif\n\n    col.a *= inColor.a;\n\n    #ifdef HAS_TEXTURE_OPACITY\n        #ifdef TRANSFORMALPHATEXCOORDS\n            texCoords=vec2(texCoord.s,1.0-texCoord.t);\n            texCoords.y = 1. - texCoords.y;\n        #endif\n        #ifdef ALPHA_MASK_ALPHA\n            col.a*=texture(texOpacity,texCoords).a;\n        #endif\n        #ifdef ALPHA_MASK_LUMI\n            col.a*=dot(vec3(0.2126,0.7152,0.0722), texture(texOpacity,texCoords).rgb);\n        #endif\n        #ifdef ALPHA_MASK_R\n            col.a*=texture(texOpacity,texCoords).r;\n        #endif\n        #ifdef ALPHA_MASK_G\n            col.a*=texture(texOpacity,texCoords).g;\n        #endif\n        #ifdef ALPHA_MASK_B\n            col.a*=texture(texOpacity,texCoords).b;\n        #endif\n\n        #ifdef DISCARDTRANS\n            if(col.a < 0.2) discard;\n        #endif\n    #endif\n\n    {{MODULE_COLOR}}\n\n    outColor = col;\n}",matcap_vert:"IN vec3 vPosition;\n\n#ifdef HAS_TEXTURES\n    IN vec2 attrTexCoord;\n#endif\n\nIN vec3 attrVertNormal;\nIN float attrVertIndex;\n\n#ifdef HAS_NORMAL_TEXTURE\n    IN vec3 attrTangent;\n    IN vec3 attrBiTangent;\n    OUT vec3 vBiTangent;\n    OUT vec3 vTangent;\n#endif\n\nUNI mat4 projMatrix;\nUNI mat4 modelMatrix;\nUNI mat4 viewMatrix;\nUNI vec3 camPos;\n\n#ifdef HAS_TEXTURES\n    UNI vec2 texOffset;\n    UNI vec2 texRepeat;\n    OUT vec2 texCoord;\n#endif\n\nOUT mat3 normalMatrix;\nOUT vec3 viewSpacePosition;\nOUT vec3 transformedNormal;\n\n{{MODULES_HEAD}}\n\n#ifdef CALC_SSNORMALS\n    // from https://www.enkisoftware.com/devlogpost-20150131-1-Normal_generation_in_the_pixel_shader\n    OUT vec3 eye_relative_pos;\n#endif\n\nmat3 transposeMat3(mat3 m) {\n    return mat3(m[0][0], m[1][0], m[2][0],\n        m[0][1], m[1][1], m[2][1],\n        m[0][2], m[1][2], m[2][2]);\n}\n\n mat3 inverseMat3(mat3 m) {\n    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\n    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\n    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\n\n    float b01 = a22 * a11 - a12 * a21;\n    float b11 = -a22 * a10 + a12 * a20;\n    float b21 = a21 * a10 - a11 * a20;\n\n    float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n        b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n        b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nvoid main()\n{\n    #ifdef HAS_TEXTURES\n        texCoord = texRepeat * vec2(attrTexCoord.x, attrTexCoord.y) + texOffset;\n        texCoord.y = 1. - texCoord.y;\n    #endif\n\n    mat4 mMatrix = modelMatrix;\n    mat4 mvMatrix;\n\n    #ifdef HAS_NORMAL_TEXTURE\n        vec3 tangent = attrTangent;\n        vec3 bitangent = attrBiTangent;\n        vTangent = attrTangent;\n        vBiTangent = attrBiTangent;\n    #endif\n\n    vec4 pos = vec4(vPosition, 1.);\n    vec3 norm = attrVertNormal;\n\n    {{MODULE_VERTEX_POSITION}}\n\n    mvMatrix = viewMatrix * mMatrix;\n    vec3 normal = norm;\n\n    normalMatrix = transposeMat3(inverseMat3(mat3(mvMatrix)));\n\n    vec3 fragPos = vec3((mvMatrix) * pos);\n    viewSpacePosition = normalize(fragPos);\n\n    #ifdef CALC_SSNORMALS\n        eye_relative_pos = -(vec3(viewMatrix * vec4(camPos, 1.)) - fragPos);\n    #endif\n\n    transformedNormal = normalize(mat3(normalMatrix) * normal);\n\n   gl_Position = projMatrix * mvMatrix * pos;\n\n}"};const n=e.patch.cgl;const i=e.inTrigger("Render"),a=e.inTexture("MatCap"),r=e.inTexture("Diffuse"),s=e.inTexture("Normal"),o=e.inTexture("Specular Mask"),l=e.inTexture("Specular MatCap"),u=e.inTexture("AO Texture"),h=e.inTexture("Opacity Texture"),c=e.inValueSlider("r",1),f=e.inValueSlider("g",1),m=e.inValueSlider("b",1),d=e.inValueSlider("Opacity",1),g=e.inValueSlider("AO Intensity",1),p=e.inFloatSlider("Normal Map Intensity",1),_=e.inValue("Repeat X",1),v=e.inValue("Repeat Y",1),b=e.inValue("Offset X",0),x=e.inValue("Offset Y",0),O=e.inValueBool("Screen Space Normals"),A=e.inValueBool("Calc normal tangents",true),S=e.inValueBool("Opacity TexCoords Transform",false),C=e.inValueBool("Discard Transparent Pixels"),E=e.outTrigger("Next"),T=e.outObject("Shader");c.setUiAttribs({colorPick:true});const I=e.inSwitch("Alpha Mask Source",["Luminance","R","G","B","A"],"Luminance");I.setUiAttribs({greyout:true});e.setPortGroup("Texture Opacity",[I,S,C]);e.setPortGroup("Texture Transforms",[g,p,_,v,b,x,A,O]);e.setPortGroup("Texture Maps",[r,s,o,l,u,h]);e.setPortGroup("Color",[c,f,m,d]);const y=new CGL.Shader(n,"MatCapMaterialNew3");const M=new CGL.Uniform(y,"f","opacity",d);y.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);y.setSource(t.matcap_vert,t.matcap_frag);T.set(y);const L=new CGL.Uniform(y,"t","texMatcap");let N=null;let P=null;let w=null;let D=null;let U=null;let R=null;const V=new CGL.Uniform(y,"2f","texOffset",b,x);const B=new CGL.Uniform(y,"2f","texRepeat",_,v);const G=new CGL.Uniform(y,"f","aoIntensity",g);const j=new CGL.Uniform(y,"4f","inColor",c,f,m,d);A.onChange=k;k();function k(){if(A.get())y.define("CALC_TANGENT");else y.removeDefine("CALC_TANGENT")}O.onChange=function(){if(O.get()){if(n.glVersion<2){n.gl.getExtension("OES_standard_derivatives");y.enableExtension("GL_OES_standard_derivatives")}y.define("CALC_SSNORMALS")}else y.removeDefine("CALC_SSNORMALS")};a.onChange=F;function F(){if(!n.defaultMatcapTex3){const i=new Uint8Array(256*4);for(let n=0;n<16;n++){for(let t=0;t<16;t++){let e=t*16;e*=Math.min(1,(n+t/3)/8);i[(n+t*16)*4+0]=i[(n+t*16)*4+1]=i[(n+t*16)*4+2]=e;i[(n+t*16)*4+3]=255}}n.defaultMatcapTex3=new CGL.Texture(n);n.defaultMatcapTex3.initFromData(i,16,16,CGL.Texture.FILTER_LINEAR,CGL.Texture.WRAP_REPEAT)}}r.onChange=function(){if(r.get()){if(N!==null)return;y.define("HAS_DIFFUSE_TEXTURE");y.removeUniform("texDiffuse");N=new CGL.Uniform(y,"t","texDiffuse")}else{y.removeDefine("HAS_DIFFUSE_TEXTURE");y.removeUniform("texDiffuse");N=null}};s.onChange=function(){if(s.get()){if(P!==null)return;y.define("HAS_NORMAL_TEXTURE");y.removeUniform("texNormal");P=new CGL.Uniform(y,"t","texNormal");if(!w)w=new CGL.Uniform(y,"f","normalMapIntensity",p)}else{y.removeDefine("HAS_NORMAL_TEXTURE");y.removeUniform("texNormal");P=null}};u.onChange=function(){if(u.get()){if(R!==null)return;y.define("HAS_AO_TEXTURE");y.removeUniform("texAo");R=new CGL.Uniform(y,"t","texAo")}else{y.removeDefine("HAS_AO_TEXTURE");y.removeUniform("texAo");R=null}};o.onChange=l.onChange=function(){if(o.get()&&l.get()){if(D!==null)return;y.define("USE_SPECULAR_TEXTURE");y.removeUniform("texSpec");y.removeUniform("texSpecMatCap");D=new CGL.Uniform(y,"t","texSpec");U=new CGL.Uniform(y,"t","texSpecMatCap")}else{y.removeDefine("USE_SPECULAR_TEXTURE");y.removeUniform("texSpec");y.removeUniform("texSpecMatCap");D=null;U=null}};function X(){if(I.get()=="Alpha Channel")y.define("ALPHA_MASK_ALPHA");else y.removeDefine("ALPHA_MASK_ALPHA");if(I.get()=="Luminance")y.define("ALPHA_MASK_LUMI");else y.removeDefine("ALPHA_MASK_LUMI");if(I.get()=="R")y.define("ALPHA_MASK_R");else y.removeDefine("ALPHA_MASK_R");if(I.get()=="G")y.define("ALPHA_MASK_G");else y.removeDefine("ALPHA_MASK_G");if(I.get()=="B")y.define("ALPHA_MASK_B");else y.removeDefine("ALPHA_MASK_B")}I.onChange=X;h.onChange=H;let z=null;function H(){if(h.get()){if(z!==null)return;y.removeUniform("texOpacity");y.define("HAS_TEXTURE_OPACITY");if(!z)z=new CGL.Uniform(y,"t","texOpacity");I.setUiAttribs({greyout:false});C.setUiAttribs({greyout:false});S.setUiAttribs({greyout:false})}else{y.removeUniform("texOpacity");y.removeDefine("HAS_TEXTURE_OPACITY");z=null;I.setUiAttribs({greyout:true});C.setUiAttribs({greyout:true});S.setUiAttribs({greyout:true})}X()}C.onChange=function(){if(C.get())y.define("DISCARDTRANS");else y.removeDefine("DISCARDTRANS")};S.onChange=function(){if(S.get())y.define("TRANSFORMALPHATEXCOORDS");else y.removeDefine("TRANSFORMALPHATEXCOORDS")};function Y(){if(o.get()&&!l.get()){e.setUiError("specNoMatCapSpec","You connected a specular texture but have not connected a specular matcap texture. You need to connect both texture inputs for the specular input to work.",1);e.setUiError("noSpecMatCapSpec",null)}else if(!o.get()&&l.get()){e.setUiError("noSpecMatCapSpec","You connected a specular matcap texture but have not connected a specular texture. You need to connect both texture inputs for the specular input to work.",1);e.setUiError("specNoMatCapSpec",null)}else if(o.get()&&l.get()){e.setUiError("specNoMatCapSpec",null);e.setUiError("noSpecMatCapSpec",null)}else{e.setUiError("specNoMatCapSpec",null);e.setUiError("noSpecMatCapSpec",null)}}i.onTriggered=function(){Y();if(!n.defaultMatcapTex3)F();y.popTextures();const e=a.get()||n.defaultMatcapTex3;y.pushTexture(L,e.tex);if(r.get()&&N)y.pushTexture(N,r.get().tex);if(s.get()&&P)y.pushTexture(P,s.get().tex);if(o.get()&&D)y.pushTexture(D,o.get().tex);if(l.get()&&U)y.pushTexture(U,l.get().tex);if(u.get()&&R)y.pushTexture(R,u.get().tex);if(h.get()&&z)y.pushTexture(z,h.get().tex);n.pushShader(y);E.trigger();n.popShader()}};Ops.Gl.Shader.MatCapMaterialNew_v3.prototype=new CABLES.Op;CABLES.OPS["c1dd6e76-61b4-471a-b8d1-f550a5a9a4f4"]={f:Ops.Gl.Shader.MatCapMaterialNew_v3,objName:"Ops.Gl.Shader.MatCapMaterialNew_v3"};Ops.Gl.TextureEffects.DrawImage_v3=function(){CABLES.Op.apply(this,arguments);const i=this;const e={drawimage_frag:"#ifdef HAS_TEXTURES\n    IN vec2 texCoord;\n    UNI sampler2D tex;\n    UNI sampler2D image;\n#endif\n\n#ifdef TEX_TRANSFORM\n    IN mat3 transform;\n#endif\n// UNI float rotate;\n\n{{CGL.BLENDMODES}}\n\n#ifdef HAS_TEXTUREALPHA\n   UNI sampler2D imageAlpha;\n#endif\n\nUNI float amount;\n\n#ifdef ASPECT_RATIO\n    UNI float aspectTex;\n    UNI float aspectPos;\n#endif\n\nvoid main()\n{\n    vec4 blendRGBA=vec4(0.0,0.0,0.0,1.0);\n\n    #ifdef HAS_TEXTURES\n        vec2 tc=texCoord;\n\n        #ifdef TEX_FLIP_X\n            tc.x=1.0-tc.x;\n        #endif\n        #ifdef TEX_FLIP_Y\n            tc.y=1.0-tc.y;\n        #endif\n\n        #ifdef ASPECT_RATIO\n            #ifdef ASPECT_AXIS_X\n                tc.y=(1.0-aspectPos)-(((1.0-aspectPos)-tc.y)*aspectTex);\n            #endif\n            #ifdef ASPECT_AXIS_Y\n                tc.x=(1.0-aspectPos)-(((1.0-aspectPos)-tc.x)/aspectTex);\n            #endif\n        #endif\n\n        #ifdef TEX_TRANSFORM\n            vec3 coordinates=vec3(tc.x, tc.y,1.0);\n            tc=(transform * coordinates ).xy;\n        #endif\n\n        blendRGBA=texture(image,tc);\n\n        vec3 blend=blendRGBA.rgb;\n        vec4 baseRGBA=texture(tex,texCoord);\n        vec3 base=baseRGBA.rgb;\n\n\n        #ifdef PREMUL\n            blend.rgb = (blend.rgb) + (base.rgb * (1.0 - blendRGBA.a));\n        #endif\n\n        vec3 colNew=_blend(base,blend);\n\n\n\n\n        #ifdef REMOVE_ALPHA_SRC\n            blendRGBA.a=1.0;\n        #endif\n\n        #ifdef HAS_TEXTUREALPHA\n            vec4 colImgAlpha=texture(imageAlpha,tc);\n            float colImgAlphaAlpha=colImgAlpha.a;\n\n            #ifdef ALPHA_FROM_LUMINANCE\n                vec3 gray = vec3(dot(vec3(0.2126,0.7152,0.0722), colImgAlpha.rgb ));\n                colImgAlphaAlpha=(gray.r+gray.g+gray.b)/3.0;\n            #endif\n\n            #ifdef ALPHA_FROM_INV_UMINANCE\n                vec3 gray = vec3(dot(vec3(0.2126,0.7152,0.0722), colImgAlpha.rgb ));\n                colImgAlphaAlpha=1.0-(gray.r+gray.g+gray.b)/3.0;\n            #endif\n\n            #ifdef INVERT_ALPHA\n                colImgAlphaAlpha=clamp(colImgAlphaAlpha,0.0,1.0);\n                colImgAlphaAlpha=1.0-colImgAlphaAlpha;\n            #endif\n\n            blendRGBA.a=colImgAlphaAlpha*blendRGBA.a;\n        #endif\n    #endif\n\n    float am=amount;\n\n    #ifdef CLIP_REPEAT\n        if(tc.y>1.0 || tc.y<0.0 || tc.x>1.0 || tc.x<0.0)\n        {\n            // colNew.rgb=vec3(0.0);\n            am=0.0;\n        }\n    #endif\n\n    #ifdef ASPECT_RATIO\n        #ifdef ASPECT_CROP\n            if(tc.y>1.0 || tc.y<0.0 || tc.x>1.0 || tc.x<0.0)\n            {\n                colNew.rgb=base.rgb;\n                am=0.0;\n            }\n\n        #endif\n    #endif\n\n\n\n    #ifndef PREMUL\n        blendRGBA.rgb=mix(colNew,base,1.0-(am*blendRGBA.a));\n        blendRGBA.a=clamp(baseRGBA.a+(blendRGBA.a*am),0.,1.);\n    #endif\n\n    #ifdef PREMUL\n        // premultiply\n        // blendRGBA.rgb = (blendRGBA.rgb) + (baseRGBA.rgb * (1.0 - blendRGBA.a));\n        blendRGBA=vec4(\n            mix(colNew.rgb,base,1.0-(am*blendRGBA.a)),\n            blendRGBA.a*am+baseRGBA.a\n            );\n    #endif\n\n    #ifdef ALPHA_MASK\n    blendRGBA.a=baseRGBA.a;\n    #endif\n\n    outColor=blendRGBA;\n}\n\n\n\n\n\n\n\n",drawimage_vert:"IN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN vec3 attrVertNormal;\n\nUNI mat4 projMatrix;\nUNI mat4 mvMatrix;\n\nOUT vec2 texCoord;\n// OUT vec3 norm;\n\n#ifdef TEX_TRANSFORM\n    UNI float posX;\n    UNI float posY;\n    UNI float scaleX;\n    UNI float scaleY;\n    UNI float rotate;\n    OUT mat3 transform;\n#endif\n\nvoid main()\n{\n   texCoord=attrTexCoord;\n//   norm=attrVertNormal;\n\n   #ifdef TEX_TRANSFORM\n        vec3 coordinates=vec3(attrTexCoord.x, attrTexCoord.y,1.0);\n        float angle = radians( rotate );\n        vec2 scale= vec2(scaleX,scaleY);\n        vec2 translate= vec2(posX,posY);\n\n        transform = mat3(   scale.x * cos( angle ), scale.x * sin( angle ), 0.0,\n            - scale.y * sin( angle ), scale.y * cos( angle ), 0.0,\n            - 0.5 * scale.x * cos( angle ) + 0.5 * scale.y * sin( angle ) - 0.5 * translate.x*2.0 + 0.5,  - 0.5 * scale.x * sin( angle ) - 0.5 * scale.y * cos( angle ) - 0.5 * translate.y*2.0 + 0.5, 1.0);\n   #endif\n\n   gl_Position = projMatrix * mvMatrix * vec4(vPosition,  1.0);\n}\n"};const t=i.inTrigger("render"),n=CGL.TextureEffect.AddBlendSelect(i,"blendMode"),a=i.inValueSlider("amount",1),r=i.inTexture("Image"),s=i.inValueBool("Premultiplied",false),o=i.inValueBool("Alpha Mask",false),l=i.inValueBool("removeAlphaSrc",false),u=i.inTexture("Mask"),h=i.inValueSelect("Mask Src",["alpha channel","luminance","luminance inv"],"luminance"),c=i.inValueBool("Invert alpha channel"),f=i.inValueBool("Aspect Ratio",false),m=i.inValueSelect("Stretch Axis",["X","Y"],"X"),d=i.inValueSlider("Position",0),g=i.inValueBool("Crop",false),p=i.outTrigger("trigger");n.set("normal");const _=i.patch.cgl;const v=new CGL.Shader(_,"drawimage");u.onLinkChanged=b;i.setPortGroup("Mask",[u,h,c]);i.setPortGroup("Aspect Ratio",[f,d,g,m]);function b(){if(u.isLinked()){l.setUiAttribs({greyout:true});h.setUiAttribs({greyout:false});c.setUiAttribs({greyout:false})}else{l.setUiAttribs({greyout:false});h.setUiAttribs({greyout:true});c.setUiAttribs({greyout:true})}}i.toWorkPortsNeedToBeLinked(r);v.setSource(e.drawimage_vert,e.drawimage_frag);const x=new CGL.Uniform(v,"t","tex",0),O=new CGL.Uniform(v,"t","image",1),A=new CGL.Uniform(v,"t","imageAlpha",2),S=new CGL.Uniform(v,"f","aspectTex",1),C=new CGL.Uniform(v,"f","aspectPos",d);f.onChange=g.onChange=m.onChange=E;function E(){v.removeDefine("ASPECT_AXIS_X");v.removeDefine("ASPECT_AXIS_Y");v.removeDefine("ASPECT_CROP");d.setUiAttribs({greyout:!f.get()});g.setUiAttribs({greyout:!f.get()});m.setUiAttribs({greyout:!f.get()});if(f.get()){v.define("ASPECT_RATIO");if(g.get())v.define("ASPECT_CROP");if(m.get()=="X")v.define("ASPECT_AXIS_X");if(m.get()=="Y")v.define("ASPECT_AXIS_Y")}else{v.removeDefine("ASPECT_RATIO");if(g.get())v.define("ASPECT_CROP");if(m.get()=="X")v.define("ASPECT_AXIS_X");if(m.get()=="Y")v.define("ASPECT_AXIS_Y")}}h.set("alpha channel");const T=i.inValueBool("flip x");const I=i.inValueBool("flip y");let y=i.inValueBool("Transform");let M=i.inValueSlider("Scale X",1);let L=i.inValueSlider("Scale Y",1);let N=i.inValue("Position X",0);let P=i.inValue("Position Y",0);let w=i.inValue("Rotation",0);const D=i.inValueBool("Clip Repeat",false);const U=new CGL.Uniform(v,"f","scaleX",M);const R=new CGL.Uniform(v,"f","scaleY",L);const V=new CGL.Uniform(v,"f","posX",N);const B=new CGL.Uniform(v,"f","posY",P);const G=new CGL.Uniform(v,"f","rotate",w);y.onChange=j;function j(){v.toggleDefine("TEX_TRANSFORM",y.get());M.setUiAttribs({greyout:!y.get()});L.setUiAttribs({greyout:!y.get()});N.setUiAttribs({greyout:!y.get()});P.setUiAttribs({greyout:!y.get()});w.setUiAttribs({greyout:!y.get()})}CGL.TextureEffect.setupBlending(i,v,n,a);const k=new CGL.Uniform(v,"f","amount",a);t.onTriggered=X;D.onChange=u.onChange=s.onChange=o.onChange=c.onChange=I.onChange=T.onChange=l.onChange=h.onChange=F;j();b();E();F();function F(){v.toggleDefine("REMOVE_ALPHA_SRC",l.get());v.toggleDefine("ALPHA_MASK",o.get());v.toggleDefine("CLIP_REPEAT",D.get());v.toggleDefine("HAS_TEXTUREALPHA",u.get()&&u.get().tex);v.toggleDefine("TEX_FLIP_X",T.get());v.toggleDefine("TEX_FLIP_Y",I.get());v.toggleDefine("INVERT_ALPHA",c.get());v.toggleDefine("ALPHA_FROM_LUMINANCE",h.get()=="luminance");v.toggleDefine("ALPHA_FROM_INV_UMINANCE",h.get()=="luminance_inv");v.toggleDefine("PREMUL",s.get())}function X(){if(!CGL.TextureEffect.checkOpInEffect(i))return;const e=r.get();if(e&&e.tex&&a.get()>0){_.pushShader(v);_.currentTextureEffect.bind();const t=_.currentTextureEffect.getCurrentSourceTexture();_.setTexture(0,t.tex);if(t&&e){if(e.textureType!=t.textureType&&(e.textureType!=CGL.Texture.TYPE_FLOAT||t.textureType!=CGL.Texture.TYPE_FLOAT))i.setUiError("textypediff","Drawing 32bit texture into an 8 bit can result in data/precision loss",1);else i.setUiError("textypediff",null)}const n=1/(_.currentTextureEffect.getWidth()/_.currentTextureEffect.getHeight())*(e.width/e.height);S.setValue(n);_.setTexture(1,e.tex);if(u.get()&&u.get().tex){_.setTexture(2,u.get().tex)}_.pushBlendMode(CGL.BLEND_NONE,true);_.currentTextureEffect.finish();_.popBlendMode();_.popShader()}p.trigger()}};Ops.Gl.TextureEffects.DrawImage_v3.prototype=new CABLES.Op;CABLES.OPS["8f6b2f15-fcb0-4597-90c0-e5173f2969fe"]={f:Ops.Gl.TextureEffects.DrawImage_v3,objName:"Ops.Gl.TextureEffects.DrawImage_v3"};Ops.Gl.Render2Texture=function(){CABLES.Op.apply(this,arguments);const a=this;const e={};const r=a.patch.cgl;const t=a.inTrigger("render"),n=a.inValueBool("use viewport size",true),i=a.inValueInt("texture width",512),s=a.inValueInt("texture height",512),o=a.inBool("Auto Aspect",false),l=a.inSwitch("filter",["nearest","linear","mipmap"],"linear"),u=a.inSwitch("Wrap",["Clamp","Repeat","Mirror"],"Repeat"),h=a.inSwitch("MSAA",["none","2x","4x","8x"],"none"),c=a.outTrigger("trigger"),f=a.outTexture("texture"),m=a.outTexture("textureDepth"),d=a.inValueBool("HDR"),g=a.inValueBool("Depth",true),p=a.inValueBool("Clear",true);let _=null;let v=true;f.set(CGL.Texture.getEmptyTexture(r));a.setPortGroup("Size",[n,i,s,o]);const b=[0,0,0,0];d.setUiAttribs({title:"Pixelformat Float 32bit"});d.onChange=g.onChange=p.onChange=l.onChange=u.onChange=h.onChange=O;n.onChange=x;t.onTriggered=a.preRender=A;x();function x(){i.setUiAttribs({greyout:n.get()});s.setUiAttribs({greyout:n.get()});o.setUiAttribs({greyout:n.get()})}function O(){v=true}function A(){const e=r.getViewPort();b[0]=e[0];b[1]=e[1];b[2]=e[2];b[3]=e[3];if(!_||v){if(_)_.delete();let n=CGL.Texture.WRAP_REPEAT;if(u.get()=="Clamp")n=CGL.Texture.WRAP_CLAMP_TO_EDGE;else if(u.get()=="Mirror")n=CGL.Texture.WRAP_MIRRORED_REPEAT;let i=CGL.Texture.FILTER_NEAREST;if(l.get()=="nearest")i=CGL.Texture.FILTER_NEAREST;else if(l.get()=="linear")i=CGL.Texture.FILTER_LINEAR;else if(l.get()=="mipmap")i=CGL.Texture.FILTER_MIPMAP;if(d.get()&&l.get()=="mipmap")a.setUiError("fpmipmap","Don't use mipmap and HDR at the same time, many systems do not support this.");else a.setUiError("fpmipmap",null);if(r.glVersion>=2){let e=true;let t=4;if(h.get()=="none"){t=0;e=false}if(h.get()=="2x")t=2;if(h.get()=="4x")t=4;if(h.get()=="8x")t=8;_=new CGL.Framebuffer2(r,8,8,{name:"render2texture "+a.id,isFloatingPointTexture:d.get(),multisampling:e,wrap:n,filter:i,depth:g.get(),multisamplingSamples:t,clear:p.get()})}else{_=new CGL.Framebuffer(r,8,8,{isFloatingPointTexture:d.get(),clear:p.get()})}m.set(_.getTextureDepth());v=false}if(n.get()){i.set(r.getViewPort()[2]);s.set(r.getViewPort()[3])}if(_.getWidth()!=Math.ceil(i.get())||_.getHeight()!=Math.ceil(s.get())){_.setSize(Math.max(1,Math.ceil(i.get())),Math.max(1,Math.ceil(s.get())))}_.renderStart(r);if(o.get())mat4.perspective(r.pMatrix,45,i.get()/s.get(),.1,1e3);c.trigger();_.renderEnd(r);r.setViewPort(b[0],b[1],b[2],b[3]);f.set(CGL.Texture.getEmptyTexture(a.patch.cgl));f.set(_.getTextureColor())}};Ops.Gl.Render2Texture.prototype=new CABLES.Op;CABLES.OPS["d01fa820-396c-4cb5-9d78-6b14762852af"]={f:Ops.Gl.Render2Texture,objName:"Ops.Gl.Render2Texture"};Ops.Gl.ShaderEffects.DeformArea=function(){CABLES.Op.apply(this,arguments);const e=this;const t={deformarea_vert:"vec4 MOD_deform(vec4 pos,mat4 mMatrix)\n{\n    vec4 modelPos=pos;\n\n    #ifdef MOD_WORLDSPACE\n       modelPos=mMatrix*pos;\n    #endif\n\n    vec3 forcePos=vec3(MOD_x,MOD_y,MOD_z);\n    vec3 vecToOrigin=modelPos.xyz-forcePos;\n    float dist=abs(length(vecToOrigin));\n    float distAlpha = (MOD_size - dist) / MOD_size;\n\n    if(MOD_size > dist)\n    {\n        vec3 vecNormal=normalize(vecToOrigin);\n\n        if(MOD_smooth>0.0) distAlpha=smoothstep(0.0,MOD_size,distAlpha);\n\n        vec3 velocity = (vecNormal * distAlpha * MOD_strength );\n\n        pos.xyz+=velocity*0.1;\n    }\n\n    return pos;\n\n}\n"};const n=e.inTrigger("render"),i=e.outTrigger("trigger"),a=e.inValue("Size",1),r=e.inValue("Strength",.5),s=e.inValueBool("Smooth",true),o=e.inValueBool("WorldSpace",false),l=e.inValue("x"),u=e.inValue("y"),h=e.inValue("z");const c=e.patch.cgl;o.onChange=g;const f=t.deformarea_vert;const m="".endl()+"pos=MOD_deform(pos,mMatrix);".endl();const d=new CGL.ShaderModifier(c,e.name);d.addModule({title:e.name,name:"MODULE_VERTEX_POSITION",srcHeadVert:t.deformarea_vert,srcBodyVert:m});d.addUniformVert("f","MOD_size",a);d.addUniformVert("f","MOD_strength",r);d.addUniformVert("f","MOD_smooth",s);d.addUniformVert("f","MOD_x",l);d.addUniformVert("f","MOD_y",u);d.addUniformVert("f","MOD_z",h);n.onTriggered=function(){if(CABLES.UI){if(e.isCurrentUiOp())gui.setTransformGizmo({posX:l,posY:u,posZ:h});if(c.shouldDrawHelpers(e)){c.pushModelMatrix();mat4.translate(c.mMatrix,c.mMatrix,[l.get(),u.get(),h.get()]);CABLES.GL_MARKER.drawSphere(e,a.get());c.popModelMatrix()}}d.bind();i.trigger();d.unbind()};function g(){d.toggleDefine("MOD_WORLDSPACE",o.get())}};Ops.Gl.ShaderEffects.DeformArea.prototype=new CABLES.Op;CABLES.OPS["6c40cfcb-75c8-4c64-bc13-c37faaea73df"]={f:Ops.Gl.ShaderEffects.DeformArea,objName:"Ops.Gl.ShaderEffects.DeformArea"};Ops.Gl.ShaderEffects.PerlinAreaDeform=function(){CABLES.Op.apply(this,arguments);const e=this;const t={perlin_deformer_vert:'\nUNI bool MOD_smooth;\nUNI float MOD_x,MOD_y,MOD_z;\nUNI float MOD_strength;\nUNI float MOD_size;\nUNI float MOD_scale;\nUNI float MOD_scrollx;\nUNI float MOD_scrolly;\nUNI float MOD_scrollz;\n\n    \n\nfloat Interpolation_C2( float x ) { return x * x * x * (x * (x * 6.0 - 15.0) + 10.0); }   //  6x^5-15x^4+10x^3\t( Quintic Curve.  As used by Perlin in Improved Noise.  http://mrl.nyu.edu/~perlin/paper445.pdf )\nvec2 Interpolation_C2( vec2 x ) { return x * x * x * (x * (x * 6.0 - 15.0) + 10.0); }\nvec3 Interpolation_C2( vec3 x ) { return x * x * x * (x * (x * 6.0 - 15.0) + 10.0); }\nvec4 Interpolation_C2( vec4 x ) { return x * x * x * (x * (x * 6.0 - 15.0) + 10.0); }\nvec4 Interpolation_C2_InterpAndDeriv( vec2 x ) { return x.xyxy * x.xyxy * ( x.xyxy * ( x.xyxy * ( x.xyxy * vec2( 6.0, 0.0 ).xxyy + vec2( -15.0, 30.0 ).xxyy ) + vec2( 10.0, -60.0 ).xxyy ) + vec2( 0.0, 30.0 ).xxyy ); }\nvec3 Interpolation_C2_Deriv( vec3 x ) { return x * x * (x * (x * 30.0 - 60.0) + 30.0); }\n\n\nvoid FAST32_hash_3D( \tvec3 gridcell,\n                        out vec4 lowz_hash_0,\n                        out vec4 lowz_hash_1,\n                        out vec4 lowz_hash_2,\n                        out vec4 highz_hash_0,\n                        out vec4 highz_hash_1,\n                        out vec4 highz_hash_2\t)\t\t//\tgenerates 3 random numbers for each of the 8 cell corners\n{\n    //    gridcell is assumed to be an integer coordinate\n\n    //\tTODO: \tthese constants need tweaked to find the best possible noise.\n    //\t\t\tprobably requires some kind of brute force computational searching or something....\n    const vec2 OFFSET = vec2( 50.0, 161.0 );\n    const float DOMAIN = 69.0;\n    const vec3 SOMELARGEFLOATS = vec3( 635.298681, 682.357502, 668.926525 );\n    const vec3 ZINC = vec3( 48.500388, 65.294118, 63.934599 );\n\n    //\ttruncate the domain\n    gridcell.xyz = gridcell.xyz - floor(gridcell.xyz * ( 1.0 / DOMAIN )) * DOMAIN;\n    vec3 gridcell_inc1 = step( gridcell, vec3( DOMAIN - 1.5 ) ) * ( gridcell + 1.0 );\n\n    //\tcalculate the noise\n    vec4 P = vec4( gridcell.xy, gridcell_inc1.xy ) + OFFSET.xyxy;\n    P *= P;\n    P = P.xzxz * P.yyww;\n    vec3 lowz_mod = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + gridcell.zzz * ZINC.xyz ) );\n    vec3 highz_mod = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + gridcell_inc1.zzz * ZINC.xyz ) );\n    lowz_hash_0 = fract( P * lowz_mod.xxxx );\n    highz_hash_0 = fract( P * highz_mod.xxxx );\n    lowz_hash_1 = fract( P * lowz_mod.yyyy );\n    highz_hash_1 = fract( P * highz_mod.yyyy );\n    lowz_hash_2 = fract( P * lowz_mod.zzzz );\n    highz_hash_2 = fract( P * highz_mod.zzzz );\n}\n\n//\n//\tPerlin Noise 3D  ( gradient noise )\n//\tReturn value range of -1.0->1.0\n//\thttp://briansharpe.files.wordpress.com/2011/11/perlinsample.jpg\n//\nfloat Perlin3D( vec3 P )\n{\n    //\testablish our grid cell and unit position\n    vec3 Pi = floor(P);\n    vec3 Pf = P - Pi;\n    vec3 Pf_min1 = Pf - 1.0;\n\n#if 1\n    //\n    //\tclassic noise.\n    //\trequires 3 random values per point.  with an efficent hash function will run faster than improved noise\n    //\n\n    //\tcalculate the hash.\n    //\t( various hashing methods listed in order of speed )\n    vec4 hashx0, hashy0, hashz0, hashx1, hashy1, hashz1;\n    FAST32_hash_3D( Pi, hashx0, hashy0, hashz0, hashx1, hashy1, hashz1 );\n    //SGPP_hash_3D( Pi, hashx0, hashy0, hashz0, hashx1, hashy1, hashz1 );\n\n    //\tcalculate the gradients\n    vec4 grad_x0 = hashx0 - 0.49999;\n    vec4 grad_y0 = hashy0 - 0.49999;\n    vec4 grad_z0 = hashz0 - 0.49999;\n    vec4 grad_x1 = hashx1 - 0.49999;\n    vec4 grad_y1 = hashy1 - 0.49999;\n    vec4 grad_z1 = hashz1 - 0.49999;\n    vec4 grad_results_0 = inversesqrt( grad_x0 * grad_x0 + grad_y0 * grad_y0 + grad_z0 * grad_z0 ) * ( vec2( Pf.x, Pf_min1.x ).xyxy * grad_x0 + vec2( Pf.y, Pf_min1.y ).xxyy * grad_y0 + Pf.zzzz * grad_z0 );\n    vec4 grad_results_1 = inversesqrt( grad_x1 * grad_x1 + grad_y1 * grad_y1 + grad_z1 * grad_z1 ) * ( vec2( Pf.x, Pf_min1.x ).xyxy * grad_x1 + vec2( Pf.y, Pf_min1.y ).xxyy * grad_y1 + Pf_min1.zzzz * grad_z1 );\n\n#if 1\n    //\tClassic Perlin Interpolation\n    vec3 blend = Interpolation_C2( Pf );\n    vec4 res0 = mix( grad_results_0, grad_results_1, blend.z );\n    vec4 blend2 = vec4( blend.xy, vec2( 1.0 - blend.xy ) );\n    float final = dot( res0, blend2.zxzx * blend2.wwyy );\n    final *= 1.1547005383792515290182975610039;\t\t//\t(optionally) scale things to a strict -1.0->1.0 range    *= 1.0/sqrt(0.75)\n    return final;\n#else\n    //\tClassic Perlin Surflet\n    //\thttp://briansharpe.wordpress.com/2012/03/09/modifications-to-classic-perlin-noise/\n    Pf *= Pf;\n    Pf_min1 *= Pf_min1;\n    vec4 vecs_len_sq = vec4( Pf.x, Pf_min1.x, Pf.x, Pf_min1.x ) + vec4( Pf.yy, Pf_min1.yy );\n    float final = dot( Falloff_Xsq_C2( min( vec4( 1.0 ), vecs_len_sq + Pf.zzzz ) ), grad_results_0 ) + dot( Falloff_Xsq_C2( min( vec4( 1.0 ), vecs_len_sq + Pf_min1.zzzz ) ), grad_results_1 );\n    final *= 2.3703703703703703703703703703704;\t\t//\t(optionally) scale things to a strict -1.0->1.0 range    *= 1.0/cube(0.75)\n    return final;\n#endif\n\n#else\n    //\n    //\timproved noise.\n    //\trequires 1 random value per point.  Will run faster than classic noise if a slow hashing function is used\n    //\n\n    //\tcalculate the hash.\n    //\t( various hashing methods listed in order of speed )\n    vec4 hash_lowz, hash_highz;\n    FAST32_hash_3D( Pi, hash_lowz, hash_highz );\n    //BBS_hash_3D( Pi, hash_lowz, hash_highz );\n    //SGPP_hash_3D( Pi, hash_lowz, hash_highz );\n\n    //\n    //\t"improved" noise using 8 corner gradients.  Faster than the 12 mid-edge point method.\n    //\tKen mentions using diagonals like this can cause "clumping", but we\'ll live with that.\n    //\t[1,1,1]  [-1,1,1]  [1,-1,1]  [-1,-1,1]\n    //\t[1,1,-1] [-1,1,-1] [1,-1,-1] [-1,-1,-1]\n    //\n    hash_lowz -= 0.5;\n    vec4 grad_results_0_0 = vec2( Pf.x, Pf_min1.x ).xyxy * sign( hash_lowz );\n    hash_lowz = abs( hash_lowz ) - 0.25;\n    vec4 grad_results_0_1 = vec2( Pf.y, Pf_min1.y ).xxyy * sign( hash_lowz );\n    vec4 grad_results_0_2 = Pf.zzzz * sign( abs( hash_lowz ) - 0.125 );\n    vec4 grad_results_0 = grad_results_0_0 + grad_results_0_1 + grad_results_0_2;\n\n    hash_highz -= 0.5;\n    vec4 grad_results_1_0 = vec2( Pf.x, Pf_min1.x ).xyxy * sign( hash_highz );\n    hash_highz = abs( hash_highz ) - 0.25;\n    vec4 grad_results_1_1 = vec2( Pf.y, Pf_min1.y ).xxyy * sign( hash_highz );\n    vec4 grad_results_1_2 = Pf_min1.zzzz * sign( abs( hash_highz ) - 0.125 );\n    vec4 grad_results_1 = grad_results_1_0 + grad_results_1_1 + grad_results_1_2;\n\n    //\tblend the gradients and return\n    vec3 blend = Interpolation_C2( Pf );\n    vec4 res0 = mix( grad_results_0, grad_results_1, blend.z );\n    vec4 blend2 = vec4( blend.xy, vec2( 1.0 - blend.xy ) );\n    return dot( res0, blend2.zxzx * blend2.wwyy ) * (2.0 / 3.0);\t//\t(optionally) mult by (2.0/3.0) to scale to a strict -1.0->1.0 range\n#endif\n}\n\nvec3 MOD_deform(vec3 pos)\n{\n    // vec3 MOD_pos=vec3();\n    vec3 modelPos=pos;\n    vec3 forcePos=vec3(MOD_x,MOD_y,MOD_z);\n    \n\n    vec3 vecToOrigin=modelPos-forcePos;\n    float dist=abs(length(vecToOrigin));\n    float distAlpha = (MOD_size - dist) / MOD_size;\n\n    if(MOD_smooth) distAlpha=smoothstep(0.0,MOD_size,distAlpha);\n\n    \n    vec3 ppos=vec3(pos*MOD_scale);\n    ppos.x+=MOD_scrollx;\n    ppos.y+=MOD_scrolly;\n    ppos.z+=MOD_scrollz;\n    \n    float p=Perlin3D(ppos)*MOD_strength*distAlpha;\n    \n    vec3 pnorm=normalize(pos.xyz);\n    \n    pos.x+=p*pnorm.x;\n    pos.y+=p*pnorm.y;\n    pos.z+=p*pnorm.z;\n\n    return pos;\n}\n\n\nvec3 MOD_calcNormal(vec3 pos)\n{\n    float theta = .0001; \n    vec3 vecTangent = normalize(cross(pos, vec3(1.0, 0.0, 0.0))\n     + cross(pos, vec3(0.0, 1.0, 0.0)));\n    vec3 vecBitangent = normalize(cross(vecTangent, pos));\n    vec3 ptTangentSample = MOD_deform(normalize(pos + theta * normalize(vecTangent)));\n    vec3 ptBitangentSample = MOD_deform(normalize(pos + theta * normalize(vecBitangent)));\n\n    return normalize(cross(ptTangentSample - pos, ptBitangentSample - pos));\n}\n',perlin_deformer_body_vert:"\nvec3 MOD_newPos;\n#ifndef MOD_WORLDSPACE\n   MOD_newPos=MOD_deform(pos.xyz);\n   norm=MOD_calcNormal(pos.xyz);\n#endif\n\n#ifdef MOD_WORLDSPACE\n   MOD_newPos=MOD_deform( (mMatrix*pos).xyz );\n#endif\n\n#ifdef MOD_DO_X\n    pos.x=MOD_newPos.x;\n#endif\n#ifdef MOD_DO_Y\n    pos.y=MOD_newPos.y;\n#endif\n#ifdef MOD_DO_Z\n    pos.z=MOD_newPos.z;\n#endif\n\n"};var n=e.patch.cgl;e.render=e.addInPort(new CABLES.Port(this,"render",CABLES.OP_PORT_TYPE_FUNCTION));e.trigger=e.addOutPort(new CABLES.Port(this,"trigger",CABLES.OP_PORT_TYPE_FUNCTION));var i=e.inValue("Scale",1);var a=e.inValue("Size",1);var r=e.inValue("Strength",1);var s=e.inValueBool("Smooth",true);var o=e.inValue("x");var l=e.inValue("y");var u=e.inValue("z");var h=e.inValue("Scroll X");var c=e.inValue("Scroll Y");var f=e.inValue("Scroll Z");var m=e.inValueBool("Deform X",true);var d=e.inValueBool("Deform Y",true);var g=e.inValueBool("Deform Z",true);var p=null;var _=e.inValueBool("WorldSpace");var v=t.perlin_deformer_vert;m.onChange=S;d.onChange=S;g.onChange=S;var b=t.perlin_deformer_body_vert;var x=null;function O(){if(p&&x)p.removeModule(x);p=null}e.render.onLinkChanged=O;_.onChange=A;function A(){if(!p)return;if(_.get())p.define(x.prefix+"WORLDSPACE");else p.removeDefine(x.prefix+"WORLDSPACE")}function S(){if(!p)return;p.removeDefine(x.prefix+"DO_X");p.removeDefine(x.prefix+"DO_Y");p.removeDefine(x.prefix+"DO_Z");if(m.get())p.define(x.prefix+"DO_X");if(d.get())p.define(x.prefix+"DO_Y");if(g.get())p.define(x.prefix+"DO_Z")}e.render.onTriggered=function(){if(!n.getShader()){e.trigger.trigger();return}if(n.shouldDrawHelpers(e)){n.pushModelMatrix();mat4.translate(n.mMatrix,n.mMatrix,[o.get(),l.get(),u.get()]);CABLES.GL_MARKER.drawSphere(e,a.get());n.popModelMatrix()}if(e.isCurrentUiOp())gui.setTransformGizmo({posX:o,posY:l,posZ:u});if(n.getShader()!=p){if(p)O();p=n.getShader();x=p.addModule({title:e.objName,name:"MODULE_VERTEX_POSITION",srcHeadVert:v,srcBodyVert:b});a.uniform=new CGL.Uniform(p,"f",x.prefix+"size",a);r.uniform=new CGL.Uniform(p,"f",x.prefix+"strength",r);s.uniform=new CGL.Uniform(p,"f",x.prefix+"smooth",s);i.uniform=new CGL.Uniform(p,"f",x.prefix+"scale",i);h.uniform=new CGL.Uniform(p,"f",x.prefix+"scrollx",h);c.uniform=new CGL.Uniform(p,"f",x.prefix+"scrolly",c);f.uniform=new CGL.Uniform(p,"f",x.prefix+"scrollz",f);o.uniform=new CGL.Uniform(p,"f",x.prefix+"x",o);l.uniform=new CGL.Uniform(p,"f",x.prefix+"y",l);u.uniform=new CGL.Uniform(p,"f",x.prefix+"z",u);A();S()}if(!p)return;e.trigger.trigger()}};Ops.Gl.ShaderEffects.PerlinAreaDeform.prototype=new CABLES.Op;CABLES.OPS["8118b7a9-2ba7-4607-8fd1-8525d6fcf0d6"]={f:Ops.Gl.ShaderEffects.PerlinAreaDeform,objName:"Ops.Gl.ShaderEffects.PerlinAreaDeform"};Ops.Gl.Meshes.Sphere_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const O=Math.PI*2,A=e.patch.cgl,n=e.inTrigger("render"),S=e.inValue("radius",.5),C=e.inValue("stacks",32),E=e.inValue("slices",32),T=e.inValueSlider("Filloffset",1),i=e.inValueBool("Render",true),a=e.outTrigger("trigger"),I=e.outObject("geometry",null,"geometry"),y=vec3.fromValues(0,1,0),M=vec3.fromValues(1,0,0);let L=new CGL.Geometry("Sphere"),N=vec3.create(),P=vec3.create(),w=true,D;function r(){const e=Math.max(C.get(),2),t=Math.max(E.get(),3),n=Math.min(Math.max(T.get()*e,1),e),i=S.get();let a=[],r=[],s=[],o=[],l=[],u=[],h,c,f,m,d,g,p,_,v,b,x;for(b=p=0;b<e+1;b++){v=(b/e-.5)*Math.PI;c=Math.sin(v);g=Math.cos(v);for(x=t;x>=0;x--){_=x/t*O;h=Math.cos(_)*g;f=Math.sin(_)*g;a.push(h*i,c*i,f*i);r.push(x/t,b/(e+1));m=Math.sqrt(h*h+c*c+f*f);s.push(N[0]=h/m,N[1]=c/m,N[2]=f/m);if(c==m)d=M;else d=y;vec3.cross(P,N,d);vec3.normalize(P,P);Array.prototype.push.apply(o,P);vec3.cross(P,P,N);Array.prototype.push.apply(l,P)}if(b==0||b>n)continue;for(x=0;x<t;x++,p++){u.push(p,p+1,p+t+1,p+1,p+t+2,p+t+1)}p++}L.clear();L.vertices=a;L.texCoords=r;L.vertexNormals=s;L.tangents=o;L.biTangents=l;L.verticesIndices=u;I.set(null);I.set(L);if(!D)D=new CGL.Mesh(A,L);else D.setGeom(L);w=false}n.onTriggered=function(){if(w)r();if(i.get())D.render(A.getShader());a.trigger()};C.onChange=E.onChange=T.onChange=S.onChange=function(){w=true};e.onDelete=function(){if(D)D.dispose()}};Ops.Gl.Meshes.Sphere_v2.prototype=new CABLES.Op;CABLES.OPS["450b4d68-2278-4d9f-9849-0abdfa37ef69"]={f:Ops.Gl.Meshes.Sphere_v2,objName:"Ops.Gl.Meshes.Sphere_v2"};Ops.Anim.RandomAnim=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("exe"),i=e.inValue("min",0),a=e.inValue("max",1),r=e.inValue("random seed",0),s=e.inValue("duration",.5),o=e.inValue("pause between",0),l=e.outTrigger("Next"),u=e.outValue("result"),h=e.outTrigger("Looped");const c=new CABLES.Anim;c.createPort(e,"easing",p);e.setPortGroup("Timing",[s,o]);e.setPortGroup("Value",[i,a,r]);e.toWorkPortsNeedToBeLinked(n);let f=0;i.onChange=a.onChange=o.onChange=r.onChange=s.onChange=d;let m=true;function d(){m=true}function g(){const e=i.get();return Math.seededRandom()*(a.get()-e)+e}function p(){Math.randomSeed=r.get()+f*100;_(g());m=false}function _(e){c.clear();c.setValue(CABLES.now()/1e3,e);if(o.get()!==0)c.setValue(CABLES.now()/1e3+o.get(),e);c.setValue(s.get()+CABLES.now()/1e3+o.get(),g())}n.onTriggered=v;function v(){if(m)p();const e=CABLES.now()/1e3;const t=c.getValue(e);if(c.hasEnded(e)){f++;c.clear();_(t);h.trigger()}u.set(t);l.trigger()}};Ops.Anim.RandomAnim.prototype=new CABLES.Op;CABLES.OPS["2d2e5f0e-b69f-4789-9a48-1ee6ade5049a"]={f:Ops.Anim.RandomAnim,objName:"Ops.Anim.RandomAnim"};Ops.Value.Number=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueFloat("value"),i=e.outNumber("result");n.onChange=a;function a(){i.set(Number(n.get()))}};Ops.Value.Number.prototype=new CABLES.Op;CABLES.OPS["8fb2bb5d-665a-4d0a-8079-12710ae453be"]={f:Ops.Value.Number,objName:"Ops.Value.Number"};Ops.Math.Multiply=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueFloat("number1",1);const i=e.inValueFloat("number2",2);const a=e.outValue("result");n.onChange=i.onChange=r;r();function r(){const e=n.get();const t=i.get();a.set(e*t)}};Ops.Math.Multiply.prototype=new CABLES.Op;CABLES.OPS["1bbdae06-fbb2-489b-9bcc-36c9d65bd441"]={f:Ops.Math.Multiply,objName:"Ops.Math.Multiply"};Ops.Gl.Texture_v2=function(){CABLES.Op.apply(this,arguments);const a=this;const e={};const r=a.inUrl("File",[".jpg",".png",".webp",".jpeg",".avif"]),t=a.inSwitch("Filter",["nearest","linear","mipmap"]),n=a.inValueSelect("Wrap",["repeat","mirrored repeat","clamp to edge"],"clamp to edge"),i=a.inSwitch("Anisotropic",[0,1,2,4,8,16],0),s=a.inValueBool("Flip",false),o=a.inValueBool("Pre Multiplied Alpha",false),l=a.inValueBool("Active",true),u=a.inBool("Save Memory",true),h=a.outTexture("Texture"),c=a.outNumber("Width"),f=a.outNumber("Height"),m=a.outNumber("Aspect Ratio"),d=a.outNumber("Loaded",false),g=a.outNumber("Loading",false);a.setPortGroup("Size",[c,f]);o.setUiAttribs({hidePort:true});a.toWorkPortsNeedToBeLinked(h);const p=a.patch.cgl;let _=null;let v=null;let b=null;let x=CGL.Texture.FILTER_MIPMAP;let O=CGL.Texture.WRAP_REPEAT;let A=0;let S=0;r.onChange=s.onChange=function(){E()};i.onChange=t.onChange=I;n.onChange=y;o.onChange=function(){E()};t.set("mipmap");n.set("repeat");h.set(CGL.Texture.getEmptyTexture(p));l.onChange=function(){if(l.get()){if(_!=r.get()||!b)E();else h.set(b)}else{h.set(CGL.Texture.getEmptyTexture(p));c.set(CGL.Texture.getEmptyTexture(p).width);f.set(CGL.Texture.getEmptyTexture(p).height);if(b)b.delete();b=null}};const C=function(){const e=CGL.Texture.getTempTexture(p);h.set(e)};function E(e){clearTimeout(S);S=setTimeout(function(){T(e)},30)}function T(e){if(!l.get())return;if(!v)v=p.patch.loading.start("textureOp",r.get());let t=a.patch.getFilePath(String(r.get()));if(e)t+="?rnd="+CABLES.uuid();if(String(r.get()).indexOf("data:")==0)t=r.get();let n=false;if(_!=r.get())n=true;_=r.get();if(r.get()&&r.get().length>1){d.set(false);g.set(true);const i=r.get();a.setUiAttrib({extendTitle:CABLES.basename(t)});if(n)a.refreshParams();p.patch.loading.addAssetLoadingTask(()=>{a.setUiError("urlerror",null);CGL.Texture.load(p,t,function(e,t){if(r.get()!=i){p.patch.loading.finished(v);v=null;return}if(e){C();a.setUiError("urlerror",'could not load texture:<br/>"'+r.get()+'"',2);p.patch.loading.finished(v);return}h.set(t);c.set(t.width);f.set(t.height);m.set(t.width/t.height);if(!t.isPowerOfTwo())a.setUiError("npot","Texture dimensions not power of two! - Texture filtering will not work in WebGL 1.",0);else a.setUiError("npot",null);if(b)b.delete();b=t;h.set(null);h.set(b);g.set(false);d.set(true);if(u.get())b.image=null;p.patch.loading.finished(v)},{anisotropic:A,wrap:O,flip:s.get(),unpackAlpha:o.get(),filter:x})})}else{p.patch.loading.finished(v);C()}}function I(){if(t.get()=="nearest")x=CGL.Texture.FILTER_NEAREST;else if(t.get()=="linear")x=CGL.Texture.FILTER_LINEAR;else if(t.get()=="mipmap")x=CGL.Texture.FILTER_MIPMAP;else if(t.get()=="Anisotropic")x=CGL.Texture.FILTER_ANISOTROPIC;A=parseFloat(i.get());E()}function y(){if(n.get()=="repeat")O=CGL.Texture.WRAP_REPEAT;if(n.get()=="mirrored repeat")O=CGL.Texture.WRAP_MIRRORED_REPEAT;if(n.get()=="clamp to edge")O=CGL.Texture.WRAP_CLAMP_TO_EDGE;E()}a.onFileChanged=function(e){if(r.get()&&r.get().indexOf(e)>-1){h.set(CGL.Texture.getEmptyTexture(a.patch.cgl));h.set(CGL.Texture.getTempTexture(p));T(true)}}};Ops.Gl.Texture_v2.prototype=new CABLES.Op;CABLES.OPS["790f3702-9833-464e-8e37-6f0f813f7e16"]={f:Ops.Gl.Texture_v2,objName:"Ops.Gl.Texture_v2"};Ops.Gl.TextureEffects.FXAA=function(){CABLES.Op.apply(this,arguments);const e=this;const t={fxaa_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float FXAA_SPAN_MAX;\nUNI float FXAA_REDUCE_MUL;\nUNI float FXAA_REDUCE_MIN;\nUNI float width;\nUNI float height;\n\nvec4 getColorFXAA(vec2 coord)\n{\n    vec2 invtexsize=vec2(1.0/width,1.0/height);\n\n    float step=1.0;\n\n    vec3 rgbNW = texture(tex, coord.xy + (vec2(-step, -step)*invtexsize )).xyz;\n    vec3 rgbNE = texture(tex, coord.xy + (vec2(+step, -step)*invtexsize )).xyz;\n    vec3 rgbSW = texture(tex, coord.xy + (vec2(-step, +step)*invtexsize )).xyz;\n    vec3 rgbSE = texture(tex, coord.xy + (vec2(+step, +step)*invtexsize )).xyz;\n    vec3 rgbM  = texture(tex, coord.xy).xyz;\n\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM  = dot( rgbM, luma);\n\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) * (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n\n    float rcpDirMin = 1.0/(min(abs(dir.x), abs(dir.y)) + dirReduce);\n\n    dir = min(vec2(FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\n          max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX), dir * rcpDirMin))*invtexsize ;\n\n    vec3 rgbA = (1.0/2.0) * (\n                texture(tex, coord.xy + dir * (1.0/3.0 - 0.5)).xyz +\n                texture(tex, coord.xy + dir * (2.0/3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * (1.0/2.0) + (1.0/4.0) * (\n                texture(tex, coord.xy + dir * (0.0/3.0 - 0.5)).xyz +\n                texture(tex, coord.xy + dir * (3.0/3.0 - 0.5)).xyz);\n    float lumaB = dot(rgbB, luma);\n\n    vec4 color=texture(tex,coord).rgba;\n\n    if((lumaB < lumaMin) || (lumaB > lumaMax)){\n      color.xyz=rgbA;\n    } else {\n      color.xyz=rgbB;\n    }\n    return color;\n}\n\nvoid main()\n{\n   vec4 col=vec4(1.0,0.0,0.0,1.0);\n   outColor= getColorFXAA(texCoord);\n}"};let n=e.inTrigger("render");let i=e.outTrigger("trigger");let a=e.inValueSelect("span",[0,2,4,8,16,32,64]);let r=e.inValueFloat("reduceMin");let s=e.inValueFloat("reduceMul");let o=e.inValueBool("use viewport size",true);let l=e.inValueInt("width");let u=e.inValueInt("height");let h=e.patch.cgl;let c=new CGL.Shader(h,e.name);c.setSource(c.getDefaultVertexShader(),t.fxaa_frag);let f=new CGL.Uniform(c,"t","tex",0);n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;h.pushShader(c);if(h.getViewPort()[2]!=l.get()||h.getViewPort()[3]!=u.get()){v()}h.currentTextureEffect.bind();h.setTexture(0,h.currentTextureEffect.getCurrentSourceTexture().tex);h.currentTextureEffect.finish();h.popShader();i.trigger()};let m=new CGL.Uniform(c,"f","FXAA_SPAN_MAX",0);let d=new CGL.Uniform(c,"f","FXAA_REDUCE_MUL",0);let g=new CGL.Uniform(c,"f","FXAA_REDUCE_MIN",0);a.onChange=function(){m.setValue(parseInt(a.get(),10))};let p=new CGL.Uniform(c,"f","width",0);let _=new CGL.Uniform(c,"f","height",0);function v(){if(o.get()){let e=h.getViewPort()[2];let t=h.getViewPort()[3];p.setValue(e);_.setValue(t)}else{p.setValue(l.get());_.setValue(u.get())}}l.onChange=v;u.onChange=v;o.onChange=v;e.onResize=v;a.set(8);s.onChange=function(){d.setValue(1/s.get())};r.onChange=function(){g.setValue(1/r.get())};s.set(8);r.set(128)};Ops.Gl.TextureEffects.FXAA.prototype=new CABLES.Op;CABLES.OPS["3e679c17-f050-4bc8-bfe5-5b9190e7ce40"]={f:Ops.Gl.TextureEffects.FXAA,objName:"Ops.Gl.TextureEffects.FXAA"};Ops.Vars.VarSetNumber_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueFloat("Value",0);e.varName=e.inDropDown("Variable",[],"",true);new CABLES.VarSetOpWrapper(e,"number",n,e.varName)};Ops.Vars.VarSetNumber_v2.prototype=new CABLES.Op;CABLES.OPS["b5249226-6095-4828-8a1c-080654e192fa"]={f:Ops.Vars.VarSetNumber_v2,objName:"Ops.Vars.VarSetNumber_v2"};Ops.Vars.VarGetNumber_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};var n=e.outValue("Value");e.varName=e.inValueSelect("Variable",[],"",true);new CABLES.VarGetOpWrapper(e,"number",e.varName,n)};Ops.Vars.VarGetNumber_v2.prototype=new CABLES.Op;CABLES.OPS["421f5b52-c0fa-47c4-8b7a-012b9e1c864a"]={f:Ops.Vars.VarGetNumber_v2,objName:"Ops.Vars.VarGetNumber_v2"};Ops.Gl.TextureEffects.Vibrance=function(){CABLES.Op.apply(this,arguments);const e=this;const t={vibrance_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float amount;\n\nconst vec4 lumcoeff = vec4(0.299,0.587,0.114, 0.);\n\nvoid main()\n{\n   vec4 col=vec4(1.0,0.0,0.0,1.0);\n   col=texture(tex,texCoord);\n\n   float luma = dot(col, lumcoeff);\n   vec4 mask = (col - vec4(luma));\n   mask = clamp(mask, 0.0, 1.0);\n   float lumaMask = dot(lumcoeff, mask);\n   lumaMask = 1.0 - lumaMask;\n   vec4 vibrance = mix(vec4(luma), col, 1.0 + amount * lumaMask);\n   outColor= vibrance;\n}"};const n=e.inTrigger("Render");const i=e.outTrigger("Trigger");const a=e.inValue("amount",2);const r=e.patch.cgl;const s=new CGL.Shader(r,e.name);s.setSource(s.getDefaultVertexShader(),t.vibrance_frag);const o=new CGL.Uniform(s,"t","tex",0);const l=new CGL.Uniform(s,"f","amount",a);n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;r.pushShader(s);r.currentTextureEffect.bind();r.setTexture(0,r.currentTextureEffect.getCurrentSourceTexture().tex);r.currentTextureEffect.finish();r.popShader();i.trigger()}};Ops.Gl.TextureEffects.Vibrance.prototype=new CABLES.Op;CABLES.OPS["9c71c980-e439-4397-9c2b-c2ae085eaed9"]={f:Ops.Gl.TextureEffects.Vibrance,objName:"Ops.Gl.TextureEffects.Vibrance"};Ops.Anim.SimpleAnim=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("exe"),i=e.inTriggerButton("reset"),a=e.inTriggerButton("rewind"),r=e.inValueFloat("start",0),s=e.inValueFloat("end",1),o=e.inValueFloat("duration",.5),l=e.inValueBool("loop"),u=e.inValueBool("Wait for Reset",true),h=e.outTrigger("Next"),c=e.outValue("result"),f=e.outValue("finished"),m=e.outTrigger("Finished Trigger");const d=new CABLES.Anim;var g=false;d.createPort(e,"easing",_);var p=-1;l.onChange=_;_();o.onChange=_;function _(){if(d.keys.length!=3){d.setValue(0,0);d.setValue(1,0);d.setValue(2,0)}d.keys[0].time=CABLES.now()/1e3;d.keys[0].value=r.get();if(d.defaultEasing!=p)d.keys[0].setEasing(d.defaultEasing);d.keys[1].time=o.get()+CABLES.now()/1e3;d.keys[1].value=s.get();if(d.defaultEasing!=p)d.keys[1].setEasing(d.defaultEasing);d.loop=l.get();if(d.loop){d.keys[2].time=2*o.get()+CABLES.now()/1e3;d.keys[2].value=r.get();if(d.defaultEasing!=p)d.keys[2].setEasing(d.defaultEasing)}else{d.keys[2].time=d.keys[1].time;d.keys[2].value=d.keys[1].value;if(d.defaultEasing!=p)d.keys[2].setEasing(d.defaultEasing)}f.set(false);p=d.defaultEasing}i.onTriggered=function(){g=true;_()};a.onTriggered=function(){d.keys[0].time=CABLES.now()/1e3;d.keys[0].value=r.get();d.keys[1].time=CABLES.now()/1e3;d.keys[1].value=r.get();d.keys[2].time=CABLES.now()/1e3;d.keys[2].value=r.get();c.set(r.get())};n.onTriggered=function(){if(u.get()&&!g){c.set(r.get());return}var e=CABLES.now()/1e3;var t=d.getValue(e);c.set(t);if(d.hasEnded(e)){if(!f.get())m.trigger();f.set(true)}h.trigger()}};Ops.Anim.SimpleAnim.prototype=new CABLES.Op;CABLES.OPS["5b244b6e-c505-4743-b2cc-8119ef720028"]={f:Ops.Anim.SimpleAnim,objName:"Ops.Anim.SimpleAnim"};Ops.Math.Abs=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValue("number");const i=e.outValue("result");n.onChange=function(){i.set(Math.abs(n.get()))}};Ops.Math.Abs.prototype=new CABLES.Op;CABLES.OPS["6b5af21d-065f-44d2-9442-8b7a254753f6"]={f:Ops.Math.Abs,objName:"Ops.Math.Abs"};Ops.Trigger.IfEqualsThen=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("exe");var i=e.inValue("Value 1",0);var a=e.inValue("Value 2",0);var r=e.addOutPort(new CABLES.Port(e,"then",CABLES.OP_PORT_TYPE_FUNCTION));var s=e.addOutPort(new CABLES.Port(e,"else",CABLES.OP_PORT_TYPE_FUNCTION));function o(){if(i.get()==a.get()){r.trigger()}else{s.trigger()}}n.onTriggered=o};Ops.Trigger.IfEqualsThen.prototype=new CABLES.Op;CABLES.OPS["e8196d70-d0a6-470a-9448-a7ac0c0e956e"]={f:Ops.Trigger.IfEqualsThen,objName:"Ops.Trigger.IfEqualsThen"};Ops.Math.Math=function(){CABLES.Op.apply(this,arguments);const t=this;const e={};const n=t.inFloat("number 0",0),i=t.inFloat("number 1",0),a=t.inSwitch("math mode",["+","-","*","/","%","min","max"],"+"),r=t.outNumber("result");var s;n.onChange=i.onChange=_;a.onChange=p;var o=0;var l=0;const u=function(e,t){return e+t};const h=function(e,t){return e-t};const c=function(e,t){return e*t};const f=function(e,t){return e/t};const m=function(e,t){return e%t};const d=function(e,t){return Math.min(e,t)};const g=function(e,t){return Math.max(e,t)};function p(){var e=a.get();if(e=="+")s=u;else if(e=="-")s=h;else if(e=="*")s=c;else if(e=="/")s=f;else if(e=="%")s=m;else if(e=="min")s=d;else if(e=="max")s=g;_();t.setUiAttrib({extendTitle:e})}function _(){o=n.get();l=i.get();r.set(s(o,l))}p()};Ops.Math.Math.prototype=new CABLES.Op;CABLES.OPS["e9fdcaca-a007-4563-8a4d-e94e08506e0f"]={f:Ops.Math.Math,objName:"Ops.Math.Math"};Ops.Trigger.TriggerOnce=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTriggerButton("Exec"),i=e.inTriggerButton("Reset"),a=e.outTrigger("Next");var r=e.outValue("Was Triggered");var s=false;e.toWorkPortsNeedToBeLinked(n);i.onTriggered=function(){s=false;r.set(s)};n.onTriggered=function(){if(s)return;s=true;a.trigger();r.set(s)}};Ops.Trigger.TriggerOnce.prototype=new CABLES.Op;CABLES.OPS["cf3544e4-e392-432b-89fd-fcfb5c974388"]={f:Ops.Trigger.TriggerOnce,objName:"Ops.Trigger.TriggerOnce"};Ops.Trigger.TriggerIfDecreased=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};var n=e.inValue("Value");var i=e.outTrigger("Trigger");var a=-Number.MAX_VALUE;n.onChange=function(){var e=n.get();if(e<a){i.trigger()}a=e}};Ops.Trigger.TriggerIfDecreased.prototype=new CABLES.Op;CABLES.OPS["16ec4069-3682-461e-95ff-1d86e3f44512"]={f:Ops.Trigger.TriggerIfDecreased,objName:"Ops.Trigger.TriggerIfDecreased"};Ops.Gl.TextureEffects.Blur=function(){CABLES.Op.apply(this,arguments);const e=this;const t={blur_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float dirX;\nUNI float dirY;\nUNI float amount;\n\n#ifdef HAS_MASK\n    UNI sampler2D imageMask;\n#endif\n\nfloat random(vec3 scale, float seed)\n{\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n}\n\nvoid main()\n{\n    vec4 color = vec4(0.0);\n    float total = 0.0;\n\n    float am=amount;\n    #ifdef HAS_MASK\n        am=amount*texture(imageMask,texCoord).r;\n        if(am<=0.02)\n        {\n            outColor=texture(tex, texCoord);\n            return;\n        }\n    #endif\n\n    vec2 delta=vec2(dirX*am*0.01,dirY*am*0.01);\n\n\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n    #ifdef MOBILE\n        offset = 0.1;\n    #endif\n\n    #if defined(FASTBLUR) && !defined(MOBILE)\n        const float range=5.0;\n    #else\n        const float range=20.0;\n    #endif\n\n    for (float t = -range; t <= range; t+=1.0)\n    {\n        float percent = (t + offset - 0.5) / range;\n        float weight = 1.0 - abs(percent);\n        vec4 smpl = texture(tex, texCoord + delta * percent);\n\n        smpl.rgb *= smpl.a;\n\n        color += smpl * weight;\n        total += weight;\n    }\n\n    outColor= color / total;\n\n    outColor.rgb /= outColor.a + 0.00001;\n\n\n\n}\n"};const n=e.inTrigger("render");const i=e.outTrigger("trigger");const a=e.inValueFloat("amount");const r=e.inSwitch("direction",["both","vertical","horizontal"],"both");const s=e.inValueBool("Fast",true);const o=e.patch.cgl;a.set(10);let l=new CGL.Shader(o,"blur");l.define("FASTBLUR");s.onChange=function(){if(s.get())l.define("FASTBLUR");else l.removeDefine("FASTBLUR")};l.setSource(l.getDefaultVertexShader(),t.blur_frag);let u=new CGL.Uniform(l,"t","tex",0);let h=new CGL.Uniform(l,"f","dirX",0);let c=new CGL.Uniform(l,"f","dirY",0);let f=new CGL.Uniform(l,"f","width",0);let m=new CGL.Uniform(l,"f","height",0);let d=new CGL.Uniform(l,"f","amount",a.get());a.onChange=function(){d.setValue(a.get())};let g=new CGL.Uniform(l,"t","imageMask",1);let p=false;function _(){if(o.currentTextureEffect.getCurrentSourceTexture().width==o.canvasWidth&&o.currentTextureEffect.getCurrentSourceTexture().height==o.canvasHeight){e.setUiError("warning","Full screen blurs are slow! Try reducing the resolution to 1/2 or a 1/4",0)}else{e.setUiError("warning",null)}}let v=0;r.onChange=function(){if(r.get()=="both")v=0;if(r.get()=="horizontal")v=1;if(r.get()=="vertical")v=2};let b=e.inTexture("mask");b.onChange=function(){if(b.get()&&b.get().tex)l.define("HAS_MASK");else l.removeDefine("HAS_MASK")};n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;o.pushShader(l);f.setValue(o.currentTextureEffect.getCurrentSourceTexture().width);m.setValue(o.currentTextureEffect.getCurrentSourceTexture().height);_();if(v===0||v==2){o.currentTextureEffect.bind();o.setTexture(0,o.currentTextureEffect.getCurrentSourceTexture().tex);if(b.get()&&b.get().tex){o.setTexture(1,b.get().tex)}h.setValue(0);c.setValue(1);o.currentTextureEffect.finish()}if(v===0||v==1){o.currentTextureEffect.bind();o.setTexture(0,o.currentTextureEffect.getCurrentSourceTexture().tex);if(b.get()&&b.get().tex){o.setTexture(1,b.get().tex)}h.setValue(1);c.setValue(0);o.currentTextureEffect.finish()}o.popShader();i.trigger()}};Ops.Gl.TextureEffects.Blur.prototype=new CABLES.Op;CABLES.OPS["54f26f53-f637-44c1-9bfb-a2f2b722e998"]={f:Ops.Gl.TextureEffects.Blur,objName:"Ops.Gl.TextureEffects.Blur"};Ops.Gl.Meshes.Rectangle_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("render"),i=e.outTrigger("trigger"),A=e.inValue("width",1),S=e.inValue("height",1),C=e.inSwitch("pivot x",["left","center","right"]),E=e.inSwitch("pivot y",["top","center","bottom"]),T=e.inValueInt("num columns",1),I=e.inValueInt("num rows",1),y=e.inSwitch("axis",["xy","xz"],"xy"),a=e.inValueBool("Active",true),M=e.outObject("geometry",null,"geometry");M.ignoreValueSerialize=true;const L=e.patch.cgl;y.set("xy");C.set("center");E.set("center");e.setPortGroup("Pivot",[C,E]);e.setPortGroup("Size",[A,S]);e.setPortGroup("Structure",[T,I]);e.toWorkPortsNeedToBeLinked(n);const N=new CGL.Geometry("rectangle");let P=null;let w=false;y.onChange=C.onChange=E.onChange=A.onChange=S.onChange=I.onChange=T.onChange=r;s();function r(){w=true}e.preRender=n.onTriggered=function(){if(!CGL.TextureEffect.checkOpNotInTextureEffect(e))return;if(w)s();if(a.get()&&P)P.render(L.getShader());i.trigger()};function s(){let e=A.get();let t=parseFloat(S.get());let n=0;let i=0;if(typeof e=="string")e=parseFloat(e);if(typeof t=="string")t=parseFloat(t);if(C.get()=="center")n=0;else if(C.get()=="right")n=-e/2;else if(C.get()=="left")n=+e/2;if(E.get()=="center")i=0;else if(E.get()=="top")i=-t/2;else if(E.get()=="bottom")i=+t/2;const a=[];const r=[];const s=[];const o=[];const l=[];const u=[];const h=Math.round(I.get());const c=Math.round(T.get());const f=e/c;const m=t/h;let d,g,p;p=y.get();for(g=0;g<=h;g++){for(d=0;d<=c;d++){a.push(d*f-A.get()/2+n);if(p=="xz")a.push(0);a.push(g*m-S.get()/2+i);if(p=="xy")a.push(0);r.push(d/c);r.push(1-g/h);if(p=="xz"){s.push(0,1,0);o.push(1,0,0);l.push(0,0,1)}else if(p=="xy"){s.push(0,0,1);o.push(-1,0,0);l.push(0,-1,0)}}}for(d=0;d<c;d++){for(g=0;g<h;g++){const _=d+(c+1)*g;const v=_;const b=_+1;const x=_+c+1;const O=_+1+c+1;u.push(v);u.push(x);u.push(b);u.push(b);u.push(x);u.push(O)}}N.clear();N.vertices=a;N.texCoords=r;N.verticesIndices=u;N.vertexNormals=s;N.tangents=o;N.biTangents=l;if(c*h>64e3)N.unIndex();if(!P)P=new CGL.Mesh(L,N);else P.setGeom(N);M.set(null);M.set(N);w=false}e.onDelete=function(){if(P)P.dispose()}};Ops.Gl.Meshes.Rectangle_v2.prototype=new CABLES.Op;CABLES.OPS["fc5718d6-11a5-496e-8f16-1c78b1a2824c"]={f:Ops.Gl.Meshes.Rectangle_v2,objName:"Ops.Gl.Meshes.Rectangle_v2"};Ops.Gl.ShaderEffects.VertexDisplacementMap_v4=function(){CABLES.Op.apply(this,arguments);const e=this;const t={vertdisplace_body_vert:"\nvec2 MOD_tc=texCoord;\n\n#ifdef MOD_COORD_MESHXY\n    MOD_tc=pos.xy;\n#endif\n#ifdef MOD_COORD_MESHXZ\n    MOD_tc=pos.xz;\n#endif\n\n\n#ifdef MOD_FLIP_Y\n    MOD_tc.y=1.0-MOD_tc.y;\n#endif\n#ifdef MOD_FLIP_X\n    MOD_tc.x=1.0-MOD_tc.x;\n#endif\n#ifdef MOD_FLIP_XY\n    MOD_tc=1.0-MOD_tc;\n#endif\n\nMOD_tc*=MOD_scale;\n\nvec4 MOD_sample=texture2D( MOD_texture, vec2(MOD_tc.x+MOD_offsetX,MOD_tc.y+MOD_offsetY) );\nvec3 MOD_disp;\n\n#ifdef MOD_INPUT_R\n    MOD_disp=vec3(MOD_sample.r);\n#endif\n#ifdef MOD_INPUT_G\n    MOD_disp=vec3(MOD_sample.g);\n#endif\n#ifdef MOD_INPUT_B\n    MOD_disp=vec3(MOD_sample.b);\n#endif\n#ifdef MOD_INPUT_A\n    MOD_disp=vec3(MOD_sample.a);\n#endif\n#ifdef MOD_INPUT_RGB\n    MOD_disp=MOD_sample.rgb;\n#endif\n#ifdef MOD_INPUT_LUMI\n    MOD_disp=vec3(dot(vec3(0.2126,0.7152,0.0722), MOD_sample.rgb));\n#endif\n\n\n\n#ifdef MOD_HEIGHTMAP_INVERT\n   MOD_disp=1.0-MOD_disp;\n#endif\n// #ifdef MOD_HEIGHTMAP_NORMALIZE\n//   MOD_disp-=0.5;\n//   MOD_disp*=2.0;\n// #endif\n\n\n#ifdef MOD_HEIGHTMAP_NORMALIZE\n    MOD_disp=(MOD_disp-0.5)*2.0;\n    // MOD_disp=(MOD_disp-0.5)*-1.0+0.5;\n#endif\n\n\nfloat MOD_zero=0.0;\n\n#ifdef MOD_MODE_DIV\n    MOD_zero=1.0;\n#endif\n#ifdef MOD_MODE_MUL\n    MOD_zero=1.0;\n#endif\n\n\n\nvec3 MOD_mask=vec3(1.0);\n\n#ifdef MOD_AXIS_X\n    MOD_mask=vec3(1.,0.,0.);\n    MOD_disp*=MOD_mask*MOD_extrude;\n#endif\n#ifdef MOD_AXIS_Y\n    MOD_mask=vec3(0.,1.,0.);\n    MOD_disp*=MOD_mask*MOD_extrude;\n#endif\n#ifdef MOD_AXIS_Z\n    MOD_mask=vec3(0.,0.,1.);\n    MOD_disp*=MOD_mask*MOD_extrude;\n#endif\n#ifdef MOD_AXIS_XY\n    MOD_mask=vec3(1.,1.,0.);\n    MOD_disp*=MOD_mask*MOD_extrude;\n#endif\n#ifdef MOD_AXIS_XYZ\n    MOD_mask=vec3(1.,1.,1.);\n    MOD_disp*=MOD_mask*MOD_extrude;\n#endif\n\n\n// MOD_disp=smoothstep(-1.,1.,MOD_disp*MOD_disp*MOD_disp);\n// MOD_disp=MOD_disp*MOD_disp*MOD_disp;\n\n// #ifdef MOD_FLIP_Y\n//     MOD_mask.y=1.0-MOD_mask.y;\n// #endif\n// #ifdef MOD_FLIP_X\n//     MOD_mask.x=1.0-MOD_mask.x;\n// #endif\n// #ifdef MOD_FLIP_XY\n//     MOD_mask.xy=1.0-MOD_mask.xy;\n// #endif\n\n\n\n#ifdef MOD_MODE_DIV\n    pos.xyz/=MOD_disp*MOD_mask;\n#endif\n\n#ifdef MOD_MODE_MUL\n    pos.xyz*=MOD_disp*MOD_mask;\n#endif\n\n#ifdef MOD_MODE_ADD\n    pos.xyz+=MOD_disp*MOD_mask;\n#endif\n\n#ifdef MOD_MODE_NORMAL\n\n    vec3 MOD_t=norm;\n    #ifdef MOD_SMOOTHSTEP\n        MOD_t=smoothstep(-1.,1.,MOD_t);\n    #endif\n\n    pos.xyz+=MOD_t*MOD_disp*MOD_mask;\n\n#endif\n\n#ifdef MOD_MODE_TANGENT\n    MOD_disp*=-1.0;\n\n    vec3 MOD_t=attrTangent;\n    #ifdef MOD_SMOOTHSTEP\n        MOD_t=smoothstep(-1.,1.,MOD_t);\n    #endif\n\n    pos.xyz+=MOD_t*MOD_disp*MOD_mask;\n\n#endif\n\n#ifdef MOD_MODE_BITANGENT\n    MOD_disp*=-1.0;\n    vec3 MOD_t=attrBiTangent;\n\n    #ifdef MOD_SMOOTHSTEP\n        MOD_t=smoothstep(-1.,1.,MOD_t);\n    #endif\n\n    pos.xyz+=MOD_t*MOD_disp*MOD_mask;\n\n#endif\n\n\n// pos.y*=-1.0;\n    // pos.xy+=vec2(MOD_texVal*MOD_extrude)*normalize(pos.xy);\n\n\nMOD_displHeightMapColor=MOD_disp;\n\n\n#ifdef CALC_NORMALS\n    norm+=MOD_calcNormal(MOD_texture,MOD_tc);\n#endif",vertdisplace_head_vert:"OUT vec3 MOD_displHeightMapColor;\n\n// mat4 rotationX( in float angle ) {\n// \treturn mat4(\t1.0,\t\t0,\t\t\t0,\t\t\t0,\n// \t\t\t \t\t0, \tcos(angle),\t-sin(angle),\t\t0,\n// \t\t\t\t\t0, \tsin(angle),\t cos(angle),\t\t0,\n// \t\t\t\t\t0, \t\t\t0,\t\t\t  0, \t\t1);\n// }\n\n// mat4 rotationY( in float angle ) {\n// \treturn mat4(\tcos(angle),\t\t0,\t\tsin(angle),\t0,\n// \t\t\t \t\t\t\t0,\t\t1.0,\t\t\t 0,\t0,\n// \t\t\t\t\t-sin(angle),\t0,\t\tcos(angle),\t0,\n// \t\t\t\t\t\t\t0, \t\t0,\t\t\t\t0,\t1);\n// }\n\n// mat4 rotationZ( in float angle ) {\n// \treturn mat4(\tcos(angle),\t\t-sin(angle),\t0,\t0,\n// \t\t\t \t\tsin(angle),\t\tcos(angle),\t\t0,\t0,\n// \t\t\t\t\t\t\t0,\t\t\t\t0,\t\t1,\t0,\n// \t\t\t\t\t\t\t0,\t\t\t\t0,\t\t0,\t1);\n// }\n\n\nvec3 MOD_calcNormal(sampler2D tex,vec2 uv)\n{\n    float strength=13.0;\n    float texelSize=1.0/512.0;\n\n    float tl = abs(texture(tex, uv + texelSize * vec2(-1.0, -1.0)).x);   // top left\n    float  l = abs(texture(tex, uv + texelSize * vec2(-1.0,  0.0)).x);   // left\n    float bl = abs(texture(tex, uv + texelSize * vec2(-1.0,  1.0)).x);   // bottom left\n    float  t = abs(texture(tex, uv + texelSize * vec2( 0.0, -1.0)).x);   // top\n    float  b = abs(texture(tex, uv + texelSize * vec2( 0.0,  1.0)).x);   // bottom\n    float tr = abs(texture(tex, uv + texelSize * vec2( 1.0, -1.0)).x);   // top right\n    float  r = abs(texture(tex, uv + texelSize * vec2( 1.0,  0.0)).x);   // right\n    float br = abs(texture(tex, uv + texelSize * vec2( 1.0,  1.0)).x);   // bottom right\n\n    //     // Compute dx using Sobel:\n    //     //           -1 0 1\n    //     //           -2 0 2\n    //     //           -1 0 1\n    float dX = tr + 2.0*r + br -tl - 2.0*l - bl;\n\n    //     // Compute dy using Sobel:\n    //     //           -1 -2 -1\n    //     //            0  0  0\n    //     //            1  2  1\n    float dY = bl + 2.0*b + br -tl - 2.0*t - tr;\n\n    //     // Build the normalized normal\n\n    vec3 N = normalize(vec3(dX,dY, 1.0 / strength));\n\n    //     //convert (-1.0 , 1.0) to (0.0 , 1.0), if needed\n    N= N * 0.5 + 0.5;\n\n   return N;\n}\n"};const n=e.inTrigger("Render"),i=e.inValue("Extrude",.5),a=e.inSwitch("Mode",["Norm","Tang","BiTang","*","+","/"],"Norm"),r=e.inSwitch("Axis",["XYZ","XY","X","Y","Z"],"XYZ"),s=e.inSwitch("Coordinates",["Tex Coords","Mesh XY","Mesh XZ"],"Tex Coords"),o=e.inTexture("Texture",null,"texture"),l=e.inSwitch("Channel",["Luminance","R","G","B","A","RGB"],"Luminance"),u=e.inSwitch("Flip",["None","X","Y","XY"],"None"),h=e.inSwitch("Range",["0-1","1-0","Normalized"],"0-1"),c=e.inValueFloat("Offset X"),f=e.inValueFloat("Offset Y"),m=e.inValueFloat("Scale",1),d=e.inValueBool("Calc Normals",false),g=e.inValueBool("Discard Zero Values"),p=e.inValueBool("colorize",false),_=e.inValueSlider("Colorize Min",0),v=e.inValueSlider("Colorize Max",1),b=e.outTrigger("trigger");const x=e.patch.cgl;e.setPortGroup("Input",[o,u,l,h,c,f,m]);e.setPortGroup("Colorize",[p,_,v]);e.toWorkPortsNeedToBeLinked(o,b,n);n.onTriggered=I;l.onChange=p.onChange=r.onChange=h.onChange=g.onChange=u.onChange=d.onChange=s.onChange=a.onChange=T;const O=t.vertdisplace_head_vert;const A=t.vertdisplace_body_vert;const S="".endl()+"IN vec3 MOD_displHeightMapColor;".endl()+"vec3 MOD_map(vec3 value, float inMin, float inMax, float outMin, float outMax) { return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);}".endl();const C="".endl()+"#ifdef MOD_HEIGHTMAP_COLORIZE".endl()+"   col.rgb*=MOD_map( MOD_displHeightMapColor, 0.0,1.0 , MOD_colorizeMin,MOD_colorizeMax);".endl()+"#endif".endl()+"#ifdef MOD_DISPLACE_REMOVE_ZERO".endl()+"   if(MOD_displHeightMapColor.r==0.0)discard;".endl()+"#endif".endl();const E=new CGL.ShaderModifier(x,e.name);E.addModule({title:e.name,name:"MODULE_VERTEX_POSITION",srcHeadVert:O,srcBodyVert:A});E.addModule({title:e.name,name:"MODULE_COLOR",srcHeadFrag:S,srcBodyFrag:C});E.addUniformVert("t","MOD_texture",0);E.addUniformVert("f","MOD_extrude",i);E.addUniformVert("f","MOD_offsetX",c);E.addUniformVert("f","MOD_offsetY",f);E.addUniformVert("f","MOD_scale",m);E.addUniformFrag("f","MOD_colorizeMin",_);E.addUniformFrag("f","MOD_colorizeMax",v);T();function T(){E.toggleDefine("MOD_HEIGHTMAP_COLORIZE",p.get());E.toggleDefine("MOD_HEIGHTMAP_INVERT",h.get()=="1-0");E.toggleDefine("MOD_HEIGHTMAP_NORMALIZE",h.get()=="Normalized");E.toggleDefine("MOD_DISPLACE_REMOVE_ZERO",g.get());E.toggleDefine("MOD_INPUT_R",l.get()=="R");E.toggleDefine("MOD_INPUT_G",l.get()=="G");E.toggleDefine("MOD_INPUT_B",l.get()=="B");E.toggleDefine("MOD_INPUT_A",l.get()=="A");E.toggleDefine("MOD_INPUT_RGB",l.get()=="RGB");E.toggleDefine("MOD_INPUT_LUMI",l.get()=="Luminance");E.toggleDefine("MOD_FLIP_X",u.get()=="X");E.toggleDefine("MOD_FLIP_Y",u.get()=="Y");E.toggleDefine("MOD_FLIP_XY",u.get()=="XY");E.toggleDefine("MOD_AXIS_X",r.get()=="X");E.toggleDefine("MOD_AXIS_Y",r.get()=="Y");E.toggleDefine("MOD_AXIS_Z",r.get()=="Z");E.toggleDefine("MOD_AXIS_XYZ",r.get()=="XYZ");E.toggleDefine("MOD_AXIS_XY",r.get()=="XY");E.toggleDefine("MOD_MODE_BITANGENT",a.get()=="BiTang");E.toggleDefine("MOD_MODE_TANGENT",a.get()=="Tang");E.toggleDefine("MOD_MODE_NORMAL",a.get()=="Norm");E.toggleDefine("MOD_MODE_MUL",a.get()=="*");E.toggleDefine("MOD_MODE_ADD",a.get()=="+");E.toggleDefine("MOD_MODE_DIV",a.get()=="/");E.toggleDefine("MOD_SMOOTHSTEP",0);E.toggleDefine("MOD_COORD_TC",s.get()=="Tex Coords");E.toggleDefine("MOD_COORD_MESHXY",s.get()=="Mesh XY");E.toggleDefine("MOD_COORD_MESHXZ",s.get()=="Mesh XZ");E.toggleDefine("CALC_NORMALS",d.get())}function I(){E.bind();if(o.get()&&o.get().deleted)console.log("deleted!!!");if(o.get()&&!o.get().deleted)E.pushTexture("MOD_texture",o.get());else E.pushTexture("MOD_texture",CGL.Texture.getEmptyTexture(x));b.trigger();E.unbind()}};Ops.Gl.ShaderEffects.VertexDisplacementMap_v4.prototype=new CABLES.Op;CABLES.OPS["ed36e5ad-457b-4ac6-a929-11b66951cb6c"]={f:Ops.Gl.ShaderEffects.VertexDisplacementMap_v4,objName:"Ops.Gl.ShaderEffects.VertexDisplacementMap_v4"};Ops.Gl.TextureEffects.ToNormalMap_v2=function(){CABLES.Op.apply(this,arguments);const t=this;const e={tonormal_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI vec2 size;\nUNI float strength;\nUNI float sizeMul;\n\nvoid main()\n{\n    float tl = abs(texture(tex, texCoord + (size*sizeMul) * vec2(-1.0, -1.0)).x);   // top left\n    float  l = abs(texture(tex, texCoord + (size*sizeMul) * vec2(-1.0,  0.0)).x);   // left\n    float bl = abs(texture(tex, texCoord + (size*sizeMul) * vec2(-1.0,  1.0)).x);   // bottom left\n    float  t = abs(texture(tex, texCoord + (size*sizeMul) * vec2( 0.0, -1.0)).x);   // top\n    float  b = abs(texture(tex, texCoord + (size*sizeMul) * vec2( 0.0,  1.0)).x);   // bottom\n    float tr = abs(texture(tex, texCoord + (size*sizeMul) * vec2( 1.0, -1.0)).x);   // top right\n    float  r = abs(texture(tex, texCoord + (size*sizeMul) * vec2( 1.0,  0.0)).x);   // right\n    float br = abs(texture(tex, texCoord + (size*sizeMul) * vec2( 1.0,  1.0)).x);   // bottom right\n\n    // Compute dx using Sobel:\n    //           -1 0 1\n    //           -2 0 2\n    //           -1 0 1\n    float dX = tr + 2.0*r + br -tl - 2.0*l - bl;\n\n    // Compute dy using Sobel:\n    //           -1 -2 -1\n    //            0  0  0\n    //            1  2  1\n    float dY = bl + 2.0*b + br -tl - 2.0*t - tr;\n\n    // Build the normalized normal\n    vec4 N = vec4(normalize(vec3(dX,dY, 1.0 / strength)), 1.0);\n    N= N * 0.5 + 0.5;\n\n    outColor= N;\n}"};const n=t.inTrigger("render"),i=t.outTrigger("trigger"),a=t.inValue("Strength",4),r=t.inValue("Step Multiplier",1);const s=t.patch.cgl,o=new CGL.Shader(s,t.name);o.setSource(o.getDefaultVertexShader(),e.tonormal_frag);const l=new CGL.Uniform(o,"t","tex",0),u=new CGL.Uniform(o,"f","strength",a),h=new CGL.Uniform(o,"f","sizeMul",r),c=new CGL.Uniform(o,"2f","size",0,0);n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(t))return;s.pushShader(o);s.currentTextureEffect.bind();const e=s.currentTextureEffect.getCurrentSourceTexture();s.setTexture(0,e.tex);c.setValue([1/e.width,1/e.height]);s.currentTextureEffect.finish();s.popShader();i.trigger()}};Ops.Gl.TextureEffects.ToNormalMap_v2.prototype=new CABLES.Op;CABLES.OPS["5dfb2856-b589-4bd9-8f4e-b518da115d11"]={f:Ops.Gl.TextureEffects.ToNormalMap_v2,objName:"Ops.Gl.TextureEffects.ToNormalMap_v2"};Ops.Gl.Meshes.Torus=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("render"),a=e.inValue("sides",32),r=e.inValue("rings",32),s=e.inValue("innerRadius",.5),o=e.inValue("outerRadius",1),i=e.inBool("Draw",true),l=e.outTrigger("trigger"),m=e.outObject("geometry");const d=vec3.fromValues(0,1,0),g=vec3.fromValues(1,0,0);let p=vec3.create(),_=vec3.create();m.ignoreValueSerialize=true;let v=e.patch.cgl;let b=null;let x=null;let O=0,A=0,S=0;let u=true;r.onChange=a.onChange=s.onChange=o.onChange=function(){u=true};n.onTriggered=function(){if(u)h();if(i.get()&&b!==null)b.render(v.getShader());l.trigger()};function h(){let e=Math.round(r.get());let t=Math.round(a.get());if(e<2)e=2;if(t<2)t=2;let n=s.get();let i=o.get();c(n,i,e,t);u=false}function C(e,t){let n;let i=Math.abs(e);let a=(t?1:2)*Math.PI/e;let r=[];let s=[];r[0]=0;s[0]=1;for(n=1;n<i;n++){r[n]=Math.sin(a*n);s[n]=Math.cos(a*n)}if(t){r[i]=0;s[i]=-1}else{r[i]=r[0];s[i]=s[0]}return{cost:s,sint:r}}function c(e,t,n,i){let a=C(n,false);let r=C(-i,false);let s;x=new CGL.Geometry("torus");x.glPrimitive=v.gl.TRIANGLE_STRIP;let o=[];let l=[];let u=[];let h=[];for(O=0;O<n;O++){for(A=0;A<i;A++){var c=3*(O*i+A);var f=2*(O*i+A);x.vertices[c]=a.cost[O]*(t+r.cost[A]*e);x.vertices[c+1]=a.sint[O]*(t+r.cost[A]*e);x.vertices[c+2]=r.sint[A]*e;u[c]=p[0]=a.cost[O]*r.cost[A];u[c+1]=p[1]=a.sint[O]*r.cost[A];u[c+2]=p[2]=r.sint[A];if(Math.abs(p[1])==1)s=g;else s=d;vec3.cross(_,p,s);vec3.normalize(_,_);o[c]=_[0];o[c+1]=_[1];o[c+2]=_[2];vec3.cross(_,_,p);l[c]=_[0];l[c+1]=_[1];l[c+2]=_[2];h[f]=O/(n-1);h[f+1]=A/(i-1)}}for(A=0,S=0;A<i;A++){let e=1;if(A==i-1)e=-A;for(O=0;O<n;O++,S+=2){var c=O*i+A;x.verticesIndices[S]=c;x.verticesIndices[S+1]=c+e;h[f]=O/(n+1);h[f+1]=A/(i+1)}x.verticesIndices[S]=A;x.verticesIndices[S+1]=A+e;S+=2}if(x.biTangents.length==l.length)x.biTangents.set(l);else x.biTangents=new Float32Array(l);if(x.tangents.length==o.length)x.tangents.set(o);else x.tangents=new Float32Array(o);if(x.vertexNormals.length==u.length)x.vertexNormals.set(u);else x.vertexNormals=new Float32Array(u);x.setTexCoords(h);m.set(null);m.set(x);if(!b)b=new CGL.Mesh(v,x,v.gl.TRIANGLE_STRIP);else b.setGeom(x)}};Ops.Gl.Meshes.Torus.prototype=new CABLES.Op;CABLES.OPS["d921e008-21b9-4cf5-84a2-4dedca34f0c8"]={f:Ops.Gl.Meshes.Torus,objName:"Ops.Gl.Meshes.Torus"};Ops.Gl.Shader.WireframeMaterial=function(){CABLES.Op.apply(this,arguments);const i=this;const e={wireframe_frag:"{{MODULES_HEAD}}\n\nIN vec3 barycentric;\nUNI float width;\nUNI float opacity;\nUNI float r,g,b;\nUNI float fr,fg,fb;\nIN vec3 norm;\n\nfloat edgeFactor()\n{\n    vec3 d = fwidth(barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d*width*4.0, barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n}\n\nvoid main()\n{\n    {{MODULE_BEGIN_FRAG}}\n\n    vec4 col;\n\n    #ifdef WIREFRAME_FILL\n        float v=opacity*(1.0-edgeFactor())*0.95;\n        vec3 wire = vec3(fr, fg, fb);\n        col.rgb = vec3(r, g, b);\n        col.rgb = mix(wire,col.rgb,v);\n        col.a = opacity;\n    #endif\n\n    #ifndef WIREFRAME_FILL\n        col = vec4(r,g,b, opacity*(1.0-edgeFactor())*0.95);\n    #endif\n\n    {{MODULE_COLOR}}\n\n// col=vec4(1.0);\n    outColor=col;\n}",wireframe_vert:"{{MODULES_HEAD}}\n\nIN vec3 vPosition;\nUNI mat4 projMatrix;\nUNI mat4 modelMatrix;\nUNI mat4 viewMatrix;\nOUT vec3 barycentric;\nIN vec2 attrTexCoord;\nOUT vec2 texCoord;\n\nIN vec3 attrBarycentric;\nIN vec3 attrVertNormal;\nOUT vec3 norm;\n\nvoid main()\n{\n    norm=attrVertNormal;\n    texCoord=attrTexCoord;\n    barycentric=attrBarycentric;\n    mat4 mMatrix=modelMatrix;\n    vec4 pos=vec4(vPosition, 1.0);\n\n    {{MODULE_VERTEX_POSITION}}\n\n    gl_Position = projMatrix * viewMatrix * mMatrix * pos;\n}\n"};let t=i.patch.cgl;let n=i.inTrigger("render");let a=i.outTrigger("trigger");let r=i.inValueBool("enable depth testing",true);let s=i.inValueBool("fill",true);function o(){if(c)if(s.get())c.define("WIREFRAME_FILL");else c.removeDefine("WIREFRAME_FILL")}s.onChange=function(){o()};let l=i.inValueSlider("width",.25);l.onChange=function(){f.setValue(l.get())};let u=i.inValueSlider("opacity",1);u.onChange=function(){m.setValue(u.get())};if(t.glVersion==1&&!t.gl.getExtension("OES_standard_derivatives")){i.uiAttr({error:"no oes standart derivatives!"})}else{i.uiAttr({error:null})}let h=function(){t.pushDepthTest(r.get());t.pushShader(c);a.trigger();t.popShader();t.popDepthTest()};var c=new CGL.Shader(t,"Wireframe Material");if(t.glVersion>1)c.glslVersion=300;var f=new CGL.Uniform(c,"f","width",l.get());var m=new CGL.Uniform(c,"f","opacity",u.get());if(t.glVersion==1)c.enableExtension("OES_standard_derivatives");c.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);c.setSource(e.wireframe_vert||"",e.wireframe_frag||"");c.wireframe=true;o();{var d=i.inValueSlider("diffuse r",Math.random());var g=i.inValueSlider("diffuse g",Math.random());var p=i.inValueSlider("diffuse b",Math.random());d.setUiAttribs({colorPick:true})}g.uniform=new CGL.Uniform(c,"f","g",g);d.uniform=new CGL.Uniform(c,"f","r",d);p.uniform=new CGL.Uniform(c,"f","b",p);{let e=i.inValueSlider("Fill R",Math.random());e.setUiAttribs({colorPick:true});e.uniform=new CGL.Uniform(c,"f","fr",e);let t=i.inValueSlider("Fill G",Math.random());t.uniform=new CGL.Uniform(c,"f","fg",t);let n=i.inValueSlider("Fill B",Math.random());n.uniform=new CGL.Uniform(c,"f","fb",n)}n.onTriggered=h;h()};Ops.Gl.Shader.WireframeMaterial.prototype=new CABLES.Op;CABLES.OPS["e5d64a7d-b161-4f85-907e-e10a34691733"]={f:Ops.Gl.Shader.WireframeMaterial,objName:"Ops.Gl.Shader.WireframeMaterial"};Ops.Anim.Timer_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const i=e.inValue("Speed",1),n=e.inValueBool("Play",true),a=e.inTriggerButton("Reset"),r=e.inValueBool("Sync to timeline",false),s=e.outValue("Time");e.setPortGroup("Controls",[n,a,i]);const o=new CABLES.Timer;let l=null;let u=0;let h=false;n.onChange=c;c();function c(){if(n.get()){o.play();e.patch.addOnAnimFrame(e)}else{o.pause();e.patch.removeOnAnimFrame(e)}}a.onTriggered=f;function f(){u=0;l=null;o.setTime(0);s.set(0)}r.onChange=function(){h=r.get();n.setUiAttribs({greyout:h});a.setUiAttribs({greyout:h})};e.onAnimFrame=function(e){if(o.isPlaying()){if(CABLES.overwriteTime!==undefined){s.set(CABLES.overwriteTime*i.get())}else if(h){s.set(e*i.get())}else{o.update();const t=o.get();if(l===null){l=t;return}const n=Math.abs(t-l);l=t;u+=n*i.get();if(u!=u)u=0;s.set(u)}}}};Ops.Anim.Timer_v2.prototype=new CABLES.Op;CABLES.OPS["aac7f721-208f-411a-adb3-79adae2e471a"]={f:Ops.Anim.Timer_v2,objName:"Ops.Anim.Timer_v2"};Ops.Gl.Phong.PhongMaterial_v6=function(){CABLES.Op.apply(this,arguments);const e=this;const o={phong_frag:'IN vec3 viewDirection;\nIN vec3 normInterpolated;\nIN vec2 texCoord;\n\n#ifdef ENABLE_FRESNEL\n    IN vec4 cameraSpace_pos;\n#endif\n\n// IN mat3 normalMatrix; // when instancing...\n\n#ifdef HAS_TEXTURE_NORMAL\n    IN mat3 TBN_Matrix; // tangent bitangent normal space transform matrix\n#endif\n\nIN vec3 fragPos;\nIN vec3 v_viewDirection;\n\nUNI vec4 inDiffuseColor;\nUNI vec4 inMaterialProperties;\n\n#ifdef ADD_EMISSIVE_COLOR\n    UNI vec4 inEmissiveColor; // .w = intensity\n#endif\n\n#ifdef ENABLE_FRESNEL\n    UNI mat4 viewMatrix;\n    UNI vec4 inFresnel;\n    UNI vec2 inFresnelWidthExponent;\n#endif\n\n#ifdef ENVMAP_MATCAP\n    IN vec3 viewSpaceNormal;\n    IN vec3 viewSpacePosition;\n#endif\n\nstruct Light {\n    vec3 color;\n    vec3 position;\n    vec3 specular;\n\n\n    // * SPOT LIGHT * //\n    #ifdef HAS_SPOT\n        vec3 conePointAt;\n        #define COSCONEANGLE x\n        #define COSCONEANGLEINNER y\n        #define SPOTEXPONENT z\n        vec3 spotProperties;\n    #endif\n\n    #define INTENSITY x\n    #define ATTENUATION y\n    #define FALLOFF z\n    #define RADIUS w\n    vec4 lightProperties;\n\n    int castLight;\n};\n\n/* CONSTANTS */\n#define NONE -1\n#define ALBEDO x\n#define ROUGHNESS y\n#define SHININESS z\n#define SPECULAR_AMT w\n#define NORMAL x\n#define AO y\n#define SPECULAR z\n#define EMISSIVE w\nconst float PI = 3.1415926535897932384626433832795;\nconst float TWO_PI = (2. * PI);\nconst float EIGHT_PI = (8. * PI);\n\n#define RECIPROCAL_PI 1./PI\n#define RECIPROCAL_PI2 RECIPROCAL_PI/2.\n\n// TEXTURES\n// #ifdef HAS_TEXTURES\n    UNI vec4 inTextureIntensities;\n\n    #ifdef HAS_TEXTURE_ENV\n        #ifdef TEX_FORMAT_CUBEMAP\n            UNI samplerCube texEnv;\n            #ifndef WEBGL1\n                #define SAMPLETEX textureLod\n            #endif\n            #ifdef WEBGL1\n                #define SAMPLETEX textureCubeLodEXT\n            #endif\n        #endif\n\n        #ifdef TEX_FORMAT_EQUIRECT\n            UNI sampler2D texEnv;\n            #ifdef WEBGL1\n                // #extension GL_EXT_shader_texture_lod : enable\n                #ifdef GL_EXT_shader_texture_lod\n                    #define textureLod texture2DLodEXT\n                #endif\n                // #define textureLod texture2D\n            #endif\n\n            #define SAMPLETEX sampleEquirect\n\n            const vec2 invAtan = vec2(0.1591, 0.3183);\n            vec4 sampleEquirect(sampler2D tex,vec3 direction,float lod)\n            {\n                #ifndef WEBGL1\n                    vec3 newDirection = normalize(direction);\n            \t\tvec2 sampleUV;\n            \t\tsampleUV.x = -1. * (atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.75);\n            \t\tsampleUV.y = asin( clamp(direction.y, -1., 1.) ) * RECIPROCAL_PI + 0.5;\n                #endif\n\n                #ifdef WEBGL1\n                    vec3 newDirection = normalize(direction);\n                \t\tvec2 sampleUV = vec2(atan(newDirection.z, newDirection.x), asin(newDirection.y+1e-6));\n                        sampleUV *= vec2(0.1591, 0.3183);\n                        sampleUV += 0.5;\n                #endif\n                return textureLod(tex, sampleUV, lod);\n            }\n        #endif\n        #ifdef ENVMAP_MATCAP\n            UNI sampler2D texEnv;\n            #ifdef WEBGL1\n                // #extension GL_EXT_shader_texture_lod : enable\n                #ifdef GL_EXT_shader_texture_lod\n                    #define textureLod texture2DLodEXT\n                #endif\n                // #define textureLod texture2D\n            #endif\n\n\n            // * taken & modified from https://github.com/mrdoob/three.js/blob/dev/src/renderers/shaders/ShaderLib/meshmatcap_frag.glsl.js\n            vec2 getMatCapUV(vec3 viewSpacePosition, vec3 viewSpaceNormal) {\n                vec3 viewDir = normalize(-viewSpacePosition);\n            \tvec3 x = normalize(vec3(viewDir.z, 0.0, - viewDir.x));\n            \tvec3 y = normalize(cross(viewDir, x));\n            \tvec2 uv = vec2(dot(x, viewSpaceNormal), dot(y, viewSpaceNormal)) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n            \treturn uv;\n            }\n        #endif\n\n        UNI float inEnvMapIntensity;\n        UNI float inEnvMapWidth;\n    #endif\n\n    #ifdef HAS_TEXTURE_LUMINANCE_MASK\n        UNI sampler2D texLuminance;\n        UNI float inLuminanceMaskIntensity;\n    #endif\n\n    #ifdef HAS_TEXTURE_DIFFUSE\n        UNI sampler2D texDiffuse;\n    #endif\n\n    #ifdef HAS_TEXTURE_SPECULAR\n        UNI sampler2D texSpecular;\n    #endif\n\n    #ifdef HAS_TEXTURE_NORMAL\n        UNI sampler2D texNormal;\n    #endif\n\n    #ifdef HAS_TEXTURE_AO\n        UNI sampler2D texAO;\n    #endif\n\n    #ifdef HAS_TEXTURE_EMISSIVE\n        UNI sampler2D texEmissive;\n    #endif\n\n    #ifdef HAS_TEXTURE_EMISSIVE_MASK\n        UNI sampler2D texMaskEmissive;\n        UNI float inEmissiveMaskIntensity;\n    #endif\n    #ifdef HAS_TEXTURE_ALPHA\n        UNI sampler2D texAlpha;\n    #endif\n// #endif\n\n{{MODULES_HEAD}}\n\nfloat when_gt(float x, float y) { return max(sign(x - y), 0.0); } // comparator function\nfloat when_lt(float x, float y) { return max(sign(y - x), 0.0); }\nfloat when_eq(float x, float y) { return 1. - abs(sign(x - y)); } // comparator function\nfloat when_neq(float x, float y) { return abs(sign(x - y)); } // comparator function\nfloat when_ge(float x, float y) { return 1.0 - when_lt(x, y); }\nfloat when_le(float x, float y) { return 1.0 - when_gt(x, y); }\n\n#ifdef FALLOFF_MODE_A\n    float CalculateFalloff(float distance, vec3 lightDirection, float falloff, float radius) {\n        // * original falloff\n        float denom = distance / radius + 1.0;\n        float attenuation = 1.0 / (denom*denom);\n        float t = (attenuation - falloff) / (1.0 - falloff);\n        return max(t, 0.0);\n    }\n#endif\n\n#ifdef FALLOFF_MODE_B\n    float CalculateFalloff(float distance, vec3 lightDirection, float falloff, float radius) {\n        float distanceSquared = dot(lightDirection, lightDirection);\n        float factor = distanceSquared * falloff;\n        float smoothFactor = clamp(1. - factor * factor, 0., 1.);\n        float attenuation = smoothFactor * smoothFactor;\n\n        return attenuation * 1. / max(distanceSquared, 0.00001);\n    }\n#endif\n\n#ifdef FALLOFF_MODE_C\n    float CalculateFalloff(float distance, vec3 lightDirection, float falloff, float radius) {\n        // https://blog.selfshadow.com/publications/s2013-shading-course/karis/s2013_pbs_epic_notes_v2.pdf\n        float falloffNumerator = 1. - pow(distance/radius, 4.);\n        falloffNumerator = clamp(falloffNumerator, 0., 1.);\n        falloffNumerator *= falloffNumerator;\n\n        float denominator = distance*distance + falloff;\n\n        return falloffNumerator/denominator;\n    }\n#endif\n\n#ifdef FALLOFF_MODE_D\n    float CalculateFalloff(float distance, vec3 lightDirection, float falloff, float radius) {\n        // inverse square falloff, "physically correct"\n        return 1.0 / max(distance * distance, 0.0001);\n    }\n#endif\n\n#ifdef ENABLE_FRESNEL\n    float CalculateFresnel(vec3 direction, vec3 normal)\n    {\n        vec3 nDirection = normalize( direction );\n        vec3 nNormal = normalize( mat3(viewMatrix) * normal );\n        vec3 halfDirection = normalize( nNormal + nDirection );\n\n        float cosine = dot( halfDirection, nDirection );\n        float product = max( cosine, 0.0 );\n        float factor = pow(product, inFresnelWidthExponent.y);\n\n        return 5. * factor;\n    }\n#endif\n\n#ifdef CONSERVE_ENERGY\n    // http://www.rorydriscoll.com/2009/01/25/energy-conservation-in-games/\n    // http://www.farbrausch.de/~fg/articles/phong.pdf\n    float EnergyConservation(float shininess) {\n        #ifdef SPECULAR_PHONG\n            return (shininess + 2.)/TWO_PI;\n        #endif\n        #ifdef SPECULAR_BLINN\n            return (shininess + 8.)/EIGHT_PI;\n        #endif\n\n        #ifdef SPECULAR_SCHLICK\n            return (shininess + 8.)/EIGHT_PI;\n        #endif\n\n        #ifdef SPECULAR_GAUSS\n            return (shininess + 8.)/EIGHT_PI;\n        #endif\n    }\n#endif\n\n#ifdef ENABLE_OREN_NAYAR_DIFFUSE\n    float CalculateOrenNayar(vec3 lightDirection, vec3 viewDirection, vec3 normal) {\n        float LdotV = dot(lightDirection, viewDirection);\n        float NdotL = dot(lightDirection, normal);\n        float NdotV = dot(normal, viewDirection);\n\n        float albedo = inMaterialProperties.ALBEDO;\n        albedo *= 1.8;\n        float s = LdotV - NdotL * NdotV;\n        float t = mix(1., max(NdotL, NdotV), step(0., s));\n\n        float roughness = inMaterialProperties.ROUGHNESS;\n        float sigma2 = roughness * roughness;\n        float A = 1. + sigma2 * (albedo / (sigma2 + 0.13) + 0.5 / (sigma2 + 0.33));\n        float B = 0.45 * sigma2 / (sigma2 + 0.09);\n\n        float factor = albedo * max(0., NdotL) * (A + B * s / t) / PI;\n\n        return factor;\n\n    }\n#endif\n\nvec3 CalculateDiffuseColor(\n    vec3 lightDirection,\n    vec3 viewDirection,\n    vec3 normal,\n    vec3 lightColor,\n    vec3 materialColor,\n    inout float lambert\n) {\n    #ifndef ENABLE_OREN_NAYAR_DIFFUSE\n        lambert = clamp(dot(lightDirection, normal), 0., 1.);\n    #endif\n\n    #ifdef ENABLE_OREN_NAYAR_DIFFUSE\n        lambert = CalculateOrenNayar(lightDirection, viewDirection, normal);\n    #endif\n\n    vec3 diffuseColor = lambert * lightColor * materialColor;\n    return diffuseColor;\n}\n\nvec3 CalculateSpecularColor(\n    vec3 specularColor,\n    float specularCoefficient,\n    float shininess,\n    vec3 lightDirection,\n    vec3 viewDirection,\n    vec3 normal,\n    float lambertian\n) {\n    vec3 resultColor = vec3(0.);\n\n    #ifdef SPECULAR_PHONG\n        vec3 reflectDirection = reflect(-lightDirection, normal);\n        float specularAngle = max(dot(reflectDirection, viewDirection), 0.);\n        float specularFactor = pow(specularAngle, max(0., shininess));\n    resultColor = lambertian * specularFactor * specularCoefficient * specularColor;\n    #endif\n\n    #ifdef SPECULAR_BLINN\n        vec3 halfDirection = normalize(lightDirection + viewDirection);\n        float specularAngle = max(dot(halfDirection, normal), 0.);\n        float specularFactor = pow(specularAngle, max(0., shininess));\n        resultColor = lambertian * specularFactor * specularCoefficient * specularColor;\n    #endif\n\n    #ifdef SPECULAR_SCHLICK\n        vec3 halfDirection = normalize(lightDirection + viewDirection);\n        float specularAngle = dot(halfDirection, normal);\n        float schlickShininess = max(0., shininess);\n        float specularFactor = specularAngle / (schlickShininess - schlickShininess*specularAngle + specularAngle);\n        resultColor = lambertian * specularFactor * specularCoefficient * specularColor;\n    #endif\n\n    #ifdef SPECULAR_GAUSS\n        vec3 halfDirection = normalize(lightDirection + viewDirection);\n        float specularAngle = acos(max(dot(halfDirection, normal), 0.));\n        float exponent = specularAngle * shininess * 0.17;\n        exponent = -(exponent*exponent);\n        float specularFactor = exp(exponent);\n\n        resultColor = lambertian * specularFactor * specularCoefficient * specularColor;\n    #endif\n\n    #ifdef CONSERVE_ENERGY\n        float conserveEnergyFactor = EnergyConservation(shininess);\n        resultColor = conserveEnergyFactor * resultColor;\n    #endif\n\n    return resultColor;\n}\n\n#ifdef HAS_SPOT\n    float CalculateSpotLightEffect(vec3 lightPosition, vec3 conePointAt, float cosConeAngle, float cosConeAngleInner, float spotExponent, vec3 lightDirection) {\n        vec3 spotLightDirection = normalize(lightPosition-conePointAt);\n        float spotAngle = dot(-lightDirection, spotLightDirection);\n        float epsilon = cosConeAngle - cosConeAngleInner;\n\n        float spotIntensity = clamp((spotAngle - cosConeAngle)/epsilon, 0.0, 1.0);\n        spotIntensity = pow(spotIntensity, max(0.01, spotExponent));\n\n        return max(0., spotIntensity);\n    }\n#endif\n\n\n\n{{PHONG_FRAGMENT_HEAD}}\n\n\nvoid main()\n{\n    {{MODULE_BEGIN_FRAG}}\n\n    vec4 col=vec4(0., 0., 0., inDiffuseColor.a);\n    vec3 calculatedColor = vec3(0.);\n    vec3 normal = normalize(normInterpolated);\n    vec3 baseColor = inDiffuseColor.rgb;\n\n    {{MODULE_BASE_COLOR}}\n\n\n    vec3 viewDirection = normalize(v_viewDirection);\n\n    #ifdef DOUBLE_SIDED\n        if(!gl_FrontFacing) normal = normal * -1.0;\n    #endif\n\n    #ifdef HAS_TEXTURES\n        #ifdef HAS_TEXTURE_DIFFUSE\n            baseColor = texture(texDiffuse, texCoord).rgb;\n\n            #ifdef COLORIZE_TEXTURE\n                baseColor *= inDiffuseColor.rgb;\n            #endif\n        #endif\n\n        #ifdef HAS_TEXTURE_NORMAL\n            normal = texture(texNormal, texCoord).rgb;\n            normal = normalize(normal * 2. - 1.);\n            float normalIntensity = inTextureIntensities.NORMAL;\n            normal = normalize(mix(vec3(0., 0., 1.), normal, 2. * normalIntensity));\n            normal = normalize(TBN_Matrix * normal);\n        #endif\n    #endif\n\n    {{PHONG_FRAGMENT_BODY}}\n\n\n\n\n\n\n    #ifdef ENABLE_FRESNEL\n        calculatedColor += inFresnel.rgb * (CalculateFresnel(vec3(cameraSpace_pos), normal) * inFresnel.w * inFresnelWidthExponent.x);\n    #endif\n\n     #ifdef HAS_TEXTURE_ALPHA\n        #ifdef ALPHA_MASK_ALPHA\n            col.a*=texture(texAlpha,texCoord).a;\n        #endif\n        #ifdef ALPHA_MASK_LUMI\n            col.a*= dot(vec3(0.2126,0.7152,0.0722), texture(texAlpha,texCoord).rgb);\n        #endif\n        #ifdef ALPHA_MASK_R\n            col.a*=texture(texAlpha,texCoord).r;\n        #endif\n        #ifdef ALPHA_MASK_G\n            col.a*=texture(texAlpha,texCoord).g;\n        #endif\n        #ifdef ALPHA_MASK_B\n            col.a*=texture(texAlpha,texCoord).b;\n        #endif\n    #endif\n\n    #ifdef DISCARDTRANS\n        if(col.a<0.2) discard;\n    #endif\n\n\n    #ifdef HAS_TEXTURE_ENV\n        vec3 luminanceColor = vec3(0.);\n\n        #ifndef ENVMAP_MATCAP\n            float environmentMapWidth = inEnvMapWidth;\n            float glossyExponent = inMaterialProperties.SHININESS;\n            float glossyCoefficient = inMaterialProperties.SPECULAR_AMT;\n\n            vec3 envMapNormal =  normal;\n            vec3 reflectDirection = reflect(normalize(-viewDirection), normal);\n\n            float lambertianCoefficient = dot(viewDirection, reflectDirection); //0.44; // TODO: need prefiltered map for this\n            // lambertianCoefficient = 1.;\n            float specularAngle = max(dot(reflectDirection, viewDirection), 0.);\n            float specularFactor = pow(specularAngle, max(0., inMaterialProperties.SHININESS));\n\n            glossyExponent = specularFactor;\n\n            float maxMIPLevel = 10.;\n            float MIPlevel = log2(environmentMapWidth / 1024. * sqrt(3.)) - 0.5 * log2(glossyExponent + 1.);\n\n            luminanceColor = inEnvMapIntensity * (\n                inDiffuseColor.rgb *\n                SAMPLETEX(texEnv, envMapNormal, maxMIPLevel).rgb\n                +\n                glossyCoefficient * SAMPLETEX(texEnv, reflectDirection, MIPlevel).rgb\n            );\n        #endif\n        #ifdef ENVMAP_MATCAP\n            luminanceColor = inEnvMapIntensity * (\n                texture(texEnv, getMatCapUV(viewSpacePosition, viewSpaceNormal)).rgb\n                //inDiffuseColor.rgb\n                //* textureLod(texEnv, getMatCapUV(envMapNormal), maxMIPLevel).rgb\n                //+\n                //glossyCoefficient * textureLod(texEnv, getMatCapUV(reflectDirection), MIPlevel).rgb\n            );\n        #endif\n\n\n\n        #ifdef HAS_TEXTURE_LUMINANCE_MASK\n            luminanceColor *= texture(texLuminance, texCoord).r * inLuminanceMaskIntensity;\n        #endif\n\n        #ifdef HAS_TEXTURE_AO\n            // luminanceColor *= mix(vec3(1.), texture(texAO, texCoord).rgb, inTextureIntensities.AO);\n            luminanceColor *= texture(texAO, texCoord).g*inTextureIntensities.AO;\n        #endif\n\n        #ifdef ENV_BLEND_ADD\n            calculatedColor.rgb += luminanceColor;\n        #endif\n        #ifdef ENV_BLEND_MUL\n            calculatedColor.rgb *= luminanceColor;\n        #endif\n\n        #ifdef ENV_BLEND_MIX\n            calculatedColor.rgb=mix(luminanceColor,calculatedColor.rgb,luminanceColor);\n        #endif\n\n\n    #endif\n\n    #ifdef ADD_EMISSIVE_COLOR\n        vec3 emissiveRadiance = mix(calculatedColor, inEmissiveColor.rgb, inEmissiveColor.w); // .w = intensity of color;\n\n        #ifdef HAS_TEXTURE_EMISSIVE\n            float emissiveIntensity = inTextureIntensities.EMISSIVE;\n            emissiveRadiance = mix(calculatedColor, texture(texEmissive, texCoord).rgb, emissiveIntensity);\n        #endif\n\n        #ifdef HAS_TEXTURE_EMISSIVE_MASK\n           float emissiveMixValue = mix(1., texture(texMaskEmissive, texCoord).r, inEmissiveMaskIntensity);\n           calculatedColor = mix(calculatedColor, emissiveRadiance, emissiveMixValue);\n        #endif\n\n        #ifndef HAS_TEXTURE_EMISSIVE_MASK\n            calculatedColor = emissiveRadiance;\n        #endif\n    #endif\n\n    col.rgb = clamp(calculatedColor, 0., 1.);\n\n\n    {{MODULE_COLOR}}\n\n    outColor = col;\n}\n',phong_vert:"\n{{MODULES_HEAD}}\n\n#define NONE -1\n#define AMBIENT 0\n#define POINT 1\n#define DIRECTIONAL 2\n#define SPOT 3\n\n#define TEX_REPEAT_X x;\n#define TEX_REPEAT_Y y;\n#define TEX_OFFSET_X z;\n#define TEX_OFFSET_Y w;\n\nIN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN vec3 attrVertNormal;\nIN float attrVertIndex;\nIN vec3 attrTangent;\nIN vec3 attrBiTangent;\n\nOUT vec2 texCoord;\nOUT vec3 normInterpolated;\nOUT vec3 fragPos;\n\n#ifdef HAS_TEXTURE_NORMAL\n    OUT mat3 TBN_Matrix; // tangent bitangent normal space transform matrix\n#endif\n\n#ifdef ENABLE_FRESNEL\n    OUT vec4 cameraSpace_pos;\n#endif\n\nOUT vec3 v_viewDirection;\nOUT mat3 normalMatrix;\nOUT mat4 mvMatrix;\n\n#ifdef HAS_TEXTURES\n    UNI vec4 inTextureRepeatOffset;\n#endif\n\nUNI vec3 camPos;\nUNI mat4 projMatrix;\nUNI mat4 viewMatrix;\nUNI mat4 modelMatrix;\n\n#ifdef ENVMAP_MATCAP\n    OUT vec3 viewSpaceNormal;\n    OUT vec3 viewSpacePosition;\n#endif\n\n\nmat3 transposeMat3(mat3 m)\n{\n    return mat3(m[0][0], m[1][0], m[2][0],\n        m[0][1], m[1][1], m[2][1],\n        m[0][2], m[1][2], m[2][2]);\n}\n\nmat3 inverseMat3(mat3 m)\n{\n    float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\n    float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\n    float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\n\n    float b01 = a22 * a11 - a12 * a21;\n    float b11 = -a22 * a10 + a12 * a20;\n    float b21 = a21 * a10 - a11 * a20;\n\n    float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n        b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n        b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n}\n\nvoid main()\n{\n    mat4 mMatrix=modelMatrix;\n    vec4 pos=vec4(vPosition,  1.0);\n\n    texCoord=attrTexCoord;\n    texCoord.y = 1. - texCoord.y;\n    vec3 norm=attrVertNormal;\n\n    vec3 tangent = attrTangent;\n    vec3 bitangent = attrBiTangent;\n\n    {{MODULE_VERTEX_POSITION}}\n\n    normalMatrix = transposeMat3(inverseMat3(mat3(mMatrix)));\n    mvMatrix = (viewMatrix * mMatrix);\n\n\n\n    #ifdef ENABLE_FRESNEL\n        cameraSpace_pos = mvMatrix * pos;\n    #endif\n\n    #ifdef HAS_TEXTURES\n        float repeatX = inTextureRepeatOffset.TEX_REPEAT_X;\n        float offsetX = inTextureRepeatOffset.TEX_OFFSET_X;\n        float repeatY = inTextureRepeatOffset.TEX_REPEAT_Y;\n        float offsetY = inTextureRepeatOffset.TEX_OFFSET_Y;\n\n        texCoord.x *= repeatX;\n        texCoord.x += offsetX;\n        texCoord.y *= repeatY;\n        texCoord.y += offsetY;\n    #endif\n\n   normInterpolated = vec3(normalMatrix*norm);\n\n    #ifdef HAS_TEXTURE_NORMAL\n        vec3 normCameraSpace = normalize((vec4(normInterpolated, 0.0)).xyz);\n        vec3 tangCameraSpace = normalize((mMatrix * vec4(tangent, 0.0)).xyz);\n        vec3 bitangCameraSpace = normalize((mMatrix * vec4(bitangent, 0.0)).xyz);\n\n        // re orthogonalization for smoother normals\n        tangCameraSpace = normalize(tangCameraSpace - dot(tangCameraSpace, normCameraSpace) * normCameraSpace);\n        bitangCameraSpace = cross(normCameraSpace, tangCameraSpace);\n\n        TBN_Matrix = mat3(tangCameraSpace, bitangCameraSpace, normCameraSpace);\n    #endif\n\n    fragPos = vec3((mMatrix) * pos);\n    v_viewDirection = normalize(camPos - fragPos);\n    // modelPos=mMatrix*pos;\n\n    #ifdef ENVMAP_MATCAP\n        mat3 viewSpaceNormalMatrix = normalMatrix = transposeMat3(inverseMat3(mat3(mvMatrix)));\n        viewSpaceNormal = normalize(viewSpaceNormalMatrix * norm);\n        viewSpacePosition = vec3(mvMatrix * pos);\n    #endif\n    gl_Position = projMatrix * mvMatrix * pos;\n}\n",snippet_body_ambient_frag:"    // * AMBIENT LIGHT {{LIGHT_INDEX}} *\n    vec3 diffuseColor{{LIGHT_INDEX}} = phongLight{{LIGHT_INDEX}}.lightProperties.INTENSITY*phongLight{{LIGHT_INDEX}}.color;\n    calculatedColor += diffuseColor{{LIGHT_INDEX}};\n",snippet_body_directional_frag:"    // * DIRECTIONAL LIGHT {{LIGHT_INDEX}} *\n\n    if (phongLight{{LIGHT_INDEX}}.castLight == 1) {\n        vec3 phongLightDirection{{LIGHT_INDEX}} = normalize(phongLight{{LIGHT_INDEX}}.position);\n\n        float phongLambert{{LIGHT_INDEX}} = 1.; // inout variable\n\n        vec3 lightColor{{LIGHT_INDEX}} = phongLight{{LIGHT_INDEX}}.color;\n        vec3 lightSpecular{{LIGHT_INDEX}} = phongLight{{LIGHT_INDEX}}.specular;\n\n        #ifdef HAS_TEXTURES\n            #ifdef HAS_TEXTURE_AO\n                // lightColor{{LIGHT_INDEX}} *= mix(vec3(1.), texture(texAO, texCoord).rgb, inTextureIntensities.AO);\n                lightColor{{LIGHT_INDEX}} *= texture(texAO, texCoord).g, inTextureIntensities.AO;\n\n            #endif\n\n            #ifdef HAS_TEXTURE_SPECULAR\n                lightSpecular{{LIGHT_INDEX}} *= mix(1., texture(texSpecular, texCoord).r, inTextureIntensities.SPECULAR);\n            #endif\n        #endif\n\n        vec3 diffuseColor{{LIGHT_INDEX}} = CalculateDiffuseColor(phongLightDirection{{LIGHT_INDEX}}, viewDirection, normal, lightColor{{LIGHT_INDEX}}, baseColor, phongLambert{{LIGHT_INDEX}});\n        vec3 specularColor{{LIGHT_INDEX}} = CalculateSpecularColor(\n            lightSpecular{{LIGHT_INDEX}},\n            inMaterialProperties.SPECULAR_AMT,\n            inMaterialProperties.SHININESS,\n            phongLightDirection{{LIGHT_INDEX}},\n            viewDirection,\n            normal,\n            phongLambert{{LIGHT_INDEX}}\n        );\n\n        vec3 combinedColor{{LIGHT_INDEX}} = (diffuseColor{{LIGHT_INDEX}} + specularColor{{LIGHT_INDEX}});\n\n        vec3 lightModelDiff{{LIGHT_INDEX}} = phongLight{{LIGHT_INDEX}}.position - fragPos.xyz;\n\n        combinedColor{{LIGHT_INDEX}} *= phongLight{{LIGHT_INDEX}}.lightProperties.INTENSITY;\n        calculatedColor += combinedColor{{LIGHT_INDEX}};\n    }",snippet_body_point_frag:"// * POINT LIGHT {{LIGHT_INDEX}} *\n    if (phongLight{{LIGHT_INDEX}}.castLight == 1) {\n        vec3 phongLightDirection{{LIGHT_INDEX}} = phongLight{{LIGHT_INDEX}}.position - fragPos.xyz;\n        // * get length before normalization for falloff calculation\n        phongLightDirection{{LIGHT_INDEX}} = normalize(phongLightDirection{{LIGHT_INDEX}});\n        float phongLightDistance{{LIGHT_INDEX}} = length(phongLightDirection{{LIGHT_INDEX}});\n\n        float phongLambert{{LIGHT_INDEX}} = 1.; // inout variable\n\n        vec3 lightColor{{LIGHT_INDEX}} = phongLight{{LIGHT_INDEX}}.color;\n        vec3 lightSpecular{{LIGHT_INDEX}} = phongLight{{LIGHT_INDEX}}.specular;\n\n        #ifdef HAS_TEXTURES\n            #ifdef HAS_TEXTURE_AO\n                // lightColor{{LIGHT_INDEX}} *= mix(vec3(1.), texture(texAO, texCoord).rgb, inTextureIntensities.AO);\n                lightColor{{LIGHT_INDEX}} *= texture(texAO, texCoord).g, inTextureIntensities.AO;\n\n            #endif\n\n            #ifdef HAS_TEXTURE_SPECULAR\n                lightSpecular{{LIGHT_INDEX}} *= mix(1., texture(texSpecular, texCoord).r, inTextureIntensities.SPECULAR);\n            #endif\n        #endif\n\n        vec3 diffuseColor{{LIGHT_INDEX}} = CalculateDiffuseColor(phongLightDirection{{LIGHT_INDEX}}, viewDirection, normal, lightColor{{LIGHT_INDEX}}, baseColor, phongLambert{{LIGHT_INDEX}});\n        vec3 specularColor{{LIGHT_INDEX}} = CalculateSpecularColor(\n            lightSpecular{{LIGHT_INDEX}},\n            inMaterialProperties.SPECULAR_AMT,\n            inMaterialProperties.SHININESS,\n            phongLightDirection{{LIGHT_INDEX}},\n            viewDirection,\n            normal,\n            phongLambert{{LIGHT_INDEX}}\n        );\n\n        vec3 combinedColor{{LIGHT_INDEX}} = (diffuseColor{{LIGHT_INDEX}} + specularColor{{LIGHT_INDEX}});\n\n        combinedColor{{LIGHT_INDEX}} *= phongLight{{LIGHT_INDEX}}.lightProperties.INTENSITY;\n\n        float attenuation{{LIGHT_INDEX}} = CalculateFalloff(\n            phongLightDistance{{LIGHT_INDEX}},\n            phongLightDirection{{LIGHT_INDEX}},\n            phongLight{{LIGHT_INDEX}}.lightProperties.FALLOFF,\n            phongLight{{LIGHT_INDEX}}.lightProperties.RADIUS\n        );\n\n        attenuation{{LIGHT_INDEX}} *= when_gt(phongLambert{{LIGHT_INDEX}}, 0.);\n        combinedColor{{LIGHT_INDEX}} *= attenuation{{LIGHT_INDEX}};\n\n        calculatedColor += combinedColor{{LIGHT_INDEX}};\n    }\n",snippet_body_spot_frag:"    // * SPOT LIGHT {{LIGHT_INDEX}} *\n    if (phongLight{{LIGHT_INDEX}}.castLight == 1) {\n        vec3 phongLightDirection{{LIGHT_INDEX}} = phongLight{{LIGHT_INDEX}}.position - fragPos.xyz;\n        phongLightDirection{{LIGHT_INDEX}} = normalize( phongLightDirection{{LIGHT_INDEX}});\n        float phongLightDistance{{LIGHT_INDEX}} = length(phongLightDirection{{LIGHT_INDEX}});\n\n        float phongLambert{{LIGHT_INDEX}} = 1.; // inout variable\n\n        vec3 lightColor{{LIGHT_INDEX}} = phongLight{{LIGHT_INDEX}}.color;\n        vec3 lightSpecular{{LIGHT_INDEX}} = phongLight{{LIGHT_INDEX}}.specular;\n\n        #ifdef HAS_TEXTURES\n            #ifdef HAS_TEXTURE_AO\n                // lightColor{{LIGHT_INDEX}} *= mix(vec3(1.), texture(texAO, texCoord).rgb, inTextureIntensities.AO);\n                lightColor{{LIGHT_INDEX}} *= texture(texAO, texCoord).g, inTextureIntensities.AO;\n\n            #endif\n\n            #ifdef HAS_TEXTURE_SPECULAR\n                lightSpecular{{LIGHT_INDEX}} *= mix(1., texture(texSpecular, texCoord).r, inTextureIntensities.SPECULAR);\n            #endif\n        #endif\n\n        vec3 diffuseColor{{LIGHT_INDEX}} = CalculateDiffuseColor(phongLightDirection{{LIGHT_INDEX}}, viewDirection, normal, lightColor{{LIGHT_INDEX}}, baseColor, phongLambert{{LIGHT_INDEX}});\n        vec3 specularColor{{LIGHT_INDEX}} = CalculateSpecularColor(\n            lightSpecular{{LIGHT_INDEX}},\n            inMaterialProperties.SPECULAR_AMT,\n            inMaterialProperties.SHININESS,\n            phongLightDirection{{LIGHT_INDEX}},\n            viewDirection,\n            normal,\n            phongLambert{{LIGHT_INDEX}}\n        );\n\n        vec3 combinedColor{{LIGHT_INDEX}} = (diffuseColor{{LIGHT_INDEX}} + specularColor{{LIGHT_INDEX}});\n\n        float spotIntensity{{LIGHT_INDEX}} = CalculateSpotLightEffect(\n            phongLight{{LIGHT_INDEX}}.position, phongLight{{LIGHT_INDEX}}.conePointAt, phongLight{{LIGHT_INDEX}}.spotProperties.COSCONEANGLE,\n            phongLight{{LIGHT_INDEX}}.spotProperties.COSCONEANGLEINNER, phongLight{{LIGHT_INDEX}}.spotProperties.SPOTEXPONENT,\n            phongLightDirection{{LIGHT_INDEX}}\n        );\n\n        combinedColor{{LIGHT_INDEX}} *= spotIntensity{{LIGHT_INDEX}};\n\n        vec3 lightModelDiff{{LIGHT_INDEX}} = phongLight{{LIGHT_INDEX}}.position - fragPos.xyz;\n\n        float attenuation{{LIGHT_INDEX}} = CalculateFalloff(\n            phongLightDistance{{LIGHT_INDEX}},\n            phongLightDirection{{LIGHT_INDEX}},\n            phongLight{{LIGHT_INDEX}}.lightProperties.FALLOFF,\n            phongLight{{LIGHT_INDEX}}.lightProperties.RADIUS\n        );\n\n        attenuation{{LIGHT_INDEX}} *= when_gt(phongLambert{{LIGHT_INDEX}}, 0.);\n\n        combinedColor{{LIGHT_INDEX}} *= attenuation{{LIGHT_INDEX}};\n\n        combinedColor{{LIGHT_INDEX}} *= phongLight{{LIGHT_INDEX}}.lightProperties.INTENSITY;\n        calculatedColor += combinedColor{{LIGHT_INDEX}};\n    }",snippet_head_frag:"UNI Light phongLight{{LIGHT_INDEX}};\n"};const t=e.patch.cgl;const n=o.snippet_head_frag;const i={point:o.snippet_body_point_frag,spot:o.snippet_body_spot_frag,ambient:o.snippet_body_ambient_frag,directional:o.snippet_body_directional_frag,area:o.snippet_body_area_frag};const a=new RegExp("{{LIGHT_INDEX}}","g");const l=e=>n.replace("{{LIGHT_INDEX}}",e);const u=(e,t)=>i[t].replace(a,e);function r(){const e=o.phong_vert;let t=o.phong_frag;let n="";let i="";n=n.concat(l(0));i=i.concat(u(0,at[0].type));t=t.replace(pe,n);t=t.replace(_e,i);de.setSource(e,t);de.define("HAS_POINT");de.removeDefine("HAS_SPOT");de.removeDefine("HAS_DIRECTIONAL");de.removeDefine("HAS_AMBIENT")}const s=e.inTrigger("Trigger In");const h=e.inFloat("R",Math.random());const c=e.inFloat("G",Math.random());const f=e.inFloat("B",Math.random());const m=e.inFloatSlider("A",1);const d=[h,c,f,m];e.setPortGroup("Diffuse Color",d);const g=e.inBool("Enable",false);const p=e.inFloatSlider("Albedo",.707);const _=e.inFloatSlider("Roughness",.835);g.setUiAttribs({hidePort:true});p.setUiAttribs({greyout:true});_.setUiAttribs({greyout:true});h.setUiAttribs({colorPick:true});e.setPortGroup("Oren-Nayar Diffuse",[g,p,_]);g.onChange=function(){de.toggleDefine("ENABLE_OREN_NAYAR_DIFFUSE",g);p.setUiAttribs({greyout:!g.get()});_.setUiAttribs({greyout:!g.get()})};const v=e.inValueBool("Active",false);v.setUiAttribs({hidePort:true});const b=e.inValueSlider("Fresnel Intensity",.7);const x=e.inFloat("Fresnel Width",1);const O=e.inFloat("Fresnel Exponent",6);const A=e.inFloat("Fresnel R",1);const S=e.inFloat("Fresnel G",1);const C=e.inFloat("Fresnel B",1);A.setUiAttribs({colorPick:true});const E=[b,x,O,A,S,C];E.forEach(function(e){e.setUiAttribs({greyout:true})});e.setPortGroup("Fresnel",E.concat([v]));let T=null;let I=null;v.onChange=function(){de.toggleDefine("ENABLE_FRESNEL",v);if(v.get()){if(!T)T=new CGL.Uniform(de,"4f","inFresnel",A,S,C,b);if(!I)I=new CGL.Uniform(de,"2f","inFresnelWidthExponent",x,O)}else{if(T){de.removeUniform("inFresnel");T=null}if(I){de.removeUniform("inFresnelWidthExponent");I=null}}E.forEach(function(e){e.setUiAttribs({greyout:!v.get()})})};const y=e.inBool("Emissive Active",false);const M=e.inFloatSlider("Color Intensity",.3);const L=e.inFloatSlider("Emissive R",Math.random());const N=e.inFloatSlider("Emissive G",Math.random());const P=e.inFloatSlider("Emissive B",Math.random());L.setUiAttribs({colorPick:true});e.setPortGroup("Emissive Color",[y,M,L,N,P]);M.setUiAttribs({greyout:!y.get()});L.setUiAttribs({greyout:!y.get()});N.setUiAttribs({greyout:!y.get()});P.setUiAttribs({greyout:!y.get()});let w=null;y.onChange=()=>{de.toggleDefine("ADD_EMISSIVE_COLOR",y);if(y.get()){w=new CGL.Uniform(de,"4f","inEmissiveColor",L,N,P,M);Y.setUiAttribs({greyout:false});W.setUiAttribs({greyout:false});if(Y.get())re.setUiAttribs({greyout:false});if(W.get())se.setUiAttribs({greyout:false})}else{e.log("ayayay");Y.setUiAttribs({greyout:true});W.setUiAttribs({greyout:true});re.setUiAttribs({greyout:true});se.setUiAttribs({greyout:true});de.removeUniform("inEmissiveColor");w=null}if(Y.get()){M.setUiAttribs({greyout:true});L.setUiAttribs({greyout:true});N.setUiAttribs({greyout:true});P.setUiAttribs({greyout:true})}else{if(y.get()){M.setUiAttribs({greyout:false});L.setUiAttribs({greyout:false});N.setUiAttribs({greyout:false});P.setUiAttribs({greyout:false})}else{M.setUiAttribs({greyout:true});L.setUiAttribs({greyout:true});N.setUiAttribs({greyout:true});P.setUiAttribs({greyout:true})}}};const D=e.inFloat("Shininess",4);const U=e.inFloatSlider("Specular Amount",.5);const R=e.inSwitch("Specular Model",["Blinn","Schlick","Phong","Gauss"],"Blinn");R.setUiAttribs({hidePort:true});const V=[D,U,R];e.setPortGroup("Specular",V);const B=e.inValueBool("Energy Conservation",false);const G=e.inBool("Double Sided Material",false);const j=e.inSwitch("Falloff Mode",["A","B","C","D"],"A");B.setUiAttribs({hidePort:true});G.setUiAttribs({hidePort:true});j.setUiAttribs({hidePort:true});j.onChange=()=>{const e=["A","B","C","D"];de.define("FALLOFF_MODE_"+j.get());e.filter(e=>e!==j.get()).forEach(e=>de.removeDefine("FALLOFF_MODE_"+e))};const k=[B,G,j];e.setPortGroup("Light Options",k);const F=e.inTexture("Diffuse Texture");const X=e.inTexture("Specular Texture");const z=e.inTexture("Normal Map");const H=e.inTexture("AO Texture");const Y=e.inTexture("Emissive Texture");const W=e.inTexture("Emissive Mask");const K=e.inTexture("Opacity Texture");const Z=e.inTexture("Environment Map");const Q=e.inTexture("Env Map Mask");e.setPortGroup("Textures",[F,X,z,H,Y,W,K,Z,Q]);const q=e.inBool("Colorize Texture",false);const J=e.inFloat("Diffuse Repeat X",1);const $=e.inFloat("Diffuse Repeat Y",1);const ee=e.inFloat("Texture Offset X",0);const te=e.inFloat("Texture Offset Y",0);const ne=e.inFloatSlider("Specular Intensity",1);const ie=e.inFloatSlider("Normal Map Intensity",.5);const ae=e.inFloatSlider("AO Intensity",1);const re=e.inFloatSlider("Emissive Intensity",1);const se=e.inFloatSlider("Emissive Mask Intensity",1);const oe=e.inFloatSlider("Env Map Intensity",1);const le=e.inSwitch("Env Map Blend",["Add","Multiply","Mix"],"Add");const ue=e.inFloatSlider("Env Mask Intensity",1);q.setUiAttribs({hidePort:true});e.setPortGroup("Texture Transforms",[q,$,J,te,ee]);e.setPortGroup("Texture Intensities",[ie,ae,ne,re,le,se,oe,ue]);const he=e.inSwitch("Alpha Mask Source",["Luminance","R","G","B","A"],"Luminance");he.setUiAttribs({greyout:true});const ce=e.inValueBool("Discard Transparent Pixels");ce.setUiAttribs({hidePort:true});e.setPortGroup("Opacity Texture",[he,ce]);const fe=e.outTrigger("Trigger Out");const me=e.outObject("Shader",null,"shader");me.ignoreValueSerialize=true;const de=new CGL.Shader(t,"phongmaterial_"+e.id);de.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG","MODULE_BASE_COLOR"]);de.setSource(o.simosphong_vert,o.simosphong_frag);let ge=false;de.define("FALLOFF_MODE_A");if(t.glVersion<2){de.enableExtension("GL_OES_standard_derivatives");if(t.gl.getExtension("OES_texture_float"))de.enableExtension("GL_OES_texture_float");else e.log("error loading extension OES_texture_float");if(t.gl.getExtension("OES_texture_float_linear"))de.enableExtension("GL_OES_texture_float_linear");else e.log("error loading extention OES_texture_float_linear");if(t.gl.getExtension("GL_OES_texture_half_float"))de.enableExtension("GL_OES_texture_half_float");else e.log("error loading extention GL_OES_texture_half_float");if(t.gl.getExtension("GL_OES_texture_half_float_linear"))de.enableExtension("GL_OES_texture_half_float_linear");else e.log("error loading extention GL_OES_texture_half_float_linear")}const pe=new RegExp("{{PHONG_FRAGMENT_HEAD}}","g");const _e=new RegExp("{{PHONG_FRAGMENT_BODY}}","g");const ve={directional:false,spot:false,ambient:false,point:false};function be(t){let e=o.phong_frag;let n="";let i="";ve.directional=false;ve.spot=false;ve.ambient=false;ve.point=false;for(let e=0;e<t.length;e+=1){const a=t[e];const r=a.type;if(!ve[r]){ve[r]=true}n=n.concat(l(e));i=i.concat(u(e,a.type))}e=e.replace(pe,n);e=e.replace(_e,i);de.setSource(o.phong_vert,e);for(let e=0,t=Object.keys(ve);e<t.length;e+=1){const s=t[e];if(ve[s]){if(!de.hasDefine("HAS_"+s.toUpperCase())){de.define("HAS_"+s.toUpperCase())}}else{if(de.hasDefine("HAS_"+s.toUpperCase())){de.removeDefine("HAS_"+s.toUpperCase())}}}}me.set(de);let xe=null;let Oe=null;let Ae=null;let Se=null;let Ce=null;let Ee=null;let Te=null;let Ie=null;let ye=null;let Me=null;let Le=null;let Ne=null;let Pe=null;q.onChange=function(){de.toggleDefine("COLORIZE_TEXTURE",q.get())};function we(){if(F.get()){if(!de.hasDefine("HAS_TEXTURE_DIFFUSE")){de.define("HAS_TEXTURE_DIFFUSE");if(!xe)xe=new CGL.Uniform(de,"t","texDiffuse",0)}}else{de.removeUniform("texDiffuse");de.removeDefine("HAS_TEXTURE_DIFFUSE");xe=null}}function De(){if(X.get()){ne.setUiAttribs({greyout:false});if(!de.hasDefine("HAS_TEXTURE_SPECULAR")){de.define("HAS_TEXTURE_SPECULAR");if(!Oe)Oe=new CGL.Uniform(de,"t","texSpecular",0)}}else{ne.setUiAttribs({greyout:true});de.removeUniform("texSpecular");de.removeDefine("HAS_TEXTURE_SPECULAR");Oe=null}}function Ue(){if(z.get()){ie.setUiAttribs({greyout:false});if(!de.hasDefine("HAS_TEXTURE_NORMAL")){de.define("HAS_TEXTURE_NORMAL");if(!Ae)Ae=new CGL.Uniform(de,"t","texNormal",0)}}else{ie.setUiAttribs({greyout:true});de.removeUniform("texNormal");de.removeDefine("HAS_TEXTURE_NORMAL");Ae=null}}Se=new CGL.Uniform(de,"t","texAO");function Re(){de.toggleDefine("HAS_TEXTURE_AO",H.get());ae.setUiAttribs({greyout:!H.get()})}function Ve(){if(Y.get()){L.setUiAttribs({greyout:true});N.setUiAttribs({greyout:true});P.setUiAttribs({greyout:true});M.setUiAttribs({greyout:true});if(y.get()){re.setUiAttribs({greyout:false})}if(!de.hasDefine("HAS_TEXTURE_EMISSIVE")){de.define("HAS_TEXTURE_EMISSIVE");if(!Ce)Ce=new CGL.Uniform(de,"t","texEmissive",0)}}else{re.setUiAttribs({greyout:true});if(y.get()){L.setUiAttribs({greyout:false});N.setUiAttribs({greyout:false});P.setUiAttribs({greyout:false});M.setUiAttribs({greyout:false})}else{Y.setUiAttribs({greyout:true})}de.removeUniform("texEmissive");de.removeDefine("HAS_TEXTURE_EMISSIVE");Ce=null}}function Be(){if(W.get()){if(y.get()){se.setUiAttribs({greyout:false})}if(!de.hasDefine("HAS_TEXTURE_EMISSIVE_MASK")){de.define("HAS_TEXTURE_EMISSIVE_MASK");if(!Ee)Ee=new CGL.Uniform(de,"t","texMaskEmissive",0);if(!Te)Te=new CGL.Uniform(de,"f","inEmissiveMaskIntensity",se)}}else{if(!y.get()){W.setUiAttribs({greyout:true})}se.setUiAttribs({greyout:true});de.removeUniform("texMaskEmissive");de.removeUniform("inEmissiveMaskIntensity");de.removeDefine("HAS_TEXTURE_EMISSIVE_MASK");Ee=null;Te=null}}let Ge=false;function je(){de.toggleDefine("HAS_TEXTURE_ENV",Z.get());oe.setUiAttribs({greyout:!Z.get()});if(Z.get()){if(!ye)ye=new CGL.Uniform(de,"t","texEnv",0);de.toggleDefine("TEX_FORMAT_CUBEMAP",Z.get().cubemap);if(Z.get().cubemap){de.removeDefine("TEX_FORMAT_EQUIRECT");de.removeDefine("ENVMAP_MATCAP");if(!Me)Me=new CGL.Uniform(de,"f","inEnvMapIntensity",oe);if(!Le)Le=new CGL.Uniform(de,"f","inEnvMapWidth",Z.get().cubemap.width)}else{const e=Z.get().width===Z.get().height;de.toggleDefine("TEX_FORMAT_EQUIRECT",!e);de.toggleDefine("ENVMAP_MATCAP",e);if(!Me)Me=new CGL.Uniform(de,"f","inEnvMapIntensity",oe);if(!Le)Le=new CGL.Uniform(de,"f","inEnvMapWidth",Z.get().width)}}else{de.removeUniform("inEnvMapIntensity");de.removeUniform("inEnvMapWidth");de.removeUniform("texEnv");de.removeDefine("HAS_TEXTURE_ENV");de.removeDefine("ENVMAP_MATCAP");ye=null;Me=null}Ge=false}function ke(){if(Q.get()){ue.setUiAttribs({greyout:false});if(!Ne){de.define("HAS_TEXTURE_LUMINANCE_MASK");Ne=new CGL.Uniform(de,"t","texLuminance",0);Pe=new CGL.Uniform(de,"f","inLuminanceMaskIntensity",ue)}}else{ue.setUiAttribs({greyout:true});de.removeDefine("HAS_TEXTURE_LUMINANCE_MASK");de.removeUniform("inLuminanceMaskIntensity");de.removeUniform("texLuminance");Ne=null;Pe=null}}function Fe(){de.toggleDefine("ENV_BLEND_ADD",le.get()=="Add");de.toggleDefine("ENV_BLEND_MUL",le.get()=="Multiply");de.toggleDefine("ENV_BLEND_MIX",le.get()=="Mix");de.toggleDefine("ALPHA_MASK_ALPHA",he.get()=="Alpha Channel");de.toggleDefine("ALPHA_MASK_LUMI",he.get()=="Luminance");de.toggleDefine("ALPHA_MASK_R",he.get()=="R");de.toggleDefine("ALPHA_MASK_G",he.get()=="G");de.toggleDefine("ALPHA_MASK_B",he.get()=="B")}le.onChange=Fe;he.onChange=Fe;function Xe(){if(K.get()){if(Ie!==null)return;de.removeUniform("texAlpha");de.define("HAS_TEXTURE_ALPHA");if(!Ie)Ie=new CGL.Uniform(de,"t","texAlpha",0);he.setUiAttribs({greyout:false});ce.setUiAttribs({greyout:false})}else{de.removeUniform("texAlpha");de.removeDefine("HAS_TEXTURE_ALPHA");Ie=null;he.setUiAttribs({greyout:true});ce.setUiAttribs({greyout:true})}Fe()}ce.onChange=function(){de.toggleDefine("DISCARDTRANS",ce.get())};F.onChange=we;X.onChange=De;z.onChange=Ue;H.onChange=Re;Y.onChange=Ve;W.onChange=Be;K.onChange=Xe;Z.onChange=()=>{Ge=true};Q.onChange=ke;const ze=t.maxUniformsFrag;const He=ze===64?6:16;de.define("MAX_LIGHTS",He.toString());de.define("SPECULAR_PHONG");R.onChange=function(){if(R.get()==="Phong"){de.define("SPECULAR_PHONG");de.removeDefine("SPECULAR_BLINN");de.removeDefine("SPECULAR_GAUSS");de.removeDefine("SPECULAR_SCHLICK")}else if(R.get()==="Blinn"){de.define("SPECULAR_BLINN");de.removeDefine("SPECULAR_PHONG");de.removeDefine("SPECULAR_GAUSS");de.removeDefine("SPECULAR_SCHLICK")}else if(R.get()==="Gauss"){de.define("SPECULAR_GAUSS");de.removeDefine("SPECULAR_BLINN");de.removeDefine("SPECULAR_PHONG");de.removeDefine("SPECULAR_SCHLICK")}else if(R.get()==="Schlick"){de.define("SPECULAR_SCHLICK");de.removeDefine("SPECULAR_BLINN");de.removeDefine("SPECULAR_PHONG");de.removeDefine("SPECULAR_GAUSS")}};B.onChange=function(){de.toggleDefine("CONSERVE_ENERGY",B.get())};G.onChange=function(){de.toggleDefine("DOUBLE_SIDED",G.get())};const Ye=new CGL.Uniform(de,"4f","inMaterialProperties",p,_,D,U);const We=new CGL.Uniform(de,"4f","inDiffuseColor",h,c,f,m);const Ke=new CGL.Uniform(de,"4f","inTextureIntensities",ie,ae,ne,re);const Ze=new CGL.Uniform(de,"4f","inTextureRepeatOffset",J,$,ee,te);de.uniformColorDiffuse=We;const Qe=[];let qe=0;function Je(t){for(let e=0;e<Qe.length;e+=1){Qe[e]=null}for(let e=0;e<t;e+=1){Qe[e]=null;if(!Qe[e]){Qe[e]={color:new CGL.Uniform(de,"3f","phongLight"+e+".color",[1,1,1]),position:new CGL.Uniform(de,"3f","phongLight"+e+".position",[0,11,0]),specular:new CGL.Uniform(de,"3f","phongLight"+e+".specular",[1,1,1]),lightProperties:new CGL.Uniform(de,"4f","phongLight"+e+".lightProperties",[1,1,1,1]),conePointAt:new CGL.Uniform(de,"3f","phongLight"+e+".conePointAt",vec3.create()),spotProperties:new CGL.Uniform(de,"3f","phongLight"+e+".spotProperties",[0,0,0,0]),castLight:new CGL.Uniform(de,"i","phongLight"+e+".castLight",1)}}}}function $e(e){nt.position.setValue(e.position);nt.color.setValue(e.color);nt.specular.setValue(e.specular);nt.lightProperties.setValue([e.intensity,e.attenuation,e.falloff,e.radius]);nt.conePointAt.setValue(e.conePointAt);nt.spotProperties.setValue([e.cosConeAngle,e.cosConeAngleInner,e.spotExponent])}function et(t){for(let e=0;e<t.length;e+=1){const n=t[e];n.isUsed=true;Qe[e].position.setValue(n.position);Qe[e].color.setValue(n.color);Qe[e].specular.setValue(n.specular);Qe[e].lightProperties.setValue([n.intensity,n.attenuation,n.falloff,n.radius]);Qe[e].conePointAt.setValue(n.conePointAt);Qe[e].spotProperties.setValue([n.cosConeAngle,n.cosConeAngleInner,n.spotExponent]);Qe[e].castLight.setValue(n.castLight)}}function tt(e){if(e.length!==qe){be(e);Je(e.length);qe=e.length;et(e);ge=false}else{if(ge){be(e);Je(e.length);ge=false}et(e)}}let nt=null;function it(){nt={color:new CGL.Uniform(de,"3f","phongLight"+0+".color",[1,1,1]),specular:new CGL.Uniform(de,"3f","phongLight"+0+".specular",[1,1,1]),position:new CGL.Uniform(de,"3f","phongLight"+0+".position",[0,11,0]),lightProperties:new CGL.Uniform(de,"4f","phongLight"+0+".lightProperties",[1,1,1,1]),conePointAt:new CGL.Uniform(de,"3f","phongLight"+0+".conePointAt",vec3.create()),spotProperties:new CGL.Uniform(de,"3f","phongLight"+0+".spotProperties",[0,0,0,0]),castLight:new CGL.Uniform(de,"i","phongLight"+0+".castLight",1)}}const at=[{type:"point",position:[5,5,5],color:[1,1,1],specular:[1,1,1],intensity:1,attenuation:0,falloff:.5,radius:80,castLight:1}];const rt=mat4.create();function st(){if(t.frameStore.lightStack){if(t.frameStore.lightStack.length===0){e.setUiError("deflight","Default light is enabled. Please add lights to your patch to make this warning disappear.",1)}else e.setUiError("deflight",null)}if(!t.frameStore.lightStack||!t.frameStore.lightStack.length){if(!nt){r();it()}mat4.invert(rt,t.vMatrix);at[0].position=[rt[12],rt[13],rt[14]];$e(at[0]);qe=-1}else{if(de){if(t.frameStore.lightStack){if(t.frameStore.lightStack.length){nt=null;tt(t.frameStore.lightStack)}}}}}const ot=function(){if(!de){e.log("NO SHADER");return}t.pushShader(de);de.popTextures();fe.trigger();t.popShader()};e.preRender=function(){de.bind();ot()};const lt=mat4.create();const ut=vec3.create();const ht=vec3.create();s.onTriggered=function(){if(!de){e.log("phong has no shader...");return}if(Ge)je();t.setShader(de);de.popTextures();if(F.get())de.pushTexture(xe,F.get());if(X.get())de.pushTexture(Oe,X.get());if(z.get())de.pushTexture(Ae,z.get());if(H.get())de.pushTexture(Se,H.get());if(Y.get())de.pushTexture(Ce,Y.get());if(W.get())de.pushTexture(Ee,W.get());if(K.get())de.pushTexture(Ie,K.get());if(Z.get()){if(Z.get().cubemap)de.pushTexture(ye,Z.get().cubemap,t.gl.TEXTURE_CUBE_MAP);else de.pushTexture(ye,Z.get())}if(Q.get()){de.pushTexture(Ne,Q.get())}st();fe.trigger();t.setPreviousShader()};if(t.glVersion==1){if(!t.gl.getExtension("EXT_shader_texture_lod")){e.log("no EXT_shader_texture_lod texture extension")}else{de.enableExtension("GL_EXT_shader_texture_lod");t.gl.getExtension("OES_texture_float");t.gl.getExtension("OES_texture_float_linear");t.gl.getExtension("OES_texture_half_float");t.gl.getExtension("OES_texture_half_float_linear");de.enableExtension("GL_OES_standard_derivatives");de.enableExtension("GL_OES_texture_float");de.enableExtension("GL_OES_texture_float_linear");de.enableExtension("GL_OES_texture_half_float");de.enableExtension("GL_OES_texture_half_float_linear")}}we();De();Ue();Re();Xe();Ve();Be();je();ke()};Ops.Gl.Phong.PhongMaterial_v6.prototype=new CABLES.Op;CABLES.OPS["0d83ed06-cdbe-4fe0-87bb-0ccece7fb6e1"]={f:Ops.Gl.Phong.PhongMaterial_v6,objName:"Ops.Gl.Phong.PhongMaterial_v6"};Ops.Math.Divide=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueFloat("number1",1),i=e.inValueFloat("number2",2),a=e.outValue("result");n.onChange=i.onChange=r;r();function r(){a.set(n.get()/i.get())}};Ops.Math.Divide.prototype=new CABLES.Op;CABLES.OPS["86fcfd8c-038d-4b91-9820-a08114f6b7eb"]={f:Ops.Math.Divide,objName:"Ops.Math.Divide"};Ops.Gl.TextureEffects.Noise.SimplexNoise_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={simplexnoise_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float amount;\nUNI float smoothness;\nUNI float scale;\nUNI float seed;\nUNI float x;\nUNI float y;\nUNI float time;\nUNI float aspect;\nUNI float harmonics;\n\n#ifdef HAS_TEX_OFFSETMAP\n    UNI sampler2D texOffsetZ;\n    UNI float offMul;\n#endif\n\n\n#ifdef HAS_TEX_MASK\n    UNI sampler2D texMask;\n#endif\n\n\n\n{{CGL.BLENDMODES3}}\n\nvoid FAST32_hash_3D(    vec3 gridcell,\n                        vec3 v1_mask,       //  user definable v1 and v2.  ( 0s and 1s )\n                        vec3 v2_mask,\n                        out vec4 hash_0,\n                        out vec4 hash_1,\n                        out vec4 hash_2 )       //  generates 3 random numbers for each of the 4 3D cell corners.  cell  corners:  v0=0,0,0  v3=1,1,1  the other two are user definable\n{\n    //    gridcell is assumed to be an integer coordinate\n\n    //  TODO:   these constants need tweaked to find the best possible noise.\n    //          probably requires some kind of brute force computational searching or something....\n    const vec2 OFFSET = vec2( 50.0, 161.0 );\n    const float DOMAIN = 69.0;\n    const vec3 SOMELARGEFLOATS = vec3( 635.298681, 682.357502, 668.926525 );\n    const vec3 ZINC = vec3( 48.500388, 65.294118, 63.934599 );\n\n    //  truncate the domain\n    gridcell.xyz = gridcell.xyz - floor(gridcell.xyz * ( 1.0 / DOMAIN )) * DOMAIN;\n    vec3 gridcell_inc1 = step( gridcell, vec3( DOMAIN - 1.5 ) ) * ( gridcell + 1.0 );\n\n    //  compute x*x*y*y for the 4 corners\n    vec4 P = vec4( gridcell.xy, gridcell_inc1.xy ) + OFFSET.xyxy;\n    P *= P;\n    vec4 V1xy_V2xy = mix( P.xyxy, P.zwzw, vec4( v1_mask.xy, v2_mask.xy ) );     //  appl y mask for v1 and v2\n    P = vec4( P.x, V1xy_V2xy.xz, P.z ) * vec4( P.y, V1xy_V2xy.yw, P.w );\n\n    //  get the lowz and highz mods\n    vec3 lowz_mods = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + gridcell.zzz * ZINC.xyz ) );\n    vec3 highz_mods = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + gridcell_inc1.zzz * ZINC.xyz ) );\n\n    //  appl mask for v1 and v2 mod values\n    v1_mask = ( v1_mask.z < 0.5 ) ? lowz_mods : highz_mods;\n    v2_mask = ( v2_mask.z < 0.5 ) ? lowz_mods : highz_mods;\n\n    //  compute the final hash\n    hash_0 = fract( P * vec4( lowz_mods.x, v1_mask.x, v2_mask.x, highz_mods.x ) );\n    hash_1 = fract( P * vec4( lowz_mods.y, v1_mask.y, v2_mask.y, highz_mods.y ) );\n    hash_2 = fract( P * vec4( lowz_mods.z, v1_mask.z, v2_mask.z, highz_mods.z ) );\n}\n\n\n//\n//  Given an arbitrary 3D point this calculates the 4 vectors from the corners of the simplex pyramid to the point\n//  It also returns the integer grid index information for the corners\n//\nvoid Simplex3D_GetCornerVectors(    vec3 P,                 //  input point\n                                    out vec3 Pi,            //  integer grid index for the origin\n                                    out vec3 Pi_1,          //  offsets for the 2nd and 3rd corners.  ( the 4th = Pi + 1.0 )\n                                    out vec3 Pi_2,\n                                    out vec4 v1234_x,       //  vectors from the 4 corners to the intput point\n                                    out vec4 v1234_y,\n                                    out vec4 v1234_z )\n{\n    //\n    //  Simplex math from Stefan Gustavsons and Ian McEwans work at...\n    //  http://github.com/ashima/webgl-noise\n    //\n\n    //  simplex math constants\n    const float SKEWFACTOR = 1.0/3.0;\n    const float UNSKEWFACTOR = 1.0/6.0;\n    const float SIMPLEX_CORNER_POS = 0.5;\n    const float SIMPLEX_PYRAMID_HEIGHT = 0.70710678118654752440084436210485;    // sqrt( 0.5 )  height of simplex pyramid.\n\n    P *= SIMPLEX_PYRAMID_HEIGHT;        // scale space so we can have an approx feature size of 1.0  ( optional )\n\n    //  Find the vectors to the corners of our simplex pyramid\n    Pi = floor( P + dot( P, vec3( SKEWFACTOR) ) );\n    vec3 x0 = P - Pi + dot(Pi, vec3( UNSKEWFACTOR ) );\n    vec3 g = step(x0.yzx, x0.xyz);\n    vec3 l = 1.0 - g;\n    Pi_1 = min( g.xyz, l.zxy );\n    Pi_2 = max( g.xyz, l.zxy );\n    vec3 x1 = x0 - Pi_1 + UNSKEWFACTOR;\n    vec3 x2 = x0 - Pi_2 + SKEWFACTOR;\n    vec3 x3 = x0 - SIMPLEX_CORNER_POS;\n\n    //  pack them into a parallel-friendly arrangement\n    v1234_x = vec4( x0.x, x1.x, x2.x, x3.x );\n    v1234_y = vec4( x0.y, x1.y, x2.y, x3.y );\n    v1234_z = vec4( x0.z, x1.z, x2.z, x3.z );\n}\n\n//\n//  Calculate the weights for the 3D simplex surflet\n//\nvec4 Simplex3D_GetSurfletWeights(   vec4 v1234_x,\n                                    vec4 v1234_y,\n                                    vec4 v1234_z )\n{\n    //  perlins original implementation uses the surlet falloff formula of (0.6-x*x)^4.\n    //  This is buggy as it can cause discontinuities along simplex faces.  (0.5-x*x)^3 solves this and gives an almost identical curve\n\n    //  evaluate surflet. f(x)=(0.5-x*x)^3\n    vec4 surflet_weights = v1234_x * v1234_x + v1234_y * v1234_y + v1234_z * v1234_z;\n    surflet_weights = max(0.5 - surflet_weights, 0.0);      //  0.5 here represents the closest distance (squared) of any simplex pyramid corner to any of its planes.  ie, SIMPLEX_PYRAMID_HEIGHT^2\n    return surflet_weights*surflet_weights*surflet_weights;\n}\n\n\n\n//\n//  SimplexPerlin3D  ( simplex gradient noise )\n//  Perlin noise over a simplex (tetrahedron) grid\n//  Return value range of -1.0->1.0\n//  http://briansharpe.files.wordpress.com/2012/01/simplexperlinsample.jpg\n//\n//  Implementation originally based off Stefan Gustavsons and Ian McEwans work at...\n//  http://github.com/ashima/webgl-noise\n//\nfloat SimplexPerlin3D(vec3 P)\n{\n    //  calculate the simplex vector and index math\n    vec3 Pi;\n    vec3 Pi_1;\n    vec3 Pi_2;\n    vec4 v1234_x;\n    vec4 v1234_y;\n    vec4 v1234_z;\n    Simplex3D_GetCornerVectors( P, Pi, Pi_1, Pi_2, v1234_x, v1234_y, v1234_z );\n\n    //  generate the random vectors\n    //  ( various hashing methods listed in order of speed )\n    vec4 hash_0;\n    vec4 hash_1;\n    vec4 hash_2;\n    FAST32_hash_3D( Pi, Pi_1, Pi_2, hash_0, hash_1, hash_2 );\n    //SGPP_hash_3D( Pi, Pi_1, Pi_2, hash_0, hash_1, hash_2 );\n    hash_0 -= 0.49999;\n    hash_1 -= 0.49999;\n    hash_2 -= 0.49999;\n\n    //  evaluate gradients\n    vec4 grad_results = inversesqrt( hash_0 * hash_0 + hash_1 * hash_1 + hash_2 * hash_2 ) * ( hash_0 * v1234_x + hash_1 * v1234_y + hash_2 * v1234_z );\n\n    //  Normalization factor to scale the final result to a strict 1.0->-1.0 range\n    //  x = sqrt( 0.75 ) * 0.5\n    //  NF = 1.0 / ( x * ( ( 0.5 * x*x ) ^ 3 ) * 2.0 )\n    //  http://briansharpe.wordpress.com/2012/01/13/simplex-noise/#comment-36\n     float FINAL_NORMALIZATION = 37.837227241611314102871574478976*smoothness;\n\n    //  sum with the surflet and return\n    return dot( Simplex3D_GetSurfletWeights( v1234_x, v1234_y, v1234_z ), grad_results ) * FINAL_NORMALIZATION;\n}\n\nvoid main()\n{\n    vec2 p=vec2(texCoord.x-0.5,texCoord.y-0.5);\n\n    p.x*=aspect;\n    p=p*scale;\n\n    p=vec2(p.x+0.5-x,p.y+0.5-y);\n\n    vec3 offset;\n    #ifdef HAS_TEX_OFFSETMAP\n        vec4 offMap=texture(texOffsetZ,texCoord);\n\n        #ifdef OFFSET_X_R\n            offset.x=offMap.r;\n        #endif\n        #ifdef OFFSET_X_G\n            offset.x=offMap.g;\n        #endif\n        #ifdef OFFSET_X_B\n            offset.x=offMap.b;\n        #endif\n\n        #ifdef OFFSET_Y_R\n            offset.y=offMap.r;\n        #endif\n        #ifdef OFFSET_Y_G\n            offset.y=offMap.g;\n        #endif\n        #ifdef OFFSET_Y_B\n            offset.y=offMap.b;\n        #endif\n\n        #ifdef OFFSET_Z_R\n            offset.z=offMap.r;\n        #endif\n        #ifdef OFFSET_Z_G\n            offset.z=offMap.g;\n        #endif\n        #ifdef OFFSET_Z_B\n            offset.z=offMap.b;\n        #endif\n\n        offset*=offMul;\n    #endif\n\n    float v=SimplexPerlin3D(vec3(p.x,p.y,time)+offset)*0.5+0.5;\n\n\n    if (harmonics >= 2.0) v += SimplexPerlin3D(vec3(p.x,p.y,time)*2.3+offset) * 0.5;\n    if (harmonics >= 3.0) v += SimplexPerlin3D(vec3(p.x,p.y,time)*4.2+offset) * 0.25;\n    if (harmonics >= 4.0) v += SimplexPerlin3D(vec3(p.x,p.y,time)*8.1+offset) * 0.125;\n    if (harmonics >= 5.0) v += SimplexPerlin3D(vec3(p.x,p.y,time)*16.7+offset) * 0.0625;\n\n\n\n    //blend section\n    vec4 col=vec4(v,v,v,1.0);\n\n    vec4 base=texture(tex,texCoord);\n\n    // outColor=cgl_blend(base,col,amount);\n\n\n    float str=1.0;\n    #ifdef HAS_TEX_MASK\n        str=texture(texMask,texCoord).r;\n    #endif\n\n    outColor=cgl_blendPixel(base,col,amount*str);\n\n}"};const n=e.inTrigger("render"),i=e.inTexture("Mask"),a=CGL.TextureEffect.AddBlendSelect(e,"Blend Mode","normal"),r=e.inValueSlider("Amount",1),s=CGL.TextureEffect.AddBlendAlphaMask(e),o=e.inValue("smoothness",1),l=e.inSwitch("Harmonics",["1","2","3","4","5"],"1"),u=e.inValue("scale",7),h=e.outTrigger("trigger"),c=e.inValue("x"),f=e.inValue("y"),m=e.inValue("time",0);const d=e.inTexture("Offset"),g=e.inFloat("Offset Multiply",1),p=e.inSwitch("Offset X",["None","R","G","B"],"None"),_=e.inSwitch("Offset Y",["None","R","G","B"],"None"),v=e.inSwitch("Offset Z",["None","R","G","B"],"R");e.setPortGroup("Offset Map",[d,v,_,p,g]);const b=e.patch.cgl;const x=new CGL.Shader(b,e.name);x.setSource(x.getDefaultVertexShader(),t.simplexnoise_frag);const O=new CGL.Uniform(x,"t","tex",0),A=new CGL.Uniform(x,"t","texOffsetZ",1),S=new CGL.Uniform(x,"t","texMask",2),C=new CGL.Uniform(x,"f","amount",r),E=new CGL.Uniform(x,"f","smoothness",o),T=new CGL.Uniform(x,"f","scale",u),I=new CGL.Uniform(x,"f","x",c),y=new CGL.Uniform(x,"f","y",f),M=new CGL.Uniform(x,"f","aspect",1),L=new CGL.Uniform(x,"f","time",m),N=new CGL.Uniform(x,"f","offMul",g),P=new CGL.Uniform(x,"f","harmonics",0);l.onChange=()=>{P.setValue(parseFloat(l.get()))};CGL.TextureEffect.setupBlending(e,x,a,r,s);p.onChange=_.onChange=v.onChange=i.onChange=d.onChange=w;w();function w(){x.toggleDefine("HAS_TEX_OFFSETMAP",d.get());x.toggleDefine("HAS_TEX_MASK",i.get());x.toggleDefine("OFFSET_X_R",p.get()=="R");x.toggleDefine("OFFSET_X_G",p.get()=="G");x.toggleDefine("OFFSET_X_B",p.get()=="B");x.toggleDefine("OFFSET_Y_R",_.get()=="R");x.toggleDefine("OFFSET_Y_G",_.get()=="G");x.toggleDefine("OFFSET_Y_B",_.get()=="B");x.toggleDefine("OFFSET_Z_R",v.get()=="R");x.toggleDefine("OFFSET_Z_G",v.get()=="G");x.toggleDefine("OFFSET_Z_B",v.get()=="B");p.setUiAttribs({greyout:!d.isLinked()});_.setUiAttribs({greyout:!d.isLinked()});v.setUiAttribs({greyout:!d.isLinked()});g.setUiAttribs({greyout:!d.isLinked()})}n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e,3))return;b.pushShader(x);b.currentTextureEffect.bind();M.setValue(b.currentTextureEffect.aspectRatio);b.setTexture(0,b.currentTextureEffect.getCurrentSourceTexture().tex);if(d.get())b.setTexture(1,d.get().tex);if(i.get())b.setTexture(2,i.get().tex);b.currentTextureEffect.finish();b.popShader();h.trigger()}};Ops.Gl.TextureEffects.Noise.SimplexNoise_v2.prototype=new CABLES.Op;CABLES.OPS["0f4a8d04-89b0-437a-9da8-b4098772d250"]={f:Ops.Gl.TextureEffects.Noise.SimplexNoise_v2,objName:"Ops.Gl.TextureEffects.Noise.SimplexNoise_v2"};Ops.Gl.TextureEffects.Noise.FBMNoise_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={fbmnoise_frag:"UNI sampler2D tex;\nUNI float anim;\n\nUNI float scale;\nUNI float repeat;\n\nUNI float scrollX;\nUNI float scrollY;\n\nUNI float amount;\n\nUNI bool layer1;\nUNI bool layer2;\nUNI bool layer3;\nUNI bool layer4;\nUNI vec3 color;\nUNI float aspect;\n\nIN vec2 texCoord;\n\n\n{{CGL.BLENDMODES3}}\n\n// csdcsdcds\n// adapted from warp shader by inigo quilez/iq\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// See here for a tutorial on how to make this: http://www.iquilezles.org/www/articles/warp/warp.htm\n\nconst mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat noise( in vec2 x )\n{\n\treturn sin(1.5*x.x)*sin(1.5*x.y);\n}\n\nfloat fbm4( vec2 p )\n{\n    float f = 0.0;\n    f += 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p ); p = m*p*2.01;\n    f += 0.0625*noise( p );\n    return f/0.9375;\n}\n\nfloat fbm6( vec2 p )\n{\n    float f = 0.0;\n    f += 0.500000*(0.5+0.5*noise( p )); p = m*p*2.02;\n    f += 0.250000*(0.5+0.5*noise( p )); p = m*p*2.03;\n    f += 0.125000*(0.5+0.5*noise( p )); p = m*p*2.01;\n    f += 0.062500*(0.5+0.5*noise( p )); p = m*p*2.04;\n    f += 0.031250*(0.5+0.5*noise( p )); p = m*p*2.01;\n    f += 0.015625*(0.5+0.5*noise( p ));\n    return f/0.96875;\n}\n\nvoid main()\n{\n    vec2 tc=texCoord;\n\t#ifdef DO_TILEABLE\n\t    tc=abs(texCoord-0.5);\n\t#endif\n\n    vec2 p=(tc-0.5)*scale;\n\n    p.y/=aspect;\n    vec2 q = vec2( fbm4( p + vec2(0.3+scrollX,0.20+scrollY) ),\n                   fbm4( p + vec2(3.1+scrollX,1.3+scrollY) ) );\n\n    vec2 q2 = vec2( fbm4( p + vec2(2.0+scrollX,1.0+scrollY) ),\n                   fbm4( p + vec2(3.1+scrollX,1.3+scrollY) ) );\n\n    vec2 q3 = vec2( fbm4( p + vec2(9.0+scrollX,4.0+scrollY) ),\n                   fbm4( p + vec2(3.1+scrollX,4.3+scrollY) ) );\n\n    float v= fbm4( ( p + 4.0*q +anim*0.1)*repeat);\n    float v2= fbm4( (p + 4.0*q2 +anim*0.1)*repeat );\n\n    float v3= fbm6( (p + 4.0*q3 +anim*0.1)*repeat );\n    float v4= fbm6( (p + 4.0*q2 +anim*0.1)*repeat );\n\n    vec4 base=texture(tex,texCoord);\n\n    vec4 finalColor;\n    float colVal=0.0;\n    float numLayers=0.0;\n\n    if(layer1)\n    {\n        colVal+=v;\n        numLayers++;\n    }\n\n    if(layer2)\n    {\n        colVal+=v2;\n        numLayers++;\n    }\n\n    if(layer3)\n    {\n        colVal+=v3;\n        numLayers++;\n    }\n\n    if(layer4)\n    {\n        colVal+=v4;\n        numLayers++;\n    }\n\n    finalColor=vec4( color*vec3(colVal/numLayers),1.0);\n\n    outColor = cgl_blendPixel(base,finalColor,amount);\n}\n"};const n=e.inTrigger("render"),i=CGL.TextureEffect.AddBlendSelect(e,"Blend Mode","normal"),a=e.inValueSlider("Amount",1),r=CGL.TextureEffect.AddBlendAlphaMask(e),s=e.inValueSlider("r",1),o=e.inValueSlider("g",1),l=e.inValueSlider("b",1),u=e.outTrigger("trigger");s.setUiAttribs({colorPick:true});const h=e.patch.cgl;const c=new CGL.Shader(h,"fbmnoise");c.setSource(c.getDefaultVertexShader(),t.fbmnoise_frag);const f=new CGL.Uniform(c,"t","tex",0),m=new CGL.Uniform(c,"f","scale",e.inValue("scale",2)),d=new CGL.Uniform(c,"f","anim",e.inValue("anim",0)),g=new CGL.Uniform(c,"f","scrollX",e.inValue("scrollX",9)),p=new CGL.Uniform(c,"f","scrollY",e.inValue("scrollY",0)),_=new CGL.Uniform(c,"f","repeat",e.inValue("repeat",1)),v=new CGL.Uniform(c,"f","aspect",e.inValue("aspect",1)),b=new CGL.Uniform(c,"b","layer1",e.inValueBool("Layer 1",true)),x=new CGL.Uniform(c,"b","layer2",e.inValueBool("Layer 2",true)),O=new CGL.Uniform(c,"b","layer3",e.inValueBool("Layer 3",true)),A=new CGL.Uniform(c,"b","layer4",e.inValueBool("Layer 4",true)),S=new CGL.Uniform(c,"3f","color",s,o,l),C=new CGL.Uniform(c,"f","amount",a);const E=e.inValueBool("Tileable",false);E.onChange=T;CGL.TextureEffect.setupBlending(e,c,i,a,r);function T(){c.toggleDefine("DO_TILEABLE",E.get())}n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;h.pushShader(c);h.currentTextureEffect.bind();v.set(h.currentTextureEffect.getCurrentSourceTexture().width/h.currentTextureEffect.getCurrentSourceTexture().height);h.setTexture(0,h.currentTextureEffect.getCurrentSourceTexture().tex);h.currentTextureEffect.finish();h.popShader();u.trigger()}};Ops.Gl.TextureEffects.Noise.FBMNoise_v2.prototype=new CABLES.Op;CABLES.OPS["9422eeab-b6c5-47d1-8737-d5c43dc137a3"]={f:Ops.Gl.TextureEffects.Noise.FBMNoise_v2,objName:"Ops.Gl.TextureEffects.Noise.FBMNoise_v2"};Ops.Gl.Shader.BasicMaterial_v3=function(){CABLES.Op.apply(this,arguments);const e=this;const t={basicmaterial_frag:"{{MODULES_HEAD}}\n\nIN vec2 texCoord;\n\n#ifdef VERTEX_COLORS\nIN vec4 vertCol;\n#endif\n\n#ifdef HAS_TEXTURES\n    IN vec2 texCoordOrig;\n    #ifdef HAS_TEXTURE_DIFFUSE\n        UNI sampler2D tex;\n    #endif\n    #ifdef HAS_TEXTURE_OPACITY\n        UNI sampler2D texOpacity;\n   #endif\n#endif\n\nvoid main()\n{\n    {{MODULE_BEGIN_FRAG}}\n    vec4 col=color;\n\n\n    #ifdef HAS_TEXTURES\n        vec2 uv=texCoord;\n\n        #ifdef CROP_TEXCOORDS\n            if(uv.x<0.0 || uv.x>1.0 || uv.y<0.0 || uv.y>1.0) discard;\n        #endif\n\n        #ifdef HAS_TEXTURE_DIFFUSE\n            col=texture(tex,uv);\n\n            #ifdef COLORIZE_TEXTURE\n                col.r*=color.r;\n                col.g*=color.g;\n                col.b*=color.b;\n            #endif\n        #endif\n        col.a*=color.a;\n        #ifdef HAS_TEXTURE_OPACITY\n            #ifdef TRANSFORMALPHATEXCOORDS\n                uv=texCoordOrig;\n            #endif\n            #ifdef ALPHA_MASK_IALPHA\n                col.a*=1.0-texture(texOpacity,uv).a;\n            #endif\n            #ifdef ALPHA_MASK_ALPHA\n                col.a*=texture(texOpacity,uv).a;\n            #endif\n            #ifdef ALPHA_MASK_LUMI\n                col.a*=dot(vec3(0.2126,0.7152,0.0722), texture(texOpacity,uv).rgb);\n            #endif\n            #ifdef ALPHA_MASK_R\n                col.a*=texture(texOpacity,uv).r;\n            #endif\n            #ifdef ALPHA_MASK_G\n                col.a*=texture(texOpacity,uv).g;\n            #endif\n            #ifdef ALPHA_MASK_B\n                col.a*=texture(texOpacity,uv).b;\n            #endif\n            // #endif\n        #endif\n    #endif\n\n    {{MODULE_COLOR}}\n\n    #ifdef DISCARDTRANS\n        if(col.a<0.2) discard;\n    #endif\n\n    #ifdef VERTEX_COLORS\n        col*=vertCol;\n    #endif\n\n    outColor = col;\n}\n",basicmaterial_vert:"IN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN vec3 attrVertNormal;\nIN float attrVertIndex;\n\n{{MODULES_HEAD}}\n\nOUT vec3 norm;\nOUT vec2 texCoord;\nOUT vec2 texCoordOrig;\n\nUNI mat4 projMatrix;\nUNI mat4 modelMatrix;\nUNI mat4 viewMatrix;\n\n#ifdef HAS_TEXTURES\n    UNI float diffuseRepeatX;\n    UNI float diffuseRepeatY;\n    UNI float texOffsetX;\n    UNI float texOffsetY;\n#endif\n\n#ifdef VERTEX_COLORS\n    in vec4 attrVertColor;\n    out vec4 vertCol;\n\n#endif\n\n\nvoid main()\n{\n    mat4 mMatrix=modelMatrix;\n    mat4 mvMatrix;\n\n    norm=attrVertNormal;\n    texCoordOrig=attrTexCoord;\n    texCoord=attrTexCoord;\n    #ifdef HAS_TEXTURES\n        texCoord.x=texCoord.x*diffuseRepeatX+texOffsetX;\n        texCoord.y=(1.0-texCoord.y)*diffuseRepeatY+texOffsetY;\n    #endif\n\n    #ifdef VERTEX_COLORS\n        vertCol=attrVertColor;\n    #endif\n\n    vec4 pos = vec4(vPosition, 1.0);\n\n    #ifdef BILLBOARD\n       vec3 position=vPosition;\n       mvMatrix=viewMatrix*modelMatrix;\n\n       gl_Position = projMatrix * mvMatrix * vec4((\n           position.x * vec3(\n               mvMatrix[0][0],\n               mvMatrix[1][0],\n               mvMatrix[2][0] ) +\n           position.y * vec3(\n               mvMatrix[0][1],\n               mvMatrix[1][1],\n               mvMatrix[2][1]) ), 1.0);\n    #endif\n\n    {{MODULE_VERTEX_POSITION}}\n\n    #ifndef BILLBOARD\n        mvMatrix=viewMatrix * mMatrix;\n    #endif\n\n\n    #ifndef BILLBOARD\n        // gl_Position = projMatrix * viewMatrix * modelMatrix * pos;\n        gl_Position = projMatrix * mvMatrix * pos;\n    #endif\n}\n"};const n=e.inTrigger("render");const i=e.outTrigger("trigger");const a=e.outObject("shader",null,"shader");a.ignoreValueSerialize=true;e.toWorkPortsNeedToBeLinked(n);const r=e.patch.cgl;const s=new CGL.Shader(r,"basicmaterialnew");s.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);s.setSource(t.basicmaterial_vert,t.basicmaterial_frag);a.set(s);n.onTriggered=I;const o=e.inValueSlider("r",Math.random());const l=e.inValueSlider("g",Math.random());const u=e.inValueSlider("b",Math.random());const h=e.inValueSlider("a",1);o.setUiAttribs({colorPick:true});const c=s.addUniformFrag("4f","color",o,l,u,h);s.uniformColorDiffuse=c;const f=e.inTexture("texture");let m=null;f.onChange=M;const d=e.inValueBool("colorizeTexture",false);const g=e.inValueBool("Vertex Colors",false);const p=e.inTexture("textureOpacity");let _=null;const v=e.inSwitch("Alpha Mask Source",["Luminance","R","G","B","A","1-A"],"Luminance");v.setUiAttribs({greyout:true});p.onChange=y;const b=e.inValueBool("Opacity TexCoords Transform",false);const x=e.inValueBool("Discard Transparent Pixels");const O=e.inValue("diffuseRepeatX",1),A=e.inValue("diffuseRepeatY",1),S=e.inValue("Tex Offset X",0),C=e.inValue("Tex Offset Y",0),E=e.inBool("Crop TexCoords",false);s.addUniformFrag("f","diffuseRepeatX",O);s.addUniformFrag("f","diffuseRepeatY",A);s.addUniformFrag("f","texOffsetX",S);s.addUniformFrag("f","texOffsetY",C);const T=e.inValueBool("billboard",false);v.onChange=T.onChange=x.onChange=b.onChange=E.onChange=g.onChange=d.onChange=L;e.setPortGroup("Color",[o,l,u,h]);e.setPortGroup("Color Texture",[f,g,d]);e.setPortGroup("Opacity",[p,v,x,b]);e.setPortGroup("Texture Transform",[O,A,S,C,E]);y();M();e.preRender=function(){s.bind();I()};function I(){if(!s)return;r.pushShader(s);s.popTextures();if(m&&f.get())s.pushTexture(m,f.get());if(_&&p.get())s.pushTexture(_,p.get());i.trigger();r.popShader()}function y(){if(p.get()){if(_!==null)return;s.removeUniform("texOpacity");s.define("HAS_TEXTURE_OPACITY");if(!_)_=new CGL.Uniform(s,"t","texOpacity");v.setUiAttribs({greyout:false});b.setUiAttribs({greyout:false})}else{s.removeUniform("texOpacity");s.removeDefine("HAS_TEXTURE_OPACITY");_=null;v.setUiAttribs({greyout:true});b.setUiAttribs({greyout:true})}L()}function M(){if(f.get()){if(!s.hasDefine("HAS_TEXTURE_DIFFUSE"))s.define("HAS_TEXTURE_DIFFUSE");if(!m)m=new CGL.Uniform(s,"t","texDiffuse");O.setUiAttribs({greyout:false});A.setUiAttribs({greyout:false});S.setUiAttribs({greyout:false});C.setUiAttribs({greyout:false});d.setUiAttribs({greyout:false})}else{s.removeUniform("texDiffuse");s.removeDefine("HAS_TEXTURE_DIFFUSE");m=null;O.setUiAttribs({greyout:true});A.setUiAttribs({greyout:true});S.setUiAttribs({greyout:true});C.setUiAttribs({greyout:true});d.setUiAttribs({greyout:true})}}function L(){s.toggleDefine("VERTEX_COLORS",g.get());s.toggleDefine("CROP_TEXCOORDS",E.get());s.toggleDefine("COLORIZE_TEXTURE",d.get());s.toggleDefine("TRANSFORMALPHATEXCOORDS",b.get());s.toggleDefine("DISCARDTRANS",x.get());s.toggleDefine("BILLBOARD",T.get());s.toggleDefine("ALPHA_MASK_ALPHA",v.get()=="A");s.toggleDefine("ALPHA_MASK_IALPHA",v.get()=="1-A");s.toggleDefine("ALPHA_MASK_LUMI",v.get()=="Luminance");s.toggleDefine("ALPHA_MASK_R",v.get()=="R");s.toggleDefine("ALPHA_MASK_G",v.get()=="G");s.toggleDefine("ALPHA_MASK_B",v.get()=="B")}};Ops.Gl.Shader.BasicMaterial_v3.prototype=new CABLES.Op;CABLES.OPS["ec55d252-3843-41b1-b731-0482dbd9e72b"]={f:Ops.Gl.Shader.BasicMaterial_v3,objName:"Ops.Gl.Shader.BasicMaterial_v3"};Ops.Gl.Textures.TextTexture_v4=function(){CABLES.Op.apply(this,arguments);const m=this;const e={text_frag:"UNI sampler2D tex;\nUNI float a;\nUNI vec3 color;\nIN vec2 texCoord;\n\nvec4 myround(vec4 col)\n{\n    if(col.a>0.5)return vec4(1.0,1.0,1.0,1.0);\n    else return vec4(1.0,1.0,1.0,0.0);\n}\n\nvoid main()\n{\n    vec4 col;\n\n    #ifndef HARD_EDGE\n        // col= vec4(1.0,1.0,1.0,texture(tex,vec2(texCoord.x,(1.0-texCoord.y))).r*a);\n        col = texture(tex,vec2(texCoord.x,(1.0-texCoord.y)));\n    #endif\n    #ifdef HARD_EDGE\n\n        float step=0.7;\n        col=texture(tex,vec2(texCoord.x,1.0-texCoord.y));\n        vec4 col2=texture(tex,vec2(texCoord.x-(fwidth(texCoord.x)*step),1.0-texCoord.y-(fwidth(texCoord.y)*step)));\n        vec4 col3=texture(tex,vec2(texCoord.x+(fwidth(texCoord.x)*step),1.0-texCoord.y+(fwidth(texCoord.y)*step)));\n        vec4 col4=texture(tex,vec2(texCoord.x+(fwidth(texCoord.x)*step),1.0-texCoord.y-(fwidth(texCoord.y)*step)));\n        vec4 col5=texture(tex,vec2(texCoord.x-(fwidth(texCoord.x)*step),1.0-texCoord.y+(fwidth(texCoord.y)*step)));\n\n        float f=smoothstep(col.a,0.5,0.8);\n\n        col=myround(col);\n        col2=myround(col2);\n        col3=myround(col3);\n        col4=myround(col4);\n        col5=myround(col5);\n\n        // col.a=(col.a+col2.a+col3.a+col4.a+col5.a)/5.0*a;\n\n    #endif\n\n    col.rgb=color.rgb;\n\n    outColor=col;\n\n}\n",text_vert:"{{MODULES_HEAD}}\n\nIN vec3 vPosition;\nUNI mat4 projMatrix;\nUNI mat4 mvMatrix;\nUNI float aspect;\nOUT vec2 texCoord;\nIN vec2 attrTexCoord;\n\nvoid main()\n{\n   vec4 pos=vec4(vPosition,  1.0);\n\n    pos.x*=aspect;\n\n   texCoord=vec2(attrTexCoord.x,1.0-attrTexCoord.y);;\n\n   gl_Position = projMatrix * mvMatrix * pos;\n}\n"};function i(e){const t=e.toString(16);return t.length==1?"0"+t:t}function t(e,t,n){return"#"+i(Math.floor(e*255))+i(Math.floor(t*255))+i(Math.floor(n*255))}const n=m.inTriggerButton("Render"),d=m.inString("text","cables"),g=m.inString("font","Arial"),p=m.inString("weight","normal"),_=m.inValueBool("Maximize Size",true),v=m.inValueFloat("fontSize",30),a=m.inValueFloat("Line Height",1),b=m.inValueFloat("Vertical Offset",0),x=m.inBool("Show Debug",false),O=m.inValueInt("Limit Lines",0),A=m.inValueInt("texture width",512),S=m.inValueInt("texture height",128),C=m.inSwitch("filter",["nearest","linear","mipmap"],"linear"),E=m.inSwitch("Anisotropic",[0,1,2,4,8,16],0),T=m.inSwitch("align",["left","center","right"],"center"),I=m.inSwitch("vertical align",["top","center","bottom"],"center"),y=m.inValueBool("Reuse Texture",true),r=m.inValueBool("Draw Mesh",true),s=m.inValueFloat("Scale Mesh",1),o=m.inValueBool("Hard Edges",false),M=m.inFloatSlider("Opacity",1),L=m.inValueSlider("r",Math.random()),N=m.inValueSlider("g",Math.random()),P=m.inValueSlider("b",Math.random()),l=m.outTrigger("Next"),w=m.outValue("Ratio"),D=m.outTexture("texture"),u=m.outNumber("Aspect",1),U=m.outNumber("Num Lines");L.setUiAttribs({colorPick:true});m.setPortGroup("Color",[L,N,P]);m.setPortGroup("Size",[g,p,_,v,a,b]);m.setPortGroup("Texture",[A,S,C,E]);m.setPortGroup("Alignment",[I,T]);m.setPortGroup("Rendering",[r,o,s]);T.onChange=I.onChange=d.onChange=v.onChange=p.onChange=E.onChange=g.onChange=b.onChange=a.onChange=y.onChange=O.onChange=A.onChange=S.onChange=_.onChange=function(){j=true};L.onChange=N.onChange=P.onChange=M.onChange=function(){if(!r.get()||D.isLinked()){j=true}};D.onLinkChanged=()=>{if(D.isLinked())j=true};n.onTriggered=Y;E.onChange=C.onChange=()=>{V=null;j=true};D.ignoreValueSerialize=true;const R=m.patch.cgl;const h=document.getElementsByTagName("body")[0];var V=new CGL.Texture(R);const B=document.createElement("canvas");B.id="texturetext_"+CABLES.generateUUID();B.style.display="none";h.appendChild(B);const G=B.getContext("2d");var j=true;const c=CGL.MESHES.getSimpleRect(R,"texttexture rect");const f=vec3.create();const k=new CGL.Shader(R,"texttexture");k.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);k.setSource(e.text_vert,e.text_frag);const F=new CGL.Uniform(k,"t","tex");const X=new CGL.Uniform(k,"f","aspect",0);const z=new CGL.Uniform(k,"f","a",M);const H=new CGL.Uniform(k,"3f","color",L,N,P);if(m.patch.isEditorMode())CABLES.UI.SIMPLEWIREFRAMERECT=CABLES.UI.SIMPLEWIREFRAMERECT||new CGL.WireframeRect(R);if(R.glVersion<2){R.gl.getExtension("OES_standard_derivatives");k.enableExtension("GL_OES_standard_derivatives")}o.onChange=function(){k.toggleDefine("HARD_EDGE",o.get())};function Y(){if(G.canvas.width!=A.get())j=true;if(j){W();Q()}if(r.get()){f[0]=f[1]=f[2]=s.get();R.pushBlendMode(CGL.BLEND_NORMAL,false);R.pushModelMatrix();mat4.scale(R.mMatrix,R.mMatrix,f);k.popTextures();k.pushTexture(F,V.tex);X.set(u.get());if(R.shouldDrawHelpers(m))CABLES.UI.SIMPLEWIREFRAMERECT.render(u.get(),1,1);R.pushShader(k);c.render(k);R.popShader();R.popBlendMode();R.popModelMatrix()}l.trigger()}function W(){if(!V)return;V.setSize(A.get(),S.get());G.canvas.width=B.width=A.get();G.canvas.height=B.height=S.get();u.set(B.width/B.height);j=true}_.onChange=function(){v.setUiAttribs({greyout:_.get()});j=true};function K(e){return a.get()*e}function Z(e){if(e[e.length-1]===""||e[e.length-1]==="\n"){e.length--;e=Z(e)}return e}function Q(){R.checkFrameStarted("texttrexture refresh");G.clearRect(0,0,B.width,B.height);const e="rgba("+Math.floor(L.get()*255)+","+Math.floor(N.get()*255)+","+Math.floor(P.get()*255)+","+M.get()+")";G.fillStyle=e;let i=parseFloat(v.get());let t=g.get();if(t.indexOf(" ")>-1)t='"'+t+'"';G.font=p.get()+" "+i+"px "+t+"";G.textAlign=T.get();let a=(d.get()+"").replace(/<br\/>/g,"\n");let r=a.split("\n");j=false;r=Z(r);if(_.get()){i=A.get();let e=0;let t=0;let n=0;do{e++;if(e>(S.get()+A.get())/2){m.log("too many iterations - maximize size");break}i-=5;G.font=p.get()+" "+i+'px "'+g.get()+'"';t=0;n=(i+(r.length-1)*K(i))*1.2;for(let e=0;e<r.length;e++)t=Math.max(t,G.measureText(r[e]).width)}while(t>G.canvas.width||n>G.canvas.height)}else{let i=true;if(A.get()>128){i=false;let n="";for(let e=0;e<r.length;e++){if(!r[e]){n+="\n";continue}let t=0;const f=r[e].split(" ");for(let e=0;e<f.length;e++){if(!f[e])continue;t+=G.measureText(f[e]+" ").width;if(t>A.get()){i=true;n+="\n"+f[e]+" ";t=G.measureText(f[e]+" ").width}else{n+=f[e]+" "}}n+="\n"}a=n;r=a.split("\n")}r=Z(r);if(O.get()>0&&r.length>O.get()){r.length=O.get();r[r.length-1]+="..."}}r=Z(r);const n=i;const s=n+(r.length-1)*K(i);let o=b.get()*i;if(I.get()=="top")o+=n;else if(I.get()=="center")o+=G.canvas.height/2-s/2+n;else if(I.get()=="bottom")o+=G.canvas.height-s+n;let l=999999;let u=-999999;const h=x.get();for(let t=0;t<r.length;t++){let e=0;if(T.get()=="center")e=G.canvas.width/2;if(T.get()=="right")e=G.canvas.width;G.fillText(r[t],e,o);l=Math.min(l,o-n);u=Math.max(u,o);if(h){G.lineWidth=1;G.strokeStyle="#FF0000";G.beginPath();G.moveTo(0,o);G.lineTo(21e3,o);G.stroke()}o+=K(i)}if(h){G.lineWidth=3;G.strokeStyle="#FF0000";G.strokeRect(0,l,G.canvas.width-3,u-l)}G.restore();w.set(G.canvas.height/G.canvas.width);U.set(r.length);D.set(CGL.Texture.getEmptyTexture(R));let c=CGL.Texture.FILTER_LINEAR;if(C.get()=="nearest")c=CGL.Texture.FILTER_NEAREST;else if(C.get()=="mipmap")c=CGL.Texture.FILTER_MIPMAP;if(!y.get()||!V||!D.get()||V.width!=B.width||V.height!=B.height||V.anisotropic!=parseFloat(E.get())){V=new CGL.Texture.createFromImage(R,B,{filter:c,anisotropic:parseFloat(E.get())})}V.flip=false;V.initTexture(B,c);D.set(V);V.unpackAlpha=true}};Ops.Gl.Textures.TextTexture_v4.prototype=new CABLES.Op;CABLES.OPS["afab973f-c9ac-47fd-914c-70b42af5c5d4"]={f:Ops.Gl.Textures.TextTexture_v4,objName:"Ops.Gl.Textures.TextTexture_v4"};Ops.Html.FontFile_v2=function(){CABLES.Op.apply(this,arguments);const i=this;const e={};const a=i.inUrl("file",[".otf",".ttf",".woff",".woff2"]),r=i.inString("family"),s=i.outValue("Loaded"),o=i.outTrigger("Loaded Trigger");let l=null;a.onChange=function(){s.set(false);t()};r.onChange=t;let u;function t(){if(a.get()&&r.get()){if(document.fonts){u=new FontFace(r.get(),"url("+i.patch.getFilePath(String(a.get()))+")");l=i.patch.cgl.patch.loading.start("FontFile",a.get());document.fonts.add(u);u.load();u.loaded.then(e=>{s.set(true);o.trigger();i.patch.cgl.patch.loading.finished(l);i.patch.emitEvent("fontLoaded",r.get())},e=>{i.setUiError("loadingerror","Font loading error!"+u.status)})}else{const e=i.patch.getFilePath(String(a.get()));const t="".endl()+"@font-face".endl()+"{".endl()+'  font-family: "'+r.get()+'";'.endl()+'  src: url("'+e+'") format("truetype");'.endl()+"}";const n=document.createElement("style");n.type="text/css";n.innerHTML=t;document.getElementsByTagName("head")[document.getElementsByTagName("head").length-1].appendChild(n)}}}};Ops.Html.FontFile_v2.prototype=new CABLES.Op;CABLES.OPS["68177370-116e-4c76-aef3-3b10d68e7227"]={f:Ops.Html.FontFile_v2,objName:"Ops.Html.FontFile_v2"};Ops.Vars.VarGetString=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};var n=e.outString("Value");e.varName=e.inValueSelect("Variable",[],"",true);new CABLES.VarGetOpWrapper(e,"string",e.varName,n)};Ops.Vars.VarGetString.prototype=new CABLES.Op;CABLES.OPS["3ad08cfc-bce6-4175-9746-fef2817a3b12"]={f:Ops.Vars.VarGetString,objName:"Ops.Vars.VarGetString"};Ops.Anim.SineAnim=function(){CABLES.Op.apply(this,arguments);const t=this;const e={};const n=t.inTrigger("exe"),i=t.outTrigger("Trigger out"),a=t.outValue("result"),r=t.inSwitch("Mode",["Sine","Cosine"],"Sine"),s=t.inValueFloat("phase",0),o=t.inValueFloat("frequency",1),l=t.inValueFloat("amplitude",1);var u=0;const h=0;const c=1;t.toWorkPortsNeedToBeLinked(n);m();f();function f(){var e=r.get();if(e==="Sine")u=h;else if(e==="Cosine")u=c;t.setUiAttrib({extendTitle:e});m()}function m(){if(u==h)a.set(l.get()*Math.sin(t.patch.freeTimer.get()*o.get()+s.get()));else a.set(l.get()*Math.cos(t.patch.freeTimer.get()*o.get()+s.get()));i.trigger()}n.onTriggered=m;r.onChange=f};Ops.Anim.SineAnim.prototype=new CABLES.Op;CABLES.OPS["736d3d0e-c920-449e-ade0-f5ca6018fb5c"]={f:Ops.Anim.SineAnim,objName:"Ops.Anim.SineAnim"};Ops.Math.Pi=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueFloat("Multiply amount",1);var i=e.outValue("Pi",Math.PI);n.onChange=function(){i.setValue(Math.PI*n.get())}};Ops.Math.Pi.prototype=new CABLES.Op;CABLES.OPS["311e8179-9a7c-43de-9eb2-84577d702974"]={f:Ops.Math.Pi,objName:"Ops.Math.Pi"};Ops.Vars.VarSetString_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inString("Value","New String");e.varName=e.inDropDown("Variable",[],"",true);new CABLES.VarSetOpWrapper(e,"string",n,e.varName)};Ops.Vars.VarSetString_v2.prototype=new CABLES.Op;CABLES.OPS["0b4d9229-8024-4a30-9cc0-f6653942c2e4"]={f:Ops.Vars.VarSetString_v2,objName:"Ops.Vars.VarSetString_v2"};Ops.Gl.Phong.SpotLight_v5=function(){CABLES.Op.apply(this,arguments);const t=this;const e={};const n=t.patch.cgl;const i=t.inTrigger("Trigger In");const a=t.inBool("Cast Light",true);const r=t.inFloat("Intensity",2);const s=t.inFloat("Radius",10);const o=t.inFloat("X",1);const l=t.inFloat("Y",3);const u=t.inFloat("Z",1);const h=[o,l,u];t.setPortGroup("Position",h);const c=t.inFloat("Point At X",0);const f=t.inFloat("Point At Y",0);const m=t.inFloat("Point At Z",0);const d=[c,f,m];t.setPortGroup("Point At",d);const g=t.inFloatSlider("R",1);const p=t.inFloatSlider("G",1);const _=t.inFloatSlider("B",1);g.setUiAttribs({colorPick:true});const v=[g,p,_];t.setPortGroup("Color",v);const b=t.inFloatSlider("Specular R",1);const x=t.inFloatSlider("Specular G",1);const O=t.inFloatSlider("Specular B",1);b.setUiAttribs({colorPick:true});const A=[b,x,O];t.setPortGroup("Specular Color",A);const S=t.inFloat("Cone Angle",120);const C=t.inFloat("Inner Cone Angle",60);const E=t.inFloat("Spot Exponent",.97);const T=[S,C,E];t.setPortGroup("Cone Attributes",T);const I=t.inFloatSlider("Falloff",1e-5);const y=[a,r,s];t.setPortGroup("Light Attributes",y);const M=t.inBool("Cast Shadow",false);const L=t.inBool("Rendering Active",true);const N=t.inSwitch("Map Size",[256,512,1024,2048],512);const P=t.inFloatSlider("Shadow Strength",.99);const w=t.inFloat("Near",.1);const D=t.inFloat("Far",30);const U=t.inFloatSlider("Bias",1e-4);const R=t.inInt("Polygon Offset",0);const V=t.inFloatSlider("Normal Offset",0);const B=t.inFloatSlider("Blur Amount",0);t.setPortGroup("",[M]);t.setPortGroup("Shadow Map Settings",[N,L,P,w,D,U,R,V,B]);N.setUiAttribs({greyout:true,hidePort:true});L.setUiAttribs({greyout:true});P.setUiAttribs({greyout:true});w.setUiAttribs({greyout:true,hidePort:true});D.setUiAttribs({greyout:true,hidePort:true});B.setUiAttribs({greyout:true,hidePort:true});R.setUiAttribs({greyout:true,hidePort:true});V.setUiAttribs({greyout:true,hidePort:true});U.setUiAttribs({greyout:true,hidePort:true});const G=t.inBool("Enable Advanced",false);const j=t.inSwitch("MSAA",["none","2x","4x","8x"],"none");const k=t.inSwitch("Texture Filter",["Linear","Nearest","Mip Map"],"Linear");const F=t.inSwitch("Anisotropic",[0,1,2,4,8,16],"0");j.setUiAttribs({greyout:true,hidePort:true});k.setUiAttribs({greyout:true,hidePort:true});F.setUiAttribs({greyout:true,hidePort:true});t.setPortGroup("Advanced Options",[G,j,k,F]);let X=false;G.setUiAttribs({hidePort:true});G.onChange=function(){j.setUiAttribs({greyout:!G.get()});k.setUiAttribs({greyout:!G.get()});F.setUiAttribs({greyout:!G.get()})};const z=t.outTrigger("Trigger Out");const H=t.outTexture("Shadow Map");const Y=t.outNumber("World Position X");const W=t.outNumber("World Position Y");const K=t.outNumber("World Position Z");const Z=new CGL.Light(n,{type:"spot",position:[0,1,2].map(function(e){return h[e].get()}),color:[0,1,2].map(function(e){return v[e].get()}),specular:[0,1,2].map(function(e){return A[e].get()}),conePointAt:[0,1,2].map(function(e){return d[e].get()}),intensity:r.get(),radius:s.get(),falloff:I.get(),cosConeAngleInner:Math.cos(CGL.DEG2RAD*C.get()),cosConeAngle:Math.cos(CGL.DEG2RAD*S.get()),spotExponent:E.get(),castShadow:false,shadowStrength:P.get(),shadowBias:U.get(),normalOffset:V.get()});Z.castLight=a.get();let Q=false;g.onChange=p.onChange=_.onChange=b.onChange=x.onChange=O.onChange=c.onChange=f.onChange=m.onChange=o.onChange=l.onChange=u.onChange;a.onChange=r.onChange=s.onChange=I.onChange=S.onChange=C.onChange=E.onChange=P.onChange=w.onChange=D.onChange=q;function q(){Q=true}M.onChange=function(){X=true;const e=M.get();N.setUiAttribs({greyout:!e});L.setUiAttribs({greyout:!e});P.setUiAttribs({greyout:!e});w.setUiAttribs({greyout:!e});D.setUiAttribs({greyout:!e});V.setUiAttribs({greyout:!e});B.setUiAttribs({greyout:!e});U.setUiAttribs({greyout:!e});R.setUiAttribs({greyout:!e});Q=true};let J=1/Number(N.get());function $(){const e=Number(j.get().charAt(0));let t=null;const n=Number(F.get());if(k.get()=="Linear"){t=CGL.Texture.FILTER_LINEAR}else if(k.get()=="Nearest"){t=CGL.Texture.FILTER_NEAREST}else if(k.get()=="Mip Map"){t=CGL.Texture.FILTER_MIPMAP}const i=Number(N.get());const a={isFloatingPointTexture:true,filter:t};if(e)Object.assign(a,{multisampling:true,multisamplingSamples:e});Object.assign(a,{anisotropic:n});Z.createFramebuffer(i,i,a);Z.createBlurEffect(a)}j.onChange=F.onChange=k.onChange=N.onChange=function(){X=true};function ee(){const e=Number(N.get());J=1/e;if(M.get()){Z.createFramebuffer(Number(N.get()),Number(N.get()),{});Z.createShadowMapShader();Z.createBlurEffect({});Z.createBlurShader();Z.updateProjectionMatrix(null,w.get(),D.get(),S.get())}if(G.get())$();X=false}const te=vec3.create();const ne=vec3.create();const ie=vec3.create();const ae=vec3.create();function re(){if(n.frameStore.shadowPass)return;if(n.shouldDrawHelpers(t)){gui.setTransformGizmo({posX:o,posY:l,posZ:u});CABLES.GL_MARKER.drawLineSourceDest(t,Z.position[0],Z.position[1],Z.position[2],Z.conePointAt[0],Z.conePointAt[1],Z.conePointAt[2])}}let se=false;i.onTriggered=oe;t.preRender=()=>{ee();oe()};function oe(){if(X){if(n.frameStore.shadowPass)return;ee()}if(!n.frameStore.shadowPass){if(!Z.isUsed&&!se){t.setUiError("lightUsed","No operator is using this light. Make sure this op is positioned before an operator that uses lights. Also make sure there is an operator that uses lights after this.",1);se=true}else if(!Z.isUsed&&se){}else if(Z.isUsed&&se){t.setUiError("lightUsed",null);se=false}else if(Z.isUsed&&!se){}Z.isUsed=false}if(Q){Z.position=[0,1,2].map(function(e){return h[e].get()});Z.color=[0,1,2].map(function(e){return v[e].get()});Z.specular=[0,1,2].map(function(e){return A[e].get()});Z.conePointAt=[0,1,2].map(function(e){return d[e].get()});Z.intensity=r.get();Z.castLight=a.get();Z.radius=s.get();Z.falloff=I.get();Z.cosConeAngleInner=Math.cos(CGL.DEG2RAD*C.get());Z.cosConeAngle=Math.cos(CGL.DEG2RAD*S.get());Z.spotExponent=E.get();Z.castShadow=M.get();Z.updateProjectionMatrix(null,w.get(),D.get(),S.get())}if(!n.frameStore.lightStack)n.frameStore.lightStack=[];vec3.set(te,o.get(),l.get(),u.get());vec3.set(ne,c.get(),f.get(),m.get());vec3.transformMat4(ie,te,n.mMatrix);vec3.transformMat4(ae,ne,n.mMatrix);Z.position=ie;Z.conePointAt=ae;Y.set(Z.position[0]);W.set(Z.position[1]);K.set(Z.position[2]);if(!n.frameStore.shadowPass)re();n.frameStore.lightStack.push(Z);if(M.get()){const e=1.5*B.get()*J;if(L.get())Z.renderPasses(R.get(),e,function(){z.trigger()});H.set(null);H.set(Z.getShadowMapDepth());n.frameStore.lightStack.pop();Z.castShadow=M.get();Z.blurAmount=B.get();Z.normalOffset=V.get();Z.shadowBias=U.get();Z.shadowStrength=P.get();n.frameStore.lightStack.push(Z)}z.trigger();n.frameStore.lightStack.pop()}};Ops.Gl.Phong.SpotLight_v5.prototype=new CABLES.Op;CABLES.OPS["76418c17-abd5-401b-82e2-688db6f966ee"]={f:Ops.Gl.Phong.SpotLight_v5,objName:"Ops.Gl.Phong.SpotLight_v5"};Ops.Gl.TextureEffects.BrightnessContrast=function(){CABLES.Op.apply(this,arguments);const e=this;const t={brightness_contrast_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float amount;\nUNI float amountbright;\n\nvoid main()\n{\n    vec4 col=vec4(1.0,0.0,0.0,1.0);\n    col=texture(tex,texCoord);\n\n    // apply contrast\n    col.rgb = ((col.rgb - 0.5) * max(amount*2.0, 0.0))+0.5;\n\n    // apply brightness\n    col.rgb *= amountbright*2.0;\n\n    outColor = col;\n}"};const n=e.inTrigger("render"),i=e.inValueSlider("contrast",.5),a=e.inValueSlider("brightness",.5),r=e.outTrigger("trigger");const s=e.patch.cgl;const o=new CGL.Shader(s,"brightnesscontrast");o.setSource(o.getDefaultVertexShader(),t.brightness_contrast_frag);const l=new CGL.Uniform(o,"t","tex",0);const u=new CGL.Uniform(o,"f","amount",i);const h=new CGL.Uniform(o,"f","amountbright",a);n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;if(!s.currentTextureEffect.getCurrentSourceTexture())return;if(!CGL.TextureEffect.checkOpInEffect(e))return;s.pushShader(o);s.currentTextureEffect.bind();s.setTexture(0,s.currentTextureEffect.getCurrentSourceTexture().tex);s.currentTextureEffect.finish();s.popShader();r.trigger()}};Ops.Gl.TextureEffects.BrightnessContrast.prototype=new CABLES.Op;CABLES.OPS["54b89199-c594-4dff-bc48-82d6c7a55e8a"]={f:Ops.Gl.TextureEffects.BrightnessContrast,objName:"Ops.Gl.TextureEffects.BrightnessContrast"};Ops.Devices.Mouse.Mouse_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueBool("Active",true),i=e.inValueBool("relative"),a=e.inValueBool("normalize"),r=e.inValueBool("flip y",true),s=e.inValueSelect("Area",["Canvas","Document","Parent Element"],"Canvas"),o=e.inBool("right click prevent default",true),l=e.inValueBool("Touch support",true),u=e.inValueBool("smooth"),h=e.inValueFloat("smoothSpeed",20),c=e.inValueFloat("multiply",1),f=e.outNumber("x",0),m=e.outNumber("y",0),d=e.outValueBool("button down"),g=e.outTrigger("click"),p=e.outTrigger("Button Up"),_=e.outTrigger("click right"),v=e.outValueBool("mouseOver"),b=e.outNumber("button");e.setPortGroup("Behavior",[i,a,r,s,o,l]);e.setPortGroup("Smoothing",[u,h,c]);let x=0;const O=e.patch.cgl;let A=null;function S(n,i){if(a.get()){let e=O.canvas.width/O.pixelDensity;let t=O.canvas.height/O.pixelDensity;if(A==document.body){e=A.clientWidth/O.pixelDensity;t=A.clientHeight/O.pixelDensity}f.set(((n||0)/e*2-1)*c.get());m.set(((i||0)/t*2-1)*c.get())}else{f.set((n||0)*c.get());m.set((i||0)*c.get())}}u.onChange=function(){if(u.get())x=setInterval(U,5);else if(x)clearTimeout(x)};let C,E;let T=0,I=0;a.onChange=function(){y=0;M=0;S(y,M)};var y=O.canvas.width/2;var M=O.canvas.height/2;T=y;I=M;f.set(y);m.set(M);let L=0;let N=0;let P=0;let w=0;K();s.onChange=K;let D=0;function U(){D=h.get();if(D<=0)D=.01;const e=Math.abs(y-T);const t=Math.round(e/D,0);T=T<y?T+t:T-t;const n=Math.abs(M-I);const i=Math.round(n/D,0);I=I<M?I+i:I-i;S(T,I)}function R(e){d.set(false);v.set(true);D=h.get()}function V(e){b.set(e.which);d.set(true)}function B(e){b.set(0);d.set(false);p.trigger()}function G(e){_.trigger();if(o.get())e.preventDefault()}function j(e){g.trigger()}function k(e){L=0;N=0;D=100;v.set(false);d.set(false)}i.onChange=function(){P=0;w=0};function F(e){if(!i.get()){if(s.get()!="Document"){P=e.offsetX;w=e.offsetY}else{P=e.clientX;w=e.clientY}if(u.get()){y=P;if(r.get())M=A.clientHeight-w;else M=w}else{if(r.get())S(P,A.clientHeight-w);else S(P,w)}}else{if(L!=0&&N!=0){P=e.offsetX-L;w=e.offsetY-N}else{}L=e.offsetX;N=e.offsetY;y+=P;M+=w;if(M>460)M=460}}function X(e){v.set(true);F(e)}function z(e){if(event.touches&&event.touches.length>0)F(e.touches[0])}function H(e){d.set(true);if(e.touches&&e.touches.length>0)V(e.touches[0])}function Y(e){d.set(false);B()}l.onChange=function(){W();K()};function W(){if(!A)return;A.removeEventListener("touchend",Y);A.removeEventListener("touchstart",H);A.removeEventListener("touchmove",z);A.removeEventListener("click",j);A.removeEventListener("mousemove",X);A.removeEventListener("mouseleave",k);A.removeEventListener("mousedown",V);A.removeEventListener("mouseup",B);A.removeEventListener("mouseenter",R);A.removeEventListener("contextmenu",G);A=null}function K(){if(A||!n.get())W();if(!n.get())return;A=O.canvas;if(s.get()=="Document")A=document.body;if(s.get()=="Parent Element")A=O.canvas.parentElement;if(l.get()){A.addEventListener("touchend",Y);A.addEventListener("touchstart",H);A.addEventListener("touchmove",z)}A.addEventListener("mousemove",X);A.addEventListener("mouseleave",k);A.addEventListener("mousedown",V);A.addEventListener("mouseup",B);A.addEventListener("mouseenter",R);A.addEventListener("contextmenu",G);A.addEventListener("click",j)}n.onChange=function(){if(A)W();if(n.get())K()};e.onDelete=function(){W()};K()};Ops.Devices.Mouse.Mouse_v2.prototype=new CABLES.Op;CABLES.OPS["9fa3fc46-3147-4e3a-8ee8-a93ea9e8786e"]={f:Ops.Devices.Mouse.Mouse_v2,objName:"Ops.Devices.Mouse.Mouse_v2"};Ops.Gl.CanvasInfo=function(){CABLES.Op.apply(this,arguments);const t=this;const e={};const n=t.outNumber("width"),i=t.outNumber("height"),a=t.inSwitch("Pixel Unit",["Display","CSS"],"Display"),r=t.outNumber("Pixel Ratio"),s=t.outNumber("Aspect Ratio"),o=t.outBool("Landscape");let l=t.patch.cgl;l.on("resize",u);a.onChange=u;u();function u(){let e=1;if(a.get()=="CSS")e=t.patch.cgl.pixelDensity;i.set(l.canvasHeight/e);n.set(l.canvasWidth/e);r.set(t.patch.cgl.pixelDensity);s.set(l.canvasWidth/l.canvasHeight);o.set(l.canvasWidth>l.canvasHeight?1:0)}};Ops.Gl.CanvasInfo.prototype=new CABLES.Op;CABLES.OPS["94e499e5-b4ee-4861-ab48-6ab5098b2cc3"]={f:Ops.Gl.CanvasInfo,objName:"Ops.Gl.CanvasInfo"};Ops.Anim.Smooth=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("Update"),i=e.inBool("Separate inc/dec",false),a=e.inValue("Value"),r=e.outTrigger("Next"),s=e.inValue("Inc factor",4),o=e.inValue("Dec factor",4),l=e.outValue("Result",0);let u=0;let h=0;let c=0;let f=0;e.toWorkPortsNeedToBeLinked(n);let m;let d;let g=4;let p=true;let _=0;const v=0;const b=1;x();O();i.setUiAttribs({hidePort:true});s.onChange=o.onChange=O;i.onChange=x;A();function x(){const e=i.get();if(!e)_=v;else _=b;if(_==v){o.setUiAttribs({greyout:true});s.setUiAttribs({title:"Inc/Dec factor"})}else if(_==b){o.setUiAttribs({greyout:false});s.setUiAttribs({title:"Inc factor"})}O();A()}function O(){if(_==v){m=s.get();d=s.get()}else if(_==b){m=s.get();d=o.get()}if(m<=.2||m!=m)m=.2;if(d<=.2||d!=d)d=.2}a.onChange=function(){p=false;let e=h;h=a.get()};s.onChange=function(){O()};function A(){let e=1;if(performance.now()-f>500||f===0)u=a.get()||0;else e=(performance.now()-f)/(performance.now()-f);f=performance.now();if(u!=u)u=0;if(g<=0)g=1e-4;const t=h-u;if(t>=0)u+=t/(d*e);else u+=t/(m*e);if(Math.abs(t)<1e-5)u=h;if(g!=g)u=0;if(u!=u||u==-Infinity||u==Infinity)u=a.get();if(c!=u){l.set(u);c=u}if(u==h&&!p){p=true;l.set(u)}r.trigger()}n.onTriggered=function(){A()}};Ops.Anim.Smooth.prototype=new CABLES.Op;CABLES.OPS["5677b5b5-753a-4fbf-9e91-64c81ec68a2f"]={f:Ops.Anim.Smooth,objName:"Ops.Anim.Smooth"};Ops.Time.DelayedTrigger=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("exe"),i=e.inValueFloat("delay",1),a=e.inTriggerButton("Cancel"),r=e.outTrigger("next"),s=e.outBool("Delaying");let o=null;a.onTriggered=function(){if(o)clearTimeout(o);o=null};n.onTriggered=function(){s.set(true);if(o)clearTimeout(o);o=setTimeout(function(){s.set(false);o=null;r.trigger()},i.get()*1e3)}};Ops.Time.DelayedTrigger.prototype=new CABLES.Op;CABLES.OPS["f4ff66b0-8500-46f7-9117-832aea0c2750"]={f:Ops.Time.DelayedTrigger,objName:"Ops.Time.DelayedTrigger"};Ops.Boolean.IfTrueThen_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("exe"),i=e.inValueBool("boolean",false),a=e.outTrigger("then"),r=e.outTrigger("else");n.onTriggered=s;function s(){if(i.get())a.trigger();else r.trigger()}};Ops.Boolean.IfTrueThen_v2.prototype=new CABLES.Op;CABLES.OPS["9549e2ed-a544-4d33-a672-05c7854ccf5d"]={f:Ops.Boolean.IfTrueThen_v2,objName:"Ops.Boolean.IfTrueThen_v2"};Ops.Boolean.Not=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueBool("Boolean");const i=e.outValue("Result");n.changeAlways=true;n.onChange=function(){i.set(!n.get())}};Ops.Boolean.Not.prototype=new CABLES.Op;CABLES.OPS["6d123c9f-7485-4fd9-a5c2-76e59dcbeb34"]={f:Ops.Boolean.Not,objName:"Ops.Boolean.Not"};Ops.WebAudio.AudioBuffer_v2=function(){CABLES.Op.apply(this,arguments);const i=this;const e={};const a=i.patch.cgl;const t=CABLES.WEBAUDIO.createAudioContext(i),n=i.inUrl("URL","audio"),r=i.inBool("Create Loading Task",true),s=i.outObject("Audio Buffer",null,"audioBuffer"),o=i.outValue("Finished Loading",false),l=i.outValue("Sample Rate",0),u=i.outValue("Length",0),h=i.outValue("Duration",0),c=i.outValue("Number of Channels",0),f=i.outBool("isLoading",0);let m=null;let d=false;let g=null;let p=null;let _=false;let v=false;let b=false;let x=new FileReader;let O=null;let A=0;if(!s.isLinked()){i.setUiError("notConnected","To play back sound, connect this op to a playback operator such as SamplePlayer or AudioBufferPlayer.",0)}else{i.setUiError("notConnected",null)}s.onLinkChanged=()=>{if(s.isLinked()){i.setUiError("notConnected",null)}else{i.setUiError("notConnected","To play back sound, connect this op to a playback operator such as SamplePlayer or AudioBufferPlayer.",0)}};function S(t,e){g=t;d=true;f.set(d);if(!e){const n=t.substr(t.lastIndexOf(".")+1);if(n==="wav"){i.setUiError("wavFormat","You are using a .wav file. Make sure the .wav file is 16 bit to be supported by all browsers. Safari does not support 24 bit .wav files.",1)}else{i.setUiError("wavFormat",null)}CABLES.WEBAUDIO.loadAudioFile(i.patch,t,T,I,r.get())}else{let e=C(t);if(e.type==="audio/wav"){i.setUiError("wavFormat","You are using a .wav file. Make sure the .wav file is 16 bit to be supported by all browsers. Safari does not support 24 bit .wav files.",1)}else{i.setUiError("wavFormat",null)}if(r.get()){A=a.patch.loading.start("audiobuffer from data-url "+i.id,"");if(a.patch.isEditorMode())gui.jobs().start({id:"loadaudio"+A,title:" loading audio data url ("+i.id+")"})}x.readAsArrayBuffer(e)}}function C(e){let t=atob(e.split(",")[1]);let n=e.split(",")[0].split(":")[1].split(";")[0];let i=new ArrayBuffer(t.length);let a=new Uint8Array(i);for(let e=0;e<t.length;e++){a[e]=t.charCodeAt(e)}let r=new Blob([i],{type:n});return r}n.onChange=function(){if(n.get()){v=String(n.get()).indexOf("data:")==0;if(d){b=String(n.get()).indexOf("data:")==0;const t=b?n.get():i.patch.getFilePath(n.get());if(t!==g){p=t}else{p=null}_=false;return}y();const e=v?n.get():i.patch.getFilePath(n.get());S(e,v)}else{if(d){_=true;return}y();i.setUiError("wavFormat",null);i.setUiError("failedLoading",null)}};x.onloadend=()=>{O=x.result;a.patch.loading.finished(A);if(a.patch.isEditorMode())gui.jobs().finish("loadaudio"+A);E()};function E(){if(O)t.decodeAudioData(O,T,I)}function T(e){d=false;f.set(d);if(_){y();_=false;return}if(p){S(p,b);p=null}else{m=e;u.set(e.length);h.set(e.duration);c.set(e.numberOfChannels);l.set(e.sampleRate);s.set(e);i.setUiError("failedLoading",null);o.set(true);v=false;b=false}}function I(e){i.logError("Error: Loading audio file failed: ",e);i.setUiError("failedLoading","The audio file could not be loaded. Make sure the right file URL is used.",2);d=false;y();f.set(d);m=null;if(p){S(p,b);p=null}}function y(){u.set(0);h.set(0);c.set(0);l.set(0);s.set(null);o.set(false)}};Ops.WebAudio.AudioBuffer_v2.prototype=new CABLES.Op;CABLES.OPS["5f1d6a2f-1c04-4744-b0fb-910825beceee"]={f:Ops.WebAudio.AudioBuffer_v2,objName:"Ops.WebAudio.AudioBuffer_v2"};Ops.WebAudio.AudioBufferPlayer_v2=function(){CABLES.Op.apply(this,arguments);const n=this;const e={};const i=n.inObject("Audio Buffer",null,"audioBuffer");const a=n.inBool("Start / Stop",false);const r=n.inBool("Loop",false);const t=n.inTriggerButton("Restart");const s=n.inFloat("Offset",0);const o=n.inFloat("Playback Rate",1);const l=n.inFloat("Detune",0);n.setPortGroup("Playback Controls",[a,r,t]);n.setPortGroup("Time Controls",[s]);n.setPortGroup("Miscellaneous",[o,l]);const u=n.outObject("Audio Out",null,"audioNode");const h=n.outBool("Is Playing",false);const c=n.outBool("Loading",false);let f=null;let m=false;let d=false;let g=null;let p=null;let _=false;const v=CABLES.WEBAUDIO.createAudioContext(n);const b=v.createGain();if(!i.isLinked()){n.setUiError("inputNotConnected","To be able to play back sound, you need to connect an AudioBuffer to this op.",0)}else{n.setUiError("inputNotConnected",null)}i.onLinkChanged=()=>{if(!i.isLinked()){n.setUiError("inputNotConnected","To be able to play back sound, you need to connect an AudioBuffer to this op.",0)}else{n.setUiError("inputNotConnected",null)}};if(!u.isLinked()){n.setUiError("outputNotConnected","To be able to hear sound playing, you need to connect this op to an Output op.",0)}else{n.setUiError("outputNotConnected",null)}u.onLinkChanged=()=>{if(!u.isLinked()){n.setUiError("outputNotConnected","To be able to hear sound playing, you need to connect this op to an Output op.",0)}else{n.setUiError("outputNotConnected",null)}};i.onChange=function(){if(i.get())S();else{if(_){_=false;c.set(_)}if(m){y(0);f.buffer=null;f=null}}};a.onChange=function(){if(!i.get())return;if(!f){if(!_)S()}if(a.get()){const e=0;T(e)}else{const t=0;y(t)}};r.onChange=function(){if(f){f.loop=!!r.get()}};l.onChange=x;function x(){if(!f)return;const e=l.get()||0;if(f.detune){f.detune.setValueAtTime(e,v.currentTime)}}o.onChange=O;function O(){if(!f)return;const e=o.get()||0;if(e>=f.playbackRate.minValue&&e<=f.playbackRate.maxValue){f.playbackRate.setValueAtTime(e,v.currentTime)}}let A=false;t.onTriggered=function(){if(!f)return;if(!i.get())return;else{if(!(i.get()instanceof AudioBuffer))return}if(a.get()){if(m){A=true;y(0)}else{T(0)}}};function S(e=false){if(_)return;if(!(i.get()instanceof AudioBuffer))return;_=true;c.set(_);if(f){f.onended=null;if(f.buffer){y(0);f.disconnect(b);f.buffer=null}f=null}f=v.createBufferSource();const t=i.get();if(!t){_=false;c.set(_);return}f.buffer=t;f.onended=M;f.loop=r.get();f.connect(b);O();x();u.set(b);_=false;c.set(_);if(A){T(0);A=false;return}if(a.get()&&!e){T(0)}}let C=false;let E=null;s.onChange=()=>{if(s.get()>=0)n.setUiError("offsetNegative",null);else{n.setUiError("offsetNegative","Offset cannot be negative. Setting to 0.",1)}if(f){if(f.buffer){if(s.get()>f.buffer.duration){n.setUiError("offsetTooLong","Your offset value is higher than the total time of your audio file. Please decrease the duration to be able to hear sound when playing back your buffer.",1)}else{n.setUiError("offsetTooLong",null)}}}};function T(t){try{if(f){let e=Math.max(0,s.get());f.start(t,e);m=true;d=false;h.set(true)}else{n.log("start() but no src...")}}catch(e){n.log("Error on start: ",e.message);h.set(false);m=false}}function I(){let e=!r.get();S(e)}function y(e){try{if(f){f.stop();if(!A)I()}m=false;h.set(false)}catch(e){n.setUiError(e);h.set(false)}}function M(){if(r.get()){m=true;d=false}else{m=false;d=true}h.set(m);I()}};Ops.WebAudio.AudioBufferPlayer_v2.prototype=new CABLES.Op;CABLES.OPS["3abd0dbb-eeee-4c65-ae31-b8bc2345e2d5"]={f:Ops.WebAudio.AudioBufferPlayer_v2,objName:"Ops.WebAudio.AudioBufferPlayer_v2"};Ops.Boolean.IsZero=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValue("Value"),i=e.outValue("Result",true);n.onChange=function(){i.set(n.get()==0)}};Ops.Boolean.IsZero.prototype=new CABLES.Op;CABLES.OPS["76d37c73-3c32-47bd-8b4a-4229db7e57f1"]={f:Ops.Boolean.IsZero,objName:"Ops.Boolean.IsZero"};Ops.WebAudio.Output_v2=function(){CABLES.Op.apply(this,arguments);const a=this;const e={};let t=false;let r=CABLES.WEBAUDIO.createAudioContext(a);let s=r.createGain();const n=r.destination;const i=a.inObject("Audio In",null,"audioNode"),o=a.inFloatSlider("Volume",1),l=a.inBool("Mute",false),u=a.inBool("Show Audio Suspended Button",true),h=a.outNumber("Current Volume",0),c=a.outString("Context State","unknown");a.setPortGroup("Volume Settings",[l,o]);let f=null;let m=false;let d=null;l.onChange=()=>{v(l.get())};o.onChange=_;a.onMasterVolumeChanged=_;let g=a.patch.on("pause",_);let p=a.patch.on("resume",_);r.addEventListener("statechange",b);u.onChange=x;b();x();a.onDelete=()=>{if(s)s.disconnect();s=null;if(d)d.remove();if(g)a.patch.off(g);if(p)a.patch.off(p)};i.onChange=function(){if(!i.get()){if(f){try{if(f.disconnect){f.disconnect(s)}}catch(e){a.logError(e)}}a.setUiError("multipleInputs",null);if(m){if(s)s.disconnect(n);m=false}}else{if(i.links.length>1)a.setUiError("multipleInputs","You have connected multiple inputs. It is possible that you experience unexpected behaviour. Please use a Mixer op to connect multiple audio streams.",1);else a.setUiError("multipleInputs",null);if(i.get().connect)i.get().connect(s)}f=i.get();if(!m){if(s)s.connect(n);m=true}_()};function _(e){const t=a.patch.config.masterVolume||0;let n=o.get()*t;if(a.patch._paused||l.get())n=0;let i=.05;if(e)i=.2;n=CABLES.clamp(n,0,1);if(!s)a.logError("gainNode undefined");if(s)s.gain.linearRampToValueAtTime(n,r.currentTime+i);h.set(n)}function v(e){if(e){if(r.state==="suspended"){if(s){s.gain.cancelScheduledValues(r.currentTime);s.gain.value=0;s.gain.setValueAtTime(0,r.currentTime)}h.set(0);return}}_(true)}function b(){c.set(r.state);a.logVerbose("audioCtx.state change",r.state);if(r.state=="suspended")a.setUiError("ctxSusp","Your Browser suspended audio context, use playButton op to play audio after a user interaction");else a.setUiError("ctxSusp",null);x()}function x(){if(!u.get()&&d){d.remove();d=null}if(r.state=="suspended"){v(true);if(u.get()){t=true;if(!d){d=document.createElement("div");const e=a.patch.cgl.canvas.parentElement;if(e)e.appendChild(d);d.addEventListener("pointerdown",function(e){if(r&&r.state=="suspended"){r.resume()}})}d.style.padding="10px";d.style.position="absolute";d.style.right="20px";d.style.bottom="20px";d.style.width="24px";d.style.height="24px";d.style.cursor="pointer";d.style["border-radius"]="40px";d.style.background="#444";d.style["z-index"]="9999";d.style.display="block";d.dataset.opid=a.id;d.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-volume-2"><polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path></svg>'}}else{if(d)d.remove();d=null;if(t){a.log("was suspended - set vol");_(true)}}}};Ops.WebAudio.Output_v2.prototype=new CABLES.Op;CABLES.OPS["90b95403-b0c4-4980-ab3b-b6c354771c81"]={f:Ops.WebAudio.Output_v2,objName:"Ops.WebAudio.Output_v2"};Ops.Patch.LoadingStatus_v2=function(){CABLES.Op.apply(this,arguments);const i=this;const e={};const t=i.addInPort(new CABLES.Port(i,"exe",CABLES.OP_PORT_TYPE_FUNCTION)),a=i.inValueBool("PreRender Ops"),r=i.inBool("Play Timeline",true),s=i.outTrigger("Next"),o=i.outBool("Finished Initial Loading",false),l=i.outBool("Loading"),u=i.outNumber("Progress"),h=i.outArray("Jobs"),c=i.outTrigger("Trigger Loading Finished ");const f=i.patch.cgl;const m=i.patch;let d=false;const n=[];let g=true;document.body.classList.add("cables-loading");let p=f.patch.loading.start("loadingStatusInit","loadingStatusInit");t.onTriggered=()=>{const e=i.patch.loading.getListJobs();u.set(m.loading.getProgress());let t=e.length===0;const n=!t;if(n){h.set(i.patch.loading.getListJobs())}if(n){if(g){if(a.get())i.patch.preRenderOps();i.patch.timer.setTime(0);if(r.get()){i.patch.timer.play()}}g=false;document.body.classList.remove("cables-loading");document.body.classList.add("cables-loaded")}else{d=true;h.set(i.patch.loading.getListJobs());if(m.loading.getProgress()<1){i.patch.timer.setTime(0);i.patch.timer.pause()}}o.set(d);if(l.get()&&t)c.trigger();l.set(n);s.trigger();if(p){f.patch.loading.finished(p);p=null}}};Ops.Patch.LoadingStatus_v2.prototype=new CABLES.Op;CABLES.OPS["e62f7f4c-7436-437e-8451-6bc3c28545f7"]={f:Ops.Patch.LoadingStatus_v2,objName:"Ops.Patch.LoadingStatus_v2"};Ops.Array.ArrayLength=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inArray("array"),i=e.outNumber("length");i.ignoreValueSerialize=true;function a(){let e=0;if(n.get())e=n.get().length;else e=-1;i.set(e)}n.onChange=a};Ops.Array.ArrayLength.prototype=new CABLES.Op;CABLES.OPS["ea508405-833d-411a-86b4-1a012c135c8a"]={f:Ops.Array.ArrayLength,objName:"Ops.Array.ArrayLength"};Ops.Boolean.And=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueBool("bool 1"),i=e.inValueBool("bool 2"),a=e.outValueBool("result");n.onChange=i.onChange=r;function r(){a.set(i.get()&&n.get())}};Ops.Boolean.And.prototype=new CABLES.Op;CABLES.OPS["c26e6ce0-8047-44bb-9bc8-5a4f911ed8ad"]={f:Ops.Boolean.And,objName:"Ops.Boolean.And"};Ops.Value.TriggerOnChangeNumber=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inFloat("Value"),i=e.outTrigger("Next"),a=e.outNumber("Number");n.onChange=function(){a.set(n.get());i.trigger()}};Ops.Value.TriggerOnChangeNumber.prototype=new CABLES.Op;CABLES.OPS["f5c8c433-ce13-49c4-9a33-74e98f110ed0"]={f:Ops.Value.TriggerOnChangeNumber,objName:"Ops.Value.TriggerOnChangeNumber"};window.addEventListener("load",function(e){CABLES.jsLoaded=new Event("CABLES.jsLoaded");document.dispatchEvent(CABLES.jsLoaded)});this.CGL=this.CGL||{},this.CGL.COREMODULES=this.CGL.COREMODULES||{},this.CGL.COREMODULES.Copytexture=function(n){var i={};function a(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}return a.m=n,a.c=i,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)a.d(n,i,function(e){return t[e]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=0)}([function(e,t,n){"use strict";n.r(t);class h{constructor(e){this._logs=[],this.initiator=e}stack(e){console.error("["+this.initiator+"] ",e),console.log((new Error).stack),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"error",e)}groupCollapsed(e){console.groupCollapsed("["+this.initiator+"] "+e)}table(e){console.table(e)}groupEnd(){console.groupEnd()}error(e){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"error",arguments)}info(e){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"info",arguments)}warn(e){console.warn("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"warn",arguments)}verbose(){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"verbose",arguments)}log(e){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"log",arguments)}userInteraction(e){}}const a=function(){this._log=new h("eventtaget"),this._eventCallbacks={},this._logName="",this._logEvents=!1,this._listeners={},this.addEventListener=this.on=function(e,t,n){const i={id:(n||"")+CABLES.uuid(),name:e,cb:t};return this._eventCallbacks[e]?this._eventCallbacks[e].push(i):this._eventCallbacks[e]=[i],this._listeners[i.id]=i,i.id},this.hasEventListener=function(e,t){if(e&&!t)return!!this._listeners[e];if(this._log.warn("old eventtarget function haseventlistener!"),e&&t&&this._eventCallbacks[e]){return-1!=this._eventCallbacks[e].indexOf(t)}},this.removeEventListener=this.off=function(i,a){if(null==i)return;if(!a){const a=this._listeners[i];if(!a)return;let n=!0;for(;n;){n=!1;let t=-1;for(let e=0;e<this._eventCallbacks[a.name].length;e++)0===this._eventCallbacks[a.name][e].id.indexOf(i)&&(n=!0,t=e);-1!==t&&(this._eventCallbacks[a.name].splice(t,1),delete this._listeners[i])}return}this._log.stack(" old function signature: removeEventListener! use listener id");let t=null;for(let e=0;e<this._eventCallbacks[i].length;e++)this._eventCallbacks[i][e].cb==a&&(t=e);null!==t?delete this._eventCallbacks[t]:this._log.warn("removeEventListener not found "+i)},this.logEvents=function(e,t){this._logEvents=e,this._logName=t},this.emitEvent=function(t,n,i,a,r,s,o){if(this._logEvents&&console.log("[event] ",this._logName,t,this._eventCallbacks),this._eventCallbacks[t])for(let e=0;e<this._eventCallbacks[t].length;e++)this._eventCallbacks[t][e]&&this._eventCallbacks[t][e].cb(n,i,a,r,s,o);else this._logEvents&&console.log("[event] has no event callback",t,this._eventCallbacks)}},r={EASINGS:["linear","absolute","smoothstep","smootherstep","Cubic In","Cubic Out","Cubic In Out","Expo In","Expo Out","Expo In Out","Sin In","Sin Out","Sin In Out","Quart In","Quart Out","Quart In Out","Quint In","Quint Out","Quint In Out","Back In","Back Out","Back In Out","Elastic In","Elastic Out","Bounce In","Bounce Out"],EASING_LINEAR:0,EASING_ABSOLUTE:1,EASING_SMOOTHSTEP:2,EASING_SMOOTHERSTEP:3,EASING_CUBICSPLINE:4,EASING_CUBIC_IN:5,EASING_CUBIC_OUT:6,EASING_CUBIC_INOUT:7,EASING_EXPO_IN:8,EASING_EXPO_OUT:9,EASING_EXPO_INOUT:10,EASING_SIN_IN:11,EASING_SIN_OUT:12,EASING_SIN_INOUT:13,EASING_BACK_IN:14,EASING_BACK_OUT:15,EASING_BACK_INOUT:16,EASING_ELASTIC_IN:17,EASING_ELASTIC_OUT:18,EASING_BOUNCE_IN:19,EASING_BOUNCE_OUT:21,EASING_QUART_IN:22,EASING_QUART_OUT:23,EASING_QUART_INOUT:24,EASING_QUINT_IN:25,EASING_QUINT_OUT:26,EASING_QUINT_INOUT:27},s={OP_PORT_TYPE_VALUE:0,OP_PORT_TYPE_FUNCTION:1,OP_PORT_TYPE_OBJECT:2,OP_PORT_TYPE_TEXTURE:2,OP_PORT_TYPE_ARRAY:3,OP_PORT_TYPE_DYNAMIC:4,OP_PORT_TYPE_STRING:5,OP_VERSION_PREFIX:"_v"},o={PORT_DIR_IN:0,PORT_DIR_OUT:1},l={float32Concat:function(e,t){e instanceof Float32Array||(e=new Float32Array(e)),t instanceof Float32Array||(t=new Float32Array(t));const n=new Float32Array(e.length+t.length);return n.set(e),n.set(t,e.length),n}},i=function(){let n=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const t=(n+16*Math.random())%16|0;return n=Math.floor(n/16),("x"==e?t:3&t|8).toString(16)})},u=i;Math.randomSeed=1,Math.seededRandom=function(e,t){0===Math.randomSeed&&(Math.randomSeed=999*Math.random()),e=e||1,t=t||0,Math.randomSeed=(9301*Math.randomSeed+49297)%233280;return t+Math.randomSeed/233280*(e-t)},l.arrayWriteToEnd=function(t,e){for(let e=1;e<t.length;e++)t[e-1]=t[e];t[t.length-1]=e},l.isNumeric=function(e){return!isNaN(parseFloat(e))&&isFinite(e)},l.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)},String.prototype.endl=function(){return this+"\n"},String.prototype.startsWith=function(e){return 0===this.indexOf(e)},String.prototype.endsWith=function(e){return this.match(e+"$")==e};window.performance=window.performance||{offset:Date.now(),now:function(){return Date.now()-this.offset}};const c={Key:function(e){this.time=0,this.value=0,this.ui=null,this.onChange=null,this._easing=0,this.bezTangIn=0,this.bezTangOut=0,this.cb=null,this.cbTriggered=!1;this.setEasing(r.EASING_LINEAR),this.set(e)}};c.Key.cubicSpline=function(e,t,n){let i=e*e,a=i*e;return(2*a-3*i+1)*t.value+(a-2*i+e)*t.bezTangOut+(-2*a+3*i)*n.value+(a-i)*n.bezTangIn},c.Key.easeCubicSpline=function(e,t){return c.Key.cubicSpline(e,this,t)},c.Key.linear=function(e,t,n){return parseFloat(t.value)+parseFloat(n.value-t.value)*e},c.Key.easeLinear=function(e,t){return c.Key.linear(e,this,t)},c.Key.easeAbsolute=function(e,t){return this.value};c.Key.easeExpoIn=function(e,t){return e=function(e){return Math.pow(2,10*(e-1))}(e),c.Key.linear(e,this,t)};c.Key.easeExpoOut=function(e,t){return e=function(e){return e=1-Math.pow(2,-10*e)}(e),c.Key.linear(e,this,t)};c.Key.easeExpoInOut=function(e,t){return e=function(e){return(e*=2)<1?e=.5*Math.pow(2,10*(e-1)):(e--,e=.5*(2-Math.pow(2,-10*e))),e}(e),c.Key.linear(e,this,t)},c.Key.easeSinIn=function(e,t){return e=-1*Math.cos(e*Math.PI/2)+1,c.Key.linear(e,this,t)},c.Key.easeSinOut=function(e,t){return e=Math.sin(e*Math.PI/2),c.Key.linear(e,this,t)},c.Key.easeSinInOut=function(e,t){return e=-.5*(Math.cos(Math.PI*e)-1),c.Key.linear(e,this,t)};c.Key.easeCubicIn=function(e,t){return e=function(e){return e*=e*e}(e),c.Key.linear(e,this,t)},c.Key.easeInQuint=function(e,t){return e*=e*e*e*e,c.Key.linear(e,this,t)},c.Key.easeOutQuint=function(e,t){return e=(e-=1)*e*e*e*e+1,c.Key.linear(e,this,t)},c.Key.easeInOutQuint=function(e,t){return(e/=.5)<1?e*=.5*e*e*e*e:e=.5*((e-=2)*e*e*e*e+2),c.Key.linear(e,this,t)},c.Key.easeInQuart=function(e,t){return e*=e*e*e,c.Key.linear(e,this,t)},c.Key.easeOutQuart=function(e,t){return e=-1*((e-=1)*e*e*e-1),c.Key.linear(e,this,t)},c.Key.easeInOutQuart=function(e,t){return(e/=.5)<1?e*=.5*e*e*e:e=-.5*((e-=2)*e*e*e-2),c.Key.linear(e,this,t)},c.Key.bounce=function(e){return(e/=1)<1/2.75?e*=7.5625*e:e=e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375,e},c.Key.easeInBounce=function(e,t){return c.Key.linear(c.Key.bounce(e),this,t)},c.Key.easeOutBounce=function(e,t){return c.Key.linear(c.Key.bounce(e),this,t)},c.Key.easeInElastic=function(e,t){let n=1.70158,i=0,a=1;return 0===e?e=0:1==(e/=1)?e=1:(i||(i=.3),a<Math.abs(1)?(a=1,n=i/4):n=i/(2*Math.PI)*Math.asin(1/a),e=-a*Math.pow(2,10*(e-=1))*Math.sin((1*e-n)*(2*Math.PI)/i)+0),c.Key.linear(e,this,t)},c.Key.easeOutElastic=function(e,t){let n=1.70158,i=0,a=1;return 0===e?e=0:1==(e/=1)?e=1:(i||(i=.3),a<Math.abs(1)?(a=1,n=i/4):n=i/(2*Math.PI)*Math.asin(1/a),e=a*Math.pow(2,-10*e)*Math.sin((1*e-n)*(2*Math.PI)/i)+1+0),c.Key.linear(e,this,t)},c.Key.easeInBack=function(e,t){const n=1.70158;return e=e*e*((n+1)*e-n),c.Key.linear(e,this,t)},c.Key.easeOutBack=function(e,t){const n=1.70158;return e=(e=e/1-1)*e*((n+1)*e+n)+1,c.Key.linear(e,this,t)},c.Key.easeInOutBack=function(e,t){let n=1.70158;return e=(e/=.5)<1?e*e*((1+(n*=1.525))*e-n)*.5:.5*((e-=2)*e*((1+(n*=1.525))*e+n)+2),c.Key.linear(e,this,t)};c.Key.easeCubicOut=function(e,t){return e=function(e){return e=--e*e*e+1}(e),c.Key.linear(e,this,t)};c.Key.easeCubicInOut=function(e,t){return e=function(e){return(e*=2)<1?e*=.5*e*e:e=.5*((e-=2)*e*e+2),e}(e),c.Key.linear(e,this,t)},c.Key.easeSmoothStep=function(e,t){const n=Math.max(0,Math.min(1,e));return e=n*n*(3-2*n),c.Key.linear(e,this,t)},c.Key.easeSmootherStep=function(e,t){const n=Math.max(0,Math.min(1,(e-0)/1));return e=n*n*n*(n*(6*n-15)+10),c.Key.linear(e,this,t)},c.Key.prototype.setEasing=function(e){this._easing=e,this._easing==r.EASING_LINEAR?this.ease=c.Key.easeLinear:this._easing==r.EASING_ABSOLUTE?this.ease=c.Key.easeAbsolute:this._easing==r.EASING_SMOOTHSTEP?this.ease=c.Key.easeSmoothStep:this._easing==r.EASING_SMOOTHERSTEP?this.ease=c.Key.easeSmootherStep:this._easing==r.EASING_CUBIC_IN?this.ease=c.Key.easeCubicIn:this._easing==r.EASING_CUBIC_OUT?this.ease=c.Key.easeCubicOut:this._easing==r.EASING_CUBIC_INOUT?this.ease=c.Key.easeCubicInOut:this._easing==r.EASING_EXPO_IN?this.ease=c.Key.easeExpoIn:this._easing==r.EASING_EXPO_OUT?this.ease=c.Key.easeExpoOut:this._easing==r.EASING_EXPO_INOUT?this.ease=c.Key.easeExpoInOut:this._easing==r.EASING_SIN_IN?this.ease=c.Key.easeSinIn:this._easing==r.EASING_SIN_OUT?this.ease=c.Key.easeSinOut:this._easing==r.EASING_SIN_INOUT?this.ease=c.Key.easeSinInOut:this._easing==r.EASING_BACK_OUT?this.ease=c.Key.easeOutBack:this._easing==r.EASING_BACK_IN?this.ease=c.Key.easeInBack:this._easing==r.EASING_BACK_INOUT?this.ease=c.Key.easeInOutBack:this._easing==r.EASING_ELASTIC_IN?this.ease=c.Key.easeInElastic:this._easing==r.EASING_ELASTIC_OUT?this.ease=c.Key.easeOutElastic:this._easing==r.EASING_ELASTIC_INOUT?this.ease=c.Key.easeElasticInOut:this._easing==r.EASING_BOUNCE_IN?this.ease=c.Key.easeInBounce:this._easing==r.EASING_BOUNCE_OUT?this.ease=c.Key.easeOutBounce:this._easing==r.EASING_QUART_OUT?this.ease=c.Key.easeOutQuart:this._easing==r.EASING_QUART_IN?this.ease=c.Key.easeInQuart:this._easing==r.EASING_QUART_INOUT?this.ease=c.Key.easeInOutQuart:this._easing==r.EASING_QUINT_OUT?this.ease=c.Key.easeOutQuint:this._easing==r.EASING_QUINT_IN?this.ease=c.Key.easeInQuint:this._easing==r.EASING_QUINT_INOUT?this.ease=c.Key.easeInOutQuint:this._easing==r.EASING_CUBICSPLINE?this.ease=c.Key.easeCubicSpline:(this._easing=r.EASING_LINEAR,this.ease=c.Key.easeLinear)},c.Key.prototype.trigger=function(){this.cb(),this.cbTriggered=!0},c.Key.prototype.setValue=function(e){this.value=e,null!==this.onChange&&this.onChange()},c.Key.prototype.set=function(e){e&&(e.e&&this.setEasing(e.e),e.cb&&(this.cb=e.cb,this.cbTriggered=!1),e.b,e.hasOwnProperty("t")&&(this.time=e.t),e.hasOwnProperty("time")&&(this.time=e.time),e.hasOwnProperty("v")?this.value=e.v:e.hasOwnProperty("value")&&(this.value=e.value)),null!==this.onChange&&this.onChange()},c.Key.prototype.getSerialized=function(){const e={};return e.t=this.time,e.v=this.value,e.e=this._easing,e},c.Key.prototype.getEasing=function(){return this._easing};const f=function(e){a.apply(this),e=e||{},this.keys=[],this.onChange=null,this.stayInTimeline=!1,this.loop=!1,this._log=new h("Anim"),this.defaultEasing=e.defaultEasing||r.EASING_LINEAR,this.onLooped=null,this._timesLooped=0,this._needsSort=!1};f.prototype.forceChangeCallback=function(){null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this)},f.prototype.getLoop=function(){return this.loop},f.prototype.setLoop=function(e){this.loop=e,this.emitEvent("onChange",this)},f.prototype.hasEnded=function(e){return 0===this.keys.length||this.keys[this.keys.length-1].time<=e},f.prototype.isRising=function(e){if(this.hasEnded(e))return!1;const t=this.getKeyIndex(e);return this.keys[t].value<this.keys[t+1].value},f.prototype.clearBefore=function(e){const t=this.getValue(e),n=this.getKeyIndex(e);this.setValue(e,t),n>1&&this.keys.splice(0,n)},f.prototype.clear=function(e){let t=0;e&&(t=this.getValue(e)),this.keys.length=0,e&&this.setValue(e,t),null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this)},f.prototype.sortKeys=function(){this.keys.sort((e,t)=>parseFloat(e.time)-parseFloat(t.time)),this._needsSort=!1},f.prototype.getLength=function(){return 0===this.keys.length?0:this.keys[this.keys.length-1].time},f.prototype.getKeyIndex=function(t){let n=0;for(let e=0;e<this.keys.length;e++)if(t>=this.keys[e].time&&(n=e),this.keys[e].time>t)return n;return n},f.prototype.setValue=function(t,n,i){let a=null;for(const e in this.keys)if(this.keys[e].time==t){a=this.keys[e],this.keys[e].setValue(n),this.keys[e].cb=i;break}return a||(a=new c.Key({time:t,value:n,e:this.defaultEasing,cb:i}),this.keys.push(a)),this.onChange&&this.onChange(),this.emitEvent("onChange",this),this._needsSort=!0,a},f.prototype.setKeyEasing=function(e,t){this.keys[e]&&(this.keys[e].setEasing(t),this.emitEvent("onChange",this))},f.prototype.getSerialized=function(){const t={keys:[]};t.loop=this.loop;for(const e in this.keys)t.keys.push(this.keys[e].getSerialized());return t},f.prototype.getKey=function(e){const t=this.getKeyIndex(e);return this.keys[t]},f.prototype.getNextKey=function(e){let t=this.getKeyIndex(e)+1;return t>=this.keys.length&&(t=this.keys.length-1),this.keys[t]},f.prototype.isFinished=function(e){return this.keys.length<=0||e>this.keys[this.keys.length-1].time},f.prototype.isStarted=function(e){return!(this.keys.length<=0)&&e>=this.keys[0].time},f.prototype.getValue=function(e){if(0===this.keys.length)return 0;if(this._needsSort&&this.sortKeys(),e<this.keys[0].time)return this.keys[0].value;const t=this.keys.length-1;if(this.loop&&e>this.keys[t].time){e/this.keys[t].time>this._timesLooped&&(this._timesLooped++,this.onLooped&&this.onLooped()),e=(e-this.keys[0].time)%(this.keys[t].time-this.keys[0].time),e+=this.keys[0].time}const n=this.getKeyIndex(e);if(n>=t)return this.keys[t].cb&&!this.keys[t].cbTriggered&&this.keys[t].trigger(),this.keys[t].value;const i=parseInt(n,10)+1,a=this.keys[n],r=this.keys[i];if(a.cb&&!a.cbTriggered&&a.trigger(),!r)return-1;const s=(e-a.time)/(r.time-a.time);return a.ease||this.log._warn("has no ease",a,r),a.ease(s,r)},f.prototype.addKey=function(e){void 0===e.time?this.log.warn("key time undefined, ignoring!"):(this.keys.push(e),null!==this.onChange&&this.onChange(),this.emitEvent("onChange",this))},f.prototype.easingFromString=function(e){return"linear"==e?r.EASING_LINEAR:"absolute"==e?r.EASING_ABSOLUTE:"smoothstep"==e?r.EASING_SMOOTHSTEP:"smootherstep"==e?r.EASING_SMOOTHERSTEP:"Cubic In"==e?r.EASING_CUBIC_IN:"Cubic Out"==e?r.EASING_CUBIC_OUT:"Cubic In Out"==e?r.EASING_CUBIC_INOUT:"Expo In"==e?r.EASING_EXPO_IN:"Expo Out"==e?r.EASING_EXPO_OUT:"Expo In Out"==e?r.EASING_EXPO_INOUT:"Sin In"==e?r.EASING_SIN_IN:"Sin Out"==e?r.EASING_SIN_OUT:"Sin In Out"==e?r.EASING_SIN_INOUT:"Back In"==e?r.EASING_BACK_IN:"Back Out"==e?r.EASING_BACK_OUT:"Back In Out"==e?r.EASING_BACK_INOUT:"Elastic In"==e?r.EASING_ELASTIC_IN:"Elastic Out"==e?r.EASING_ELASTIC_OUT:"Bounce In"==e?r.EASING_BOUNCE_IN:"Bounce Out"==e?r.EASING_BOUNCE_OUT:"Quart Out"==e?r.EASING_QUART_OUT:"Quart In"==e?r.EASING_QUART_IN:"Quart In Out"==e?r.EASING_QUART_INOUT:"Quint Out"==e?r.EASING_QUINT_OUT:"Quint In"==e?r.EASING_QUINT_IN:"Quint In Out"==e?r.EASING_QUINT_INOUT:void 0},f.prototype.createPort=function(e,t,n){const i=e.inDropDown(t,r.EASINGS);return i.set("linear"),i.defaultValue="linear",i.onChange=function(){this.defaultEasing=this.easingFromString(i.get()),n&&n()}.bind(this),i},f.slerpQuaternion=function(n,i,a,r,s,o){f.slerpQuaternion.q1||(f.slerpQuaternion.q1=quat.create(),f.slerpQuaternion.q2=quat.create());const l=a.getKeyIndex(n);let u=l+1;if(u>=a.keys.length&&(u=a.keys.length-1),l==u)quat.set(i,a.keys[l].value,r.keys[l].value,s.keys[l].value,o.keys[l].value);else{const e=a.keys[l].time,t=(n-e)/(a.keys[u].time-e);quat.set(f.slerpQuaternion.q1,a.keys[l].value,r.keys[l].value,s.keys[l].value,o.keys[l].value),quat.set(f.slerpQuaternion.q2,a.keys[u].value,r.keys[u].value,s.keys[u].value,o.keys[u].value),quat.slerp(i,f.slerpQuaternion.q1,f.slerpQuaternion.q2,t)}return i};c.Anim=f;const m=function(e,t,n,i){a.apply(this),this.data={},this._log=new h("core_port"),this.direction=o.PORT_DIR_IN,this.id=u(),this.parent=e,this.links=[],this.value=0,this.name=t,this.type=n||s.OP_PORT_TYPE_VALUE,this.uiAttribs=i||{},this.anim=null,this._oldAnimVal=-5711,this.defaultValue=null,this._uiActiveState=!0,this.ignoreValueSerialize=!1,this.onLinkChanged=null,this.crashed=!1,this._valueBeforeLink=null,this._lastAnimFrame=-1,this._animated=!1,this.onValueChanged=null,this.onTriggered=null,this.onUiActiveStateChange=null,this.changeAlways=!1,this._warnedDeprecated=!1,this._useVariableName=null,this.activityCounter=0,this._tempLastUiValue=null,Object.defineProperty(this,"val",{get(){return this._log.warn("val getter deprecated!",this),this._log.stack("val getter deprecated"),this._warnedDeprecated=!0,this.get()},set(e){this._log.warn("val setter deprecated!",this),this._log.stack("val setter deprecated"),this.setValue(e),this._warnedDeprecated=!0}})};m.prototype.getValueForDisplay=function(){let e=String(this.value);return this.uiAttribs&&"boolnum"==this.uiAttribs.display&&(e+=" - ",this.value?e+="true":e+="false"),e=e.replace(/(<([^>]+)>)/gi,""),e.length>100&&(e=e.substring(0,100)),e},m.prototype.onAnimToggle=function(){},m.prototype._onAnimToggle=function(){this.onAnimToggle()},m.prototype.remove=function(){this.removeLinks(),this.parent.removePort(this)},m.prototype.setUiAttribs=function(t){let n=!1;this.uiAttribs||(this.uiAttribs={});for(const e in t)this.uiAttribs[e]!=t[e]&&(n=!0),this.uiAttribs[e]=t[e],"group"==e&&this.indexPort&&this.indexPort.setUiAttribs({group:t[e]});n&&this.emitEvent("onUiAttrChange",t)},m.prototype.getUiAttribs=function(){return this.uiAttribs},m.prototype.getUiAttrib=function(e){return this.uiAttribs&&this.uiAttribs.hasOwnProperty(e)?this.uiAttribs[e]:null},m.prototype.get=function(){return this._animated&&this._lastAnimFrame!=this.parent.patch.getFrameNum()&&(this._lastAnimFrame=this.parent.patch.getFrameNum(),this.value=this.anim.getValue(this.parent.patch.timer.getTime()),this._oldAnimVal=this.value,this.forceChange()),this.value},m.prototype.set=m.prototype.setValue=function(e){if(void 0!==e&&this.parent.enabled&&!this.crashed&&(e!==this.value||this.changeAlways||this.type==s.OP_PORT_TYPE_TEXTURE||this.type==s.OP_PORT_TYPE_ARRAY)){if(this._animated)this.anim.setValue(this.parent.patch.timer.getTime(),e);else{try{this.value=e,this.forceChange()}catch(e){this.crashed=!0,this.setValue=function(e){},this.onTriggered=function(){},this._log.error("onvaluechanged exception cought",e),this._log.error(e.stack),this._log.warn("exception in: "+this.parent.name),this.parent.patch.isEditorMode()&&gui.showOpCrash(this.parent),this.parent.patch.emitEvent("exception",e,this.parent),this.parent.onError&&this.parent.onError(e)}this.parent&&this.parent.patch&&this.parent.patch.isEditorMode()&&this.type==s.OP_PORT_TYPE_TEXTURE&&gui.texturePreview().updateTexturePort(this)}if(this.direction==o.PORT_DIR_OUT)for(let e=0;e<this.links.length;++e)this.links[e].setValue()}},m.prototype.updateAnim=function(){this._animated&&(this.value=this.get(),(this._oldAnimVal!=this.value||this.changeAlways)&&(this._oldAnimVal=this.value,this.forceChange()),this._oldAnimVal=this.value)},m.args=function(e){return(e+"").replace(/[/][/].*$/gm,"").replace(/\s+/g,"").replace(/[/][*][^/*]*[*][/]/g,"").split("){",1)[0].replace(/^[^(]*[(]/,"").replace(/=[^,]+/g,"").split(",").filter(Boolean)},m.prototype.forceChange=function(){this.onValueChanged||this.onChange,this._activity(),this.emitEvent("change",this.value,this),this.onChange?this.onChange(this,this.value):this.onValueChanged&&this.onValueChanged(this,this.value)},m.prototype.getTypeString=function(){return this.type==s.OP_PORT_TYPE_VALUE?"Number":this.type==s.OP_PORT_TYPE_FUNCTION?"Trigger":this.type==s.OP_PORT_TYPE_OBJECT?"Object":this.type==s.OP_PORT_TYPE_DYNAMIC?"Dynamic":this.type==s.OP_PORT_TYPE_ARRAY?"Array":this.type==s.OP_PORT_TYPE_STRING?"String":"Unknown"},m.prototype.deSerializeSettings=function(t){if(t&&(t.animated&&this.setAnimated(t.animated),t.useVariable&&this.setVariableName(t.useVariable),t.anim)){this.anim||(this.anim=new f),this.anim.addEventListener("onChange",()=>{this.parent.patch.emitEvent("portAnimUpdated",this.parent,this,this.anim)}),t.anim.loop&&(this.anim.loop=t.anim.loop);for(const e in t.anim.keys)this.anim.keys.push(new c.Key(t.anim.keys[e]))}},m.prototype.getSerialized=function(){const t={};if(t.name=this.getName(),this.ignoreValueSerialize||0!==this.links.length||this.type==s.OP_PORT_TYPE_OBJECT&&this.value&&this.value.tex||(t.value=this.value),this._useVariableName&&(t.useVariable=this._useVariableName),this._animated&&(t.animated=!0),this.anim&&(t.anim=this.anim.getSerialized()),"file"==this.uiAttribs.display&&(t.display=this.uiAttribs.display),this.direction==o.PORT_DIR_OUT&&this.links.length>0){t.links=[];for(const e in this.links)!this.links[e].ignoreInSerialize&&this.links[e].portIn&&this.links[e].portOut&&t.links.push(this.links[e].getSerialized())}return t},m.prototype.shouldLink=function(){return!0},m.prototype.removeLinks=function(){let e=0;for(;this.links.length>0;){if(e++,e>5e3){this._log.warn("could not delete links... / infinite loop"),this.links.length=0;break}this.links[0].remove()}},m.prototype.removeLink=function(t){for(const e in this.links)this.links[e]==t&&this.links.splice(e,1);this.direction==o.PORT_DIR_IN&&(this.type==s.OP_PORT_TYPE_VALUE?this.setValue(this._valueBeforeLink||0):this.setValue(this._valueBeforeLink||null)),this.onLinkChanged&&this.onLinkChanged(),this.emitEvent("onLinkChanged")},m.prototype.getName=function(){return this.name},m.prototype.addLink=function(e){this._valueBeforeLink=this.value,this.links.push(e),this.onLinkChanged&&this.onLinkChanged(),this.emitEvent("onLinkChanged")},m.prototype.getLinkTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return this.links[e]},m.prototype.removeLinkTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return this.links[e].remove(),this.onLinkChanged&&this.onLinkChanged(),void this.emitEvent("onLinkChanged")},m.prototype.isLinkedTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return!0;return!1},m.prototype._activity=function(){this.activityCounter++},m.prototype.trigger=function(){if(this._activity(),0===this.links.length)return;if(!this.parent.enabled)return;let t=null;try{for(let e=0;e<this.links.length;++e)this.links[e].portIn&&(t=this.links[e].portIn,t.parent.patch.pushTriggerStack(t),t._onTriggered(),t.parent.patch.popTriggerStack()),this.links[e]&&this.links[e].activity()}catch(e){this.parent.enabled=!1,this.parent.patch.isEditorMode()&&(this.parent.patch.emitEvent("exception",e,t.parent),this.parent.patch.emitEvent("opcrash",t),t.parent.onError&&t.parent.onError(e)),this._log.warn("exception!"),this._log.error("ontriggered exception cought",e),this._log.error(e.stack),this._log.warn("exception in: "+t.parent.name)}},m.prototype.call=function(){this._log.warn("call deprecated - use trigger() "),this.trigger()},m.prototype.execute=function(){this._log.warn("### execute port: "+this.getName(),this.goals.length)},m.prototype.setVariableName=function(e){this._useVariableName=e},m.prototype.getVariableName=function(){return this._useVariableName},m.prototype.setVariable=function(e){this.setAnimated(!1);const t={useVariable:!1};this._variableIn&&(this._variableIn.removeListener(this.set.bind(this)),this._variableIn=null),e?(this._variableIn=this.parent.patch.getVar(e),this._variableIn?(this.type==s.OP_PORT_TYPE_OBJECT?this._variableIn.addListener(()=>{this.set(null),this.set(this._variableIn.getValue())}):this._variableIn.addListener(this.set.bind(this)),this.set(this._variableIn.getValue())):this._log.warn("PORT VAR NOT FOUND!!!",e),this._useVariableName=e,t.useVariable=!0,t.variableName=this._useVariableName):(t.variableName=this._useVariableName=null,t.useVariable=!1),this.setUiAttribs(t),this.parent.patch.emitEvent("portSetVariable",this.parent,this,e)},m.prototype._handleNoTriggerOpAnimUpdates=function(e){let t=!1;for(let e=0;e<this.parent.portsIn.length;e++)if(this.parent.portsIn.type==s.OP_PORT_TYPE_FUNCTION){t=!0;break}t||(e?this._notriggerAnimUpdate=this.parent.patch.on("onRenderFrame",()=>{this.updateAnim()}):this.parent.patch.removeEventListener(this._notriggerAnimUpdate))},m.prototype.setAnimated=function(e){this._animated!=e&&(this._animated=e,this._animated&&!this.anim&&(this.anim=new f,this.anim.addEventListener("onChange",()=>{this.parent.patch.emitEvent("portAnimUpdated",this.parent,this,this.anim)})),this._onAnimToggle()),this._handleNoTriggerOpAnimUpdates(e),this.setUiAttribs({isAnimated:this._animated})},m.prototype.toggleAnim=function(e){this._animated=!this._animated,this._animated&&!this.anim&&(this.anim=new f,this.anim.addEventListener("onChange",()=>{this.parent.patch.emitEvent("portAnimUpdated",this.parent,this,this.anim)})),this.setAnimated(this._animated),this._onAnimToggle(),this.setUiAttribs({isAnimated:this._animated})},m.prototype.getType=function(){return this.type},m.prototype.isLinked=function(){return this.links.length>0},m.prototype.isBoundToVar=function(){return null!=this._useVariableName},m.prototype.isAnimated=function(){return this._animated},m.prototype.isHidden=function(){return this.uiAttribs.hidePort},m.prototype._onTriggered=function(e){this._activity(),this.parent.updateAnims(),this.parent.enabled&&this.onTriggered&&this.onTriggered(e)},m.prototype._onSetProfiling=function(e){this.parent.patch.profiler.add("port",this),this.setValue(e),this.parent.patch.profiler.add("port",null)},m.prototype._onTriggeredProfiling=function(){this.parent.enabled&&this.onTriggered&&(this.parent.patch.profiler.add("port",this),this.onTriggered(),this.parent.patch.profiler.add("port",null))},m.prototype.onValueChange=function(e){this.onChange=e},m.prototype.getUiActiveState=function(){return this._uiActiveState},m.prototype.setUiActiveState=function(e){this._uiActiveState=e,this.onUiActiveStateChange&&this.onUiActiveStateChange()},m.prototype.hidePort=function(){this._log.warn("op.hideport() is deprecated, do not use it!")},m.portTypeNumberToString=function(e){return e==s.OP_PORT_TYPE_VALUE?"value":e==s.OP_PORT_TYPE_FUNCTION?"function":e==s.OP_PORT_TYPE_OBJECT?"object":e==s.OP_PORT_TYPE_ARRAY?"array":e==s.OP_PORT_TYPE_STRING?"string":e==s.OP_PORT_TYPE_DYNAMIC?"dynamic":"unknown"};const d=function(e,t,n,i,a,r,s,o,l,u){if(this._loc=-1,this._log=new h("cgl_uniform"),this._type=t,this._cgl=e._cgl,this._name=n,this._shader=e,this._value=1e-5,this._oldValue=null,this._port=null,this._structName=l,this._structUniformName=o,this._propertyName=u,this._shader._addUniform(this),this.needsUpdate=!0,this.shaderType=null,this.comment=null,"f"==t)this.set=this.setValue=this.setValueF.bind(this),this.updateValue=this.updateValueF.bind(this);else if("f[]"==t)this.set=this.setValue=this.setValueArrayF.bind(this),this.updateValue=this.updateValueArrayF.bind(this);else if("2f[]"==t)this.set=this.setValue=this.setValueArray2F.bind(this),this.updateValue=this.updateValueArray2F.bind(this);else if("3f[]"==t)this.set=this.setValue=this.setValueArray3F.bind(this),this.updateValue=this.updateValueArray3F.bind(this);else if("4f[]"==t)this.set=this.setValue=this.setValueArray4F.bind(this),this.updateValue=this.updateValueArray4F.bind(this);else if("i"==t)this.set=this.setValue=this.setValueI.bind(this),this.updateValue=this.updateValueI.bind(this);else if("2i"==t)this.set=this.setValue=this.setValue2I.bind(this),this.updateValue=this.updateValue2I.bind(this);else if("3i"==t)this.set=this.setValue=this.setValue3I.bind(this),this.updateValue=this.updateValue3I.bind(this);else if("4i"==t)this.set=this.setValue=this.setValue4I.bind(this),this.updateValue=this.updateValue4I.bind(this);else if("b"==t)this.set=this.setValue=this.setValueBool.bind(this),this.updateValue=this.updateValueBool.bind(this);else if("4f"==t)this.set=this.setValue=this.setValue4F.bind(this),this.updateValue=this.updateValue4F.bind(this);else if("3f"==t)this.set=this.setValue=this.setValue3F.bind(this),this.updateValue=this.updateValue3F.bind(this);else if("2f"==t)this.set=this.setValue=this.setValue2F.bind(this),this.updateValue=this.updateValue2F.bind(this);else if("t"==t)this.set=this.setValue=this.setValueT.bind(this),this.updateValue=this.updateValueT.bind(this);else if("tc"==t)this.set=this.setValue=this.setValueT.bind(this),this.updateValue=this.updateValueT.bind(this);else if("t[]"==t)this.set=this.setValue=this.setValueArrayT.bind(this),this.updateValue=this.updateValueArrayT.bind(this);else{if("m4"!=t&&"m4[]"!=t)throw new Error("Unknown uniform type");this.set=this.setValue=this.setValueM4.bind(this),this.updateValue=this.updateValueM4.bind(this)}"object"==typeof i&&i instanceof m?(this._port=i,this._value=this._port.get(),a&&r&&s?(a instanceof m&&r instanceof m&&s instanceof m||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0,0,0],this._port2=a,this._port3=r,this._port4=s,this._port.on("change",this.updateFromPort4f.bind(this)),this._port2.on("change",this.updateFromPort4f.bind(this)),this._port3.on("change",this.updateFromPort4f.bind(this)),this._port4.on("change",this.updateFromPort4f.bind(this)),this.updateFromPort4f()):a&&r?(a instanceof m&&r instanceof m||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0,0],this._port2=a,this._port3=r,this._port.on("change",this.updateFromPort3f.bind(this)),this._port2.on("change",this.updateFromPort3f.bind(this)),this._port3.on("change",this.updateFromPort3f.bind(this)),this.updateFromPort3f()):a?(a instanceof m||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0],this._port2=a,this._port.on("change",this.updateFromPort2f.bind(this)),this._port2.on("change",this.updateFromPort2f.bind(this)),this.updateFromPort2f()):this._port.on("change",this.updateFromPort.bind(this))):this._value=i,this.setValue(this._value),this.needsUpdate=!0};d.prototype.copy=function(e){const t=new d(e,this._type,this._name,this._value,this._port2,this._port3,this._port4,this._structUniformName,this._structName,this._propertyName);return t.shaderType=this.shaderType,t},d.prototype.getGlslTypeString=function(){return"f"==this._type?"float":"b"==this._type?"bool":"i"==this._type?"int":"2i"==this._type?"ivec2":"2f"==this._type?"vec2":"3f"==this._type?"vec3":"4f"==this._type?"vec4":"m4"==this._type?"mat4":"t"==this._type?"sampler2D":"tc"==this._type?"samplerCube":"3f[]"==this._type||"m4[]"==this._type?null:void this._log.warn("[CGL UNIFORM] unknown glsl type string ",this._type)},d.prototype._isValidLoc=function(){return-1!=this._loc},d.prototype.getType=function(){return this._type},d.prototype.getName=function(){return this._name},d.prototype.getValue=function(){return this._value},d.prototype.getShaderType=function(){return this.shaderType},d.prototype.isStructMember=function(){return!!this._structName},d.prototype.resetLoc=function(){this._loc=-1,this.needsUpdate=!0},d.prototype.bindTextures=function(){return this._value},d.prototype.resetLoc=function(){this._loc=-1,this.needsUpdate=!0},d.prototype.bindTextures=function(){},d.prototype.getLoc=function(){return this._loc},d.prototype.updateFromPort4f=function(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this._value[3]=this._port4.get(),this.setValue(this._value)},d.prototype.updateFromPort3f=function(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this.setValue(this._value)},d.prototype.updateFromPort2f=function(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this.setValue(this._value)},d.prototype.updateFromPort=function(){this.setValue(this._port.get())},d.prototype.updateValueF=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1f(this._loc,this._value),this._cgl.profileData.profileUniformCount++},d.prototype.setValueF=function(e){e!=this._value&&(this.needsUpdate=!0,this._value=e)},d.prototype.updateValueI=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1i(this._loc,this._value),this._cgl.profileData.profileUniformCount++},d.prototype.updateValue2I=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform2i(this._loc,this._value[0],this._value[1]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},d.prototype.updateValue3I=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform3i(this._loc,this._value[0],this._value[1],this._value[2]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},d.prototype.updateValue4I=function(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform4i(this._loc,this._value[0],this._value[1],this._value[2],this._value[3]),this._cgl.profileData.profileUniformCount++},d.prototype.setValueI=function(e){e!=this._value&&(this.needsUpdate=!0,this._value=e)},d.prototype.setValue2I=function(e){e&&(this._oldValue?e[0]==this._oldValue[0]&&e[1]==this._oldValue[1]||(this._oldValue[0]=e[0],this._oldValue[1]=e[1],this.needsUpdate=!0):(this._oldValue=[e[0]-1,1],this.needsUpdate=!0),this._value=e)},d.prototype.setValue3I=function(e){e&&(this._oldValue?e[0]==this._oldValue[0]&&e[1]==this._oldValue[1]&&e[2]==this._oldValue[2]||(this._oldValue[0]=e[0],this._oldValue[1]=e[1],this._oldValue[2]=e[2],this.needsUpdate=!0):(this._oldValue=[e[0]-1,1,2],this.needsUpdate=!0),this._value=e)},d.prototype.setValue4I=function(e){this.needsUpdate=!0,this._value=e||vec4.create()},d.prototype.updateValueBool=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1i(this._loc,this._value?1:0),this._cgl.profileData.profileUniformCount++},d.prototype.setValueBool=function(e){e!=this._value&&(this.needsUpdate=!0,this._value=e)},d.prototype.setValueArray4F=function(e){this.needsUpdate=!0,this._value=e},d.prototype.updateValueArray4F=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform4fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},d.prototype.setValueArray3F=function(e){this.needsUpdate=!0,this._value=e},d.prototype.updateValueArray3F=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform3fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},d.prototype.setValueArray2F=function(e){this.needsUpdate=!0,this._value=e},d.prototype.updateValueArray2F=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform2fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},d.prototype.setValueArrayF=function(e){this.needsUpdate=!0,this._value=e},d.prototype.updateValueArrayF=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform1fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},d.prototype.setValueArrayT=function(e){this.needsUpdate=!0,this._value=e},d.prototype.updateValue3F=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform3f(this._loc,this._value[0],this._value[1],this._value[2]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},d.prototype.setValue3F=function(e){e&&(this._oldValue?e[0]==this._oldValue[0]&&e[1]==this._oldValue[1]&&e[2]==this._oldValue[2]||(this._oldValue[0]=e[0],this._oldValue[1]=e[1],this._oldValue[2]=e[2],this.needsUpdate=!0):(this._oldValue=[e[0]-1,1,2],this.needsUpdate=!0),this._value=e)},d.prototype.updateValue2F=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform2f(this._loc,this._value[0],this._value[1]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},d.prototype.setValue2F=function(e){e&&(this._oldValue?e[0]==this._oldValue[0]&&e[1]==this._oldValue[1]||(this._oldValue[0]=e[0],this._oldValue[1]=e[1],this.needsUpdate=!0):(this._oldValue=[e[0]-1,1],this.needsUpdate=!0),this._value=e)},d.prototype.updateValue4F=function(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._value||(this._log.warn("no value for uniform",this._name,this),this._value=[0,0,0,0]),this.needsUpdate=!1,this._shader.getCgl().gl.uniform4f(this._loc,this._value[0],this._value[1],this._value[2],this._value[3]),this._cgl.profileData.profileUniformCount++},d.prototype.setValue4F=function(e){"number"==typeof this.value&&(this.value=vec4.create()),e&&(this._oldValue?e[0]==this._oldValue[0]&&e[1]==this._oldValue[1]&&e[2]==this._oldValue[2]&&e[3]==this._oldValue[3]||(this._oldValue[0]=e[0],this._oldValue[1]=e[1],this._oldValue[2]=e[2],this.needsUpdate=!0):(this._oldValue=[e[0]-1,1,2,3],this.needsUpdate=!0),this._value=e)},d.prototype.updateValueM4=function(){if(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),!this._value||this._value.length%16!=0)return console.log("this.name",this._name,this._value);this._shader.getCgl().gl.uniformMatrix4fv(this._loc,!1,this._value),this._cgl.profileData.profileUniformCount++},d.prototype.setValueM4=function(e){this.needsUpdate=!0,this._value=e||mat4.create()},d.prototype.updateValueArrayT=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform1iv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},d.prototype.updateValueT=function(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._cgl.profileData.profileUniformCount++,this._shader.getCgl().gl.uniform1i(this._loc,this._value),this.needsUpdate=!1},d.prototype.setValueT=function(e){this.needsUpdate=!0,this._value=e};const g=180/Math.PI,p=(Math.PI,{SHADERVAR_VERTEX_POSITION:"vPosition",SHADERVAR_VERTEX_NUMBER:"attrVertIndex",SHADERVAR_VERTEX_NORMAL:"attrVertNormal",SHADERVAR_VERTEX_TEXCOORD:"attrTexCoord",SHADERVAR_INSTANCE_MMATRIX:"instMat",SHADERVAR_VERTEX_COLOR:"attrVertColor",SHADERVAR_UNI_PROJMAT:"projMatrix",SHADERVAR_UNI_VIEWMAT:"viewMatrix",SHADERVAR_UNI_MODELMAT:"modelMatrix",SHADERVAR_UNI_NORMALMAT:"normalMatrix",SHADERVAR_UNI_INVVIEWMAT:"inverseViewMatrix",SHADERVAR_UNI_VIEWPOS:"camPos"});const _={lastMesh:null},v=function(e,t,n){this._cgl=e,this._log=new h("cgl_mesh"),this._bufVertexAttrib=null,this._bufVerticesIndizes=this._cgl.gl.createBuffer(),this._indexType=this._cgl.gl.UNSIGNED_SHORT,this._attributes=[],this._attribLocs={},this._geom=null,this._lastShader=null,this._numInstances=0,this._glPrimitive=n,this._preWireframeGeom=null,this.addVertexNumbers=!1,this.feedBackAttributes=[],this.setGeom(t),this._feedBacks=[],this._feedBacksChanged=!1,this._transformFeedBackLoc=-1,this._lastAttrUpdate=0,this._name="unknown",this._cgl.profileData.addHeavyEvent("mesh constructed",this._name),this._queryExt=null,Object.defineProperty(this,"numInstances",{get(){return this._numInstances},set(e){this.setNumInstances(e)}})};v.prototype.updateVertices=function(e){this.setAttribute(p.SHADERVAR_VERTEX_POSITION,e.vertices,3),this._numVerts=e.vertices.length/3},v.prototype.setAttributePointer=function(t,n,i,a){for(let e=0;e<this._attributes.length;e++)this._attributes[e].name==t&&(this._attributes[e].pointer||(this._attributes[e].pointer=[]),this._attributes[e].pointer.push({loc:-1,name:n,stride:i,offset:a,instanced:t==p.SHADERVAR_INSTANCE_MMATRIX}))},v.prototype.getAttribute=function(t){for(let e=0;e<this._attributes.length;e++)if(this._attributes[e].name==t)return this._attributes[e]},v.prototype.setAttributeRange=function(e,t,n,i){e&&(n||i)&&(e.name||(console.log(e),this._log.stack("no attrname?!")),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,e.buffer),this._cgl.profileData.profileMeshAttributes+=i-n||0,this._cgl.profileData.profileSingleMeshAttribute[this._name]=this._cgl.profileData.profileSingleMeshAttribute[this._name]||0,this._cgl.profileData.profileSingleMeshAttribute[this._name]+=i-n||0,e.numItems<t.length/e.itemSize&&this._resizeAttr(t,e),i>=t.length-1&&this._log.log(this._cgl.canvas.id+" "+e.name+" buffersubdata out of bounds ?",t.length,i,n,e),1==this._cgl.glVersion?this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER,0,t):this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER,4*n,t,n,i-n))},v.prototype._resizeAttr=function(e,t){t.buffer&&this._cgl.gl.deleteBuffer(t.buffer),t.buffer=this._cgl.gl.createBuffer(),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,t.buffer),this._bufferArray(e,t),t.numItems=e.length/t.itemSize},v.prototype._bufferArray=function(e,t){let n=null;e&&(this._cgl.debugOneFrame&&console.log("_bufferArray",e.length,t.name),e instanceof Float32Array?n=e:t&&n&&n.length==e.length?n.set(e):(n=new Float32Array(e),this._cgl.debugOneFrame&&console.log("_bufferArray create new float32array",e.length,t.name),this._cgl.profileData.profileNonTypedAttrib++,this._cgl.profileData.profileNonTypedAttribNames="("+this._name+":"+t.name+")"),t.arrayLength=n.length,this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,n,this._cgl.gl.DYNAMIC_DRAW))},v.prototype.addAttribute=v.prototype.updateAttribute=v.prototype.setAttribute=function(e,t,n,i){if(!t)throw this._log.error("mesh addAttribute - no array given! "+e),new Error;let a=null,r=!1,s=0;const o=t.length/n;for(this._cgl.profileData.profileMeshAttributes+=o||0,"function"==typeof i&&(a=i),"object"==typeof i&&(i.cb&&(a=i.cb),i.instanced&&(r=i.instanced)),e==p.SHADERVAR_INSTANCE_MMATRIX&&(r=!0),s=0;s<this._attributes.length;s++){const n=this._attributes[s];if(n.name==e)return n.numItems===o||this._resizeAttr(t,n),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,n.buffer),this._bufferArray(t,n),n}const l=this._cgl.gl.createBuffer();this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,l);let u=this._cgl.gl.FLOAT;i&&i.type&&(u=i.type);const h={buffer:l,name:e,cb:a,itemSize:n,numItems:o,startItem:0,instanced:r,type:u};return this._bufferArray(t,h),e==p.SHADERVAR_VERTEX_POSITION&&(this._bufVertexAttrib=h),this._attributes.push(h),this._attribLocs={},h},v.prototype.getAttributes=function(){return this._attributes},v.prototype.updateTexCoords=function(t){if(t.texCoords&&t.texCoords.length>0)this.setAttribute(p.SHADERVAR_VERTEX_TEXCOORD,t.texCoords,2);else{const e=new Float32Array(Math.round(t.vertices.length/3*2));this.setAttribute(p.SHADERVAR_VERTEX_TEXCOORD,e,2)}},v.prototype.updateNormals=function(t){if(t.vertexNormals&&t.vertexNormals.length>0)this.setAttribute("attrVertNormal",t.vertexNormals,3);else{const e=new Float32Array(Math.round(t.vertices.length));this.setAttribute("attrVertNormal",e,3)}},v.prototype._setVertexNumbers=function(e){if(!this._verticesNumbers||this._verticesNumbers.length!=this._numVerts||e){if(e)this._verticesNumbers=e;else{this._verticesNumbers=new Float32Array(this._numVerts);for(let e=0;e<this._numVerts;e++)this._verticesNumbers[e]=e}this.setAttribute(p.SHADERVAR_VERTEX_NUMBER,this._verticesNumbers,1,(e,t,n)=>{n.uniformNumVertices||(n.uniformNumVertices=new d(n,"f","numVertices",this._numVerts)),n.uniformNumVertices.setValue(this._numVerts)})}},v.prototype.setVertexIndices=function(t){if(this._bufVerticesIndizes)if(t.length>0){for(let e=0;e<t.length;e++)if(t[e]>=this._numVerts)return void this._log.warn("invalid index in "+this._name);this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this._bufVerticesIndizes),t instanceof Float32Array&&this._log.warn("vertIndices float32Array: "+this._name),t instanceof Uint32Array?(this.vertIndicesTyped=t,this._indexType=this._cgl.gl.UNSIGNED_INT):t instanceof Uint16Array?this.vertIndicesTyped=t:this.vertIndicesTyped=new Uint16Array(t),this._cgl.gl.bufferData(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this.vertIndicesTyped,this._cgl.gl.DYNAMIC_DRAW),this._bufVerticesIndizes.itemSize=1,this._bufVerticesIndizes.numItems=t.length}else this._bufVerticesIndizes.numItems=0;else this._log.warn("no bufVerticesIndizes: "+this._name)},v.prototype.setGeom=function(e,t){this._geom=e,null!=e.glPrimitive&&(this._glPrimitive=e.glPrimitive),this._geom&&this._geom.name&&(this._name="mesh "+this._geom.name),_.lastMesh=null,this._cgl.profileData.profileMeshSetGeom++,this._disposeAttributes(),this.updateVertices(this._geom),this.setVertexIndices(this._geom.verticesIndices),this.updateTexCoords(this._geom),this.updateNormals(this._geom),this._geom.hasOwnProperty("tangents")&&this._geom.tangents&&this._geom.tangents.length>0&&this.setAttribute("attrTangent",this._geom.tangents,3),this._geom.hasOwnProperty("biTangents")&&this._geom.biTangents&&this._geom.biTangents.length>0&&this.setAttribute("attrBiTangent",this._geom.biTangents,3),this._geom.vertexColors.length>0&&(this._geom.vertexColors.flat&&this._geom.vertexColors.flat(100),this.setAttribute("attrVertColor",this._geom.vertexColors,4)),this.addVertexNumbers&&this._setVertexNumbers();const n=this._geom.getAttributes();for(const e in n)this.setAttribute(e,n[e].data,n[e].itemSize);t&&(this._geom=null)},v.prototype._preBind=function(t){for(let e=0;e<this._attributes.length;e++)this._attributes[e].cb&&this._attributes[e].cb(this._attributes[e],this._geom,t)},v.prototype._checkAttrLengths=function(){for(let e=0;e<this._attributes.length;e++)if(this._attributes[e].arrayLength/this._attributes[e].itemSize<this._attributes[0].arrayLength/this._attributes[0].itemSize){let e="unknown";this._geom&&(e=this._geom.name)}},v.prototype._bind=function(i){if(!i.isValid())return;let t=[];if(this._attribLocs[i.id]?t=this._attribLocs[i.id]:this._attribLocs[i.id]=t,this._lastShader=i,i.lastCompile>this._lastAttrUpdate||t.length!=this._attributes.length){this._lastAttrUpdate=i.lastCompile;for(let e=0;e<this._attributes.length;e++)t[e]=-1}for(let e=0;e<this._attributes.length;e++){const n=this._attributes[e];if(-1==t[e]&&n._attrLocationLastShaderTime!=i.lastCompile&&(n._attrLocationLastShaderTime=i.lastCompile,t[e]=this._cgl.glGetAttribLocation(i.getProgram(),n.name),this._cgl.profileData.profileAttrLoc++),-1!=t[e])if(this._cgl.gl.enableVertexAttribArray(t[e]),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,n.buffer),n.instanced)if(n.itemSize<=4)n.itemSize&&0!=n.itemSize||this._log.warn("instanced attrib itemsize error",this._geom.name,n),this._cgl.gl.vertexAttribPointer(t[e],n.itemSize,n.type,!1,4*n.itemSize,0),this._cgl.gl.vertexAttribDivisor(t[e],1);else if(16==n.itemSize){const i=64;this._cgl.gl.vertexAttribPointer(t[e],4,n.type,!1,i,0),this._cgl.gl.enableVertexAttribArray(t[e]+1),this._cgl.gl.vertexAttribPointer(t[e]+1,4,n.type,!1,i,16),this._cgl.gl.enableVertexAttribArray(t[e]+2),this._cgl.gl.vertexAttribPointer(t[e]+2,4,n.type,!1,i,32),this._cgl.gl.enableVertexAttribArray(t[e]+3),this._cgl.gl.vertexAttribPointer(t[e]+3,4,n.type,!1,i,48),this._cgl.gl.vertexAttribDivisor(t[e],1),this._cgl.gl.vertexAttribDivisor(t[e]+1,1),this._cgl.gl.vertexAttribDivisor(t[e]+2,1),this._cgl.gl.vertexAttribDivisor(t[e]+3,1)}else this._log.warn("unknown instance attrib size",n.name);else{if(n.itemSize&&0!=n.itemSize||this._log.warn("attrib itemsize error",this._name,n),this._cgl.gl.vertexAttribPointer(t[e],n.itemSize,n.type,!1,4*n.itemSize,0),n.pointer)for(let t=0;t<n.pointer.length;t++){const e=n.pointer[t];-1==e.loc&&(e.loc=this._cgl.glGetAttribLocation(i.getProgram(),e.name)),this._cgl.profileData.profileAttrLoc++,this._cgl.gl.enableVertexAttribArray(e.loc),this._cgl.gl.vertexAttribPointer(e.loc,n.itemSize,n.type,!1,e.stride,e.offset)}this.bindFeedback(n)}}0!==this._bufVerticesIndizes.numItems&&this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this._bufVerticesIndizes)},v.prototype.unBind=function(){const e=this._lastShader;if(this._lastShader=null,!e)return;let t=[];this._attribLocs[e.id]?t=this._attribLocs[e.id]:this._attribLocs[e.id]=t,_.lastMesh=null;for(let e=0;e<this._attributes.length;e++)this._attributes[e].instanced&&(this._attributes[e].itemSize<=4?(-1!=t[e]&&this._cgl.gl.vertexAttribDivisor(t[e],0),t[e]>=0&&this._cgl.gl.disableVertexAttribArray(t[e])):(this._cgl.gl.vertexAttribDivisor(t[e],0),this._cgl.gl.vertexAttribDivisor(t[e]+1,0),this._cgl.gl.vertexAttribDivisor(t[e]+2,0),this._cgl.gl.vertexAttribDivisor(t[e]+3,0),this._cgl.gl.disableVertexAttribArray(t[e]+1),this._cgl.gl.disableVertexAttribArray(t[e]+2),this._cgl.gl.disableVertexAttribArray(t[e]+3))),-1!=t[e]&&this._cgl.gl.disableVertexAttribArray(t[e])},v.prototype.meshChanged=function(){return this._cgl.lastMesh&&this._cgl.lastMesh!=this},v.prototype.printDebug=function(e){console.log("--attributes");for(let e=0;e<this._attributes.length;e++)console.log("attribute "+e+" "+this._attributes[e].name)},v.prototype.setNumVertices=function(e){this._bufVertexAttrib.numItems=e},v.prototype.getNumVertices=function(){return this._bufVertexAttrib.numItems},v.prototype.render=function(n){if(!n||!n.isValid())return;if(this._checkAttrLengths(),this._geom&&(!this._preWireframeGeom||n.wireframe||this._geom.isIndexed()||(this.setGeom(this._preWireframeGeom),this._preWireframeGeom=null),n.wireframe)){let e=!1;this._geom.isIndexed()&&(this._preWireframeGeom||(this._preWireframeGeom=this._geom,this._geom=this._geom.copy()),this._geom.unIndex(),e=!0),this._geom.getAttribute("attrBarycentric")||(this._preWireframeGeom||(this._preWireframeGeom=this._geom,this._geom=this._geom.copy()),e=!0,this._geom.calcBarycentric()),e&&this.setGeom(this._geom)}let e=!1;_.lastMesh!=this&&(_.lastMesh&&_.lastMesh.unBind(),e=!0),e&&this._preBind(n),n.bind(),n.bindTextures&&n.bindTextures(),this._bind(n),this.addVertexNumbers&&this._setVertexNumbers(),_.lastMesh=this;let t=this._cgl.gl.TRIANGLES;void 0!==this._glPrimitive&&(t=this._glPrimitive),null!==n.glPrimitive&&(t=n.glPrimitive);let i=1,a=this._cgl.profileData.doProfileGlQuery,r=!1;if(a){let e=this._name+" "+n.getName()+" #"+n.id;this._numInstances&&(e+=" instanced "+this._numInstances+"x");let t=this._cgl.profileData.glQueryData[e];if(t||(t={id:e,num:0},this._cgl.profileData.glQueryData[e]=t),this._queryExt||!1===this._queryExt||(this._queryExt=this._cgl.gl.getExtension("EXT_disjoint_timer_query_webgl2")||!1),this._queryExt){if(t._drawQuery){if(this._cgl.gl.getQueryParameter(t._drawQuery,this._cgl.gl.QUERY_RESULT_AVAILABLE)){const n=this._cgl.gl.getQueryParameter(t._drawQuery,this._cgl.gl.QUERY_RESULT)/1e6;t._times+=n,t._numcount++,t.when=performance.now(),t._drawQuery=null,t.queryStarted=!1}}t.queryStarted||(t._drawQuery=this._cgl.gl.createQuery(),this._cgl.gl.beginQuery(this._queryExt.TIME_ELAPSED_EXT,t._drawQuery),r=t.queryStarted=!0)}}if(this.hasFeedbacks()?this.drawFeedbacks(n,t):0===this._bufVerticesIndizes.numItems?(t==this._cgl.gl.TRIANGLES&&(i=3),0===this._numInstances?this._cgl.gl.drawArrays(t,this._bufVertexAttrib.startItem,this._bufVertexAttrib.numItems-this._bufVertexAttrib.startItem):this._cgl.gl.drawArraysInstanced(t,this._bufVertexAttrib.startItem,this._bufVertexAttrib.numItems,this._numInstances)):0===this._numInstances?this._cgl.gl.drawElements(t,this._bufVerticesIndizes.numItems,this._indexType,0):this._cgl.gl.drawElementsInstanced(t,this._bufVerticesIndizes.numItems,this._indexType,0,this._numInstances),this._cgl.debugOneFrame&&this._cgl.gl.getError()!=this._cgl.gl.NO_ERROR){this._log.error("mesh draw gl error"),this._log.error("mesh",this),this._log.error("shader",n);for(let e=0;e<this._cgl.gl.getProgramParameter(n.getProgram(),this._cgl.gl.ACTIVE_ATTRIBUTES);e++){const t=this._cgl.gl.getActiveAttrib(n.getProgram(),e).name;this._log.error("attrib ",t)}}this._cgl.profileData.profileMeshNumElements+=this._bufVertexAttrib.numItems/i*(this._numInstances||1),this._cgl.profileData.profileMeshDraw++,a&&r&&this._cgl.gl.endQuery(this._queryExt.TIME_ELAPSED_EXT),this.unBind()},v.prototype.setNumInstances=function(n){if(n=Math.max(0,n),this._numInstances!=n){this._numInstances=n;const t=new Float32Array(n);for(let e=0;e<n;e++)t[e]=e;this.setAttribute("instanceIndex",t,1,{instanced:!0})}},v.prototype._disposeAttributes=function(){if(this._attributes){for(let e=0;e<this._attributes.length;e++)this._attributes[e].buffer&&(this._cgl.gl.deleteBuffer(this._attributes[e].buffer),this._attributes[e].buffer=null);this._attributes.length=0}},v.prototype.dispose=function(){this._bufVertexAttrib&&this._bufVertexAttrib.buffer&&this._cgl.gl.deleteBuffer(this._bufVertexAttrib.buffer),this._bufVerticesIndizes&&this._cgl.gl.deleteBuffer(this._bufVerticesIndizes),this._bufVerticesIndizes=null,this._disposeAttributes()},function(e){e.prototype.hasFeedbacks=function(){return this._feedBacks.length>0},e.prototype.removeFeedbacks=function(e){this._feedbacks&&(this._feedbacks.length=0,this._feedBacksChanged=!0)},e.prototype.setAttributeFeedback=function(){},e.prototype.setFeedback=function(e,t,n){let i={nameOut:t},a=!1;this.unBindFeedbacks();for(let e=0;e<this._feedBacks.length;e++)this._feedBacks[e].nameOut==t&&(i=this._feedBacks[e],a=!0);return a||(this._feedBacksChanged=!0),i.initialArr=n,i.attrib=e,i.outBuffer&&this._cgl.gl.deleteBuffer(i.outBuffer),i.outBuffer=this._cgl.gl.createBuffer(),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,i.outBuffer),this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,i.initialArr,this._cgl.gl.STATIC_DRAW),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,i.attrib.buffer),this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,i.initialArr,this._cgl.gl.STATIC_DRAW),a||this._feedBacks.push(i),i},e.prototype.bindFeedback=function(n){if(!this._feedBacks||0===this._feedBacks.length)return;-1==this._transformFeedBackLoc&&(this._transformFeedBackLoc=this._cgl.gl.createTransformFeedback()),this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,this._transformFeedBackLoc);let i=!1;for(let t=0;t<this._feedBacks.length;t++){const e=this._feedBacks[t];e.attrib==n&&(i=!0,this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER,t,e.outBuffer))}},e.prototype.drawFeedbacks=function(e,t){let n=0;if(this._feedBacksChanged){const t=[];for(this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,this._transformFeedBackLoc),n=0;n<this._feedBacks.length;n++)t.push(this._feedBacks[n].nameOut);return e.setFeedbackNames(t),console.log("feedbacknames",t),e.compile(),this._feedBacksChanged=!1,this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,null),void console.log("changed finished")}this._cgl.gl.beginTransformFeedback(this.glPrimitive),this._cgl.gl.drawArrays(t,0,this._feedBacks[0].attrib.numItems),this._cgl.gl.endTransformFeedback(),this.unBindFeedbacks(),this.feedBacksSwapBuffers()},e.prototype.unBindFeedbacks=function(){for(let e=0;e<this._feedBacks.length;e++)this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER,e,null);this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,null)},e.prototype.feedBacksSwapBuffers=function(){for(let t=0;t<this._feedBacks.length;t++){const e=this._feedBacks[t].attrib.buffer;this._feedBacks[t].attrib.buffer=this._feedBacks[t].outBuffer,this._feedBacks[t].outBuffer=e}}}(v);const b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",x=new Uint8Array(256);for(let e=0;e<b.length;e++)x[b.charCodeAt(e)]=e;const O=x,A=function(e){let t,n,i,a,r,s=.75*e.length,o=e.length,l=0;"="===e[e.length-1]&&(s--,"="===e[e.length-2]&&s--);let u=new ArrayBuffer(s),h=new Uint8Array(u);for(t=0;t<o;t+=4)n=O[e.charCodeAt(t)],i=O[e.charCodeAt(t+1)],a=O[e.charCodeAt(t+2)],r=O[e.charCodeAt(t+3)],h[l++]=n<<2|i>>4,h[l++]=(15&i)<<4|a>>2,h[l++]=(3&a)<<6|63&r;return u};class S{constructor(e){this._init(),this._first=!0,this._wireMesh=null,e&&this.apply(e)}_init(){this._max=[-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE],this._min=[Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE],this._center=[0,0,0],this._size=[0,0,0],this._maxAxis=0,this._first=!0}get maxAxis(){return this._maxAxis||1}get size(){return this._size}get center(){return this._center}get x(){return this._center[0]}get y(){return this._center[1]}get z(){return this._center[2]}get minX(){return this._min[0]}get minY(){return this._min[1]}get minZ(){return this._min[2]}get maxX(){return this._max[0]}get maxY(){return this._max[1]}get maxZ(){return this._max[2]}apply(t,e){if(t){if(t instanceof S){const e=t;this.applyPos(e.maxX,e.maxY,e.maxZ),this.applyPos(e.minX,e.minY,e.minZ)}else for(let e=0;e<t.vertices.length;e+=3)this.applyPos(t.vertices[e],t.vertices[e+1],t.vertices[e+2]);this.calcCenterSize()}}copy(){return new S(this)}get changed(){return!(this._max[0]==-Number.MAX_VALUE&&this._max[1]==-Number.MAX_VALUE&&this._max[2]==-Number.MAX_VALUE)}applyPos(e,t,n){if(e!=Number.MAX_VALUE&&e!=-Number.MAX_VALUE&&t!=Number.MAX_VALUE&&t!=-Number.MAX_VALUE&&n!=Number.MAX_VALUE&&n!=-Number.MAX_VALUE&&CABLES.UTILS.isNumeric(e)&&CABLES.UTILS.isNumeric(t)&&CABLES.UTILS.isNumeric(n)){if(this._first)return this._max[0]=e,this._max[1]=t,this._max[2]=n,this._min[0]=e,this._min[1]=t,this._min[2]=n,void(this._first=!1);this._max[0]=Math.max(this._max[0],e),this._max[1]=Math.max(this._max[1],t),this._max[2]=Math.max(this._max[2],n),this._min[0]=Math.min(this._min[0],e),this._min[1]=Math.min(this._min[1],t),this._min[2]=Math.min(this._min[2],n)}}calcCenterSize(){this._first||(this._size[0]=this._max[0]-this._min[0],this._size[1]=this._max[1]-this._min[1],this._size[2]=this._max[2]-this._min[2],this._center[0]=(this._min[0]+this._max[0])/2,this._center[1]=(this._min[1]+this._max[1])/2,this._center[2]=(this._min[2]+this._max[2])/2,this._maxAxis=Math.max(this._size[2],Math.max(this._size[0],this._size[1])))}mulMat4(e){this._first&&(this._max[0]=0,this._max[1]=0,this._max[2]=0,this._min[0]=0,this._min[1]=0,this._min[2]=0,this._first=!1),vec3.transformMat4(this._max,this._max,e),vec3.transformMat4(this._min,this._min,e),this.calcCenterSize()}render(e,t){this._wireMesh||(this._wireMesh=new CGL.WireCube(e)),e.pushModelMatrix(),mat4.translate(e.mMatrix,e.mMatrix,this._center),this._wireMesh.render(e,this._size[0]/2,this._size[1]/2,this._size[2]/2),e.popModelMatrix()}}const C=function(e){this.name=e||"unknown",this._log=new h("cgl_geometry"),this.faceVertCount=3,this._vertices=[],this.verticesIndices=[],this.texCoords=new Float32Array,this.texCoordsIndices=[],this.vertexNormals=[],this.tangents=[],this.biTangents=[],this.morphTargets=[],this.vertexColors=[],this._attributes={},this.glPrimitive=null,Object.defineProperty(this,"vertices",{get(){return this._vertices},set(e){this.setVertices(e)}})};C.prototype.clear=function(){this.vertices=new Float32Array([]),this.verticesIndices.length=0,this.texCoords=new Float32Array([]),this.texCoordsIndices.length=0,this.vertexNormals=new Float32Array([])},C.prototype.getAttributes=function(){return this._attributes},C.prototype.getAttribute=function(t){for(const e in this._attributes)if(this._attributes[e].name==t)return this._attributes[e];return null},C.prototype.setAttribute=function(e,t,n){let i="";1==n?i="float":2==n?i="vec2":3==n?i="vec3":4==n&&(i="vec4");const a={name:e,data:t,itemSize:n,type:i};this._attributes[e]=a},C.prototype.setVertices=function(e){e instanceof Float32Array?this._vertices=e:this._vertices=new Float32Array(e)},C.prototype.setTexCoords=function(e){e instanceof Float32Array?this.texCoords=e:this.texCoords=new Float32Array(e)},C.prototype.calcNormals=function(e){e||this.unIndex(),this.calculateNormals({})},C.prototype.flipNormals=function(t,n,i){let a=vec3.create();null==t&&(t=1),null==n&&(n=1),null==i&&(i=1);for(let e=0;e<this.vertexNormals.length;e+=3)vec3.set(a,this.vertexNormals[e+0],this.vertexNormals[e+1],this.vertexNormals[e+2]),a[0]*=-t,a[1]*=-n,a[2]*=-i,vec3.normalize(a,a),this.vertexNormals[e+0]=a[0],this.vertexNormals[e+1]=a[1],this.vertexNormals[e+2]=a[2]},C.prototype.getNumTriangles=function(){return this.verticesIndices&&this.verticesIndices.length?this.verticesIndices.length/3:this.vertices.length/3},C.prototype.flipVertDir=function(){const t=[];t.length=this.verticesIndices.length;for(let e=0;e<this.verticesIndices.length;e+=3)t[e]=this.verticesIndices[e+2],t[e+1]=this.verticesIndices[e+1],t[e+2]=this.verticesIndices[e];this.verticesIndices=t},C.prototype.setPointVertices=function(t){if(t.length%3==0){t instanceof Float32Array?this.vertices=t:this.vertices=new Float32Array(t),this.texCoords instanceof Float32Array||(this.texCoords=new Float32Array(t.length/3*2)),this.verticesIndices.length=t.length/3;for(let e=0;e<t.length/3;e++)this.verticesIndices[e]=e,this.texCoords[2*e]=0,this.texCoords[2*e+1]=0}else this._log.error("SetPointVertices: Array must be multiple of three.")},C.prototype.merge=function(t){if(!t)return;const n=this.verticesIndices.length,i=this.vertices.length/3;this.verticesIndices.length=this.verticesIndices.length+t.verticesIndices.length;for(let e=0;e<t.verticesIndices.length;e++)this.verticesIndices[n+e]=t.verticesIndices[e]+i;this.vertices=l.float32Concat(this.vertices,t.vertices),this.texCoords=l.float32Concat(this.texCoords,t.texCoords),this.vertexNormals=l.float32Concat(this.vertexNormals,t.vertexNormals),this.tangents=l.float32Concat(this.tangents,t.tangents),this.biTangents=l.float32Concat(this.biTangents,t.biTangents)},C.prototype.copy=function(){let e=0;const t=new C(this.name+" copy");if(t.faceVertCount=this.faceVertCount,t.glPrimitive=this.glPrimitive,t.setVertices(this._vertices.slice(0)),this.verticesIndices)for(t.verticesIndices.length=this.verticesIndices.length,e=0;e<this.verticesIndices.length;e++)t.verticesIndices[e]=this.verticesIndices[e];if(this.texCoords)for(t.texCoords=new Float32Array(this.texCoords.length),e=0;e<this.texCoords.length;e++)t.texCoords[e]=this.texCoords[e];if(this.texCoordsIndices)for(t.texCoordsIndices.length=this.texCoordsIndices.length,e=0;e<this.texCoordsIndices.length;e++)t.texCoordsIndices[e]=this.texCoordsIndices[e];if(this.vertexNormals)for(t.vertexNormals=new Float32Array(this.vertexNormals.length),e=0;e<this.vertexNormals.length;e++)t.vertexNormals[e]=this.vertexNormals[e];if(this.tangents)for(t.tangents=[],t.tangents.length=this.tangents.length,e=0;e<this.tangents.length;e++)t.tangents[e]=this.tangents[e];if(this.biTangents)for(t.biTangents=[],t.biTangents.length=this.biTangents.length,e=0;e<this.biTangents.length;e++)t.biTangents[e]=this.biTangents[e];for(t.morphTargets.length=this.morphTargets.length,e=0;e<this.morphTargets.length;e++)t.morphTargets[e]=this.morphTargets[e];for(t.vertexColors.length=this.vertexColors.length,e=0;e<this.vertexColors.length;e++)t.vertexColors[e]=this.vertexColors[e];return t},C.prototype.calculateNormals=function(t){const n=vec3.create(),i=vec3.create(),a=vec3.create();function r(e){return vec3.subtract(n,e[0],e[1]),vec3.subtract(i,e[0],e[2]),vec3.cross(a,n,i),vec3.normalize(a,a),t&&t.forceZUp&&a[2]<0&&(a[0]*=-1,a[1]*=-1,a[2]*=-1),a}this.getVertexVec=function(e){const t=[0,0,0];return t[0]=this.vertices[3*e+0],t[1]=this.vertices[3*e+1],t[2]=this.vertices[3*e+2],t},this.vertexNormals instanceof Float32Array&&this.vertexNormals.length==this.vertices.length||(this.vertexNormals=new Float32Array(this.vertices.length));for(let e=0;e<this.vertices.length;e++)this.vertexNormals[e]=0;if(this.isIndexed()){const t=[];t.length=Math.floor(this.verticesIndices.length/3);for(let e=0;e<this.verticesIndices.length;e+=3){const i=[this.getVertexVec(this.verticesIndices[e+0]),this.getVertexVec(this.verticesIndices[e+1]),this.getVertexVec(this.verticesIndices[e+2])];t[e/3]=r(i),this.vertexNormals[3*this.verticesIndices[e+0]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+0]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+0]+2]+=t[e/3][2],this.vertexNormals[3*this.verticesIndices[e+1]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+1]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+1]+2]+=t[e/3][2],this.vertexNormals[3*this.verticesIndices[e+2]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+2]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+2]+2]+=t[e/3][2]}for(let t=0;t<this.verticesIndices.length;t+=3)for(let e=0;e<3;e++){const i=[this.vertexNormals[3*this.verticesIndices[t+e]+0],this.vertexNormals[3*this.verticesIndices[t+e]+1],this.vertexNormals[3*this.verticesIndices[t+e]+2]];vec3.normalize(i,i),this.vertexNormals[3*this.verticesIndices[t+e]+0]=i[0],this.vertexNormals[3*this.verticesIndices[t+e]+1]=i[1],this.vertexNormals[3*this.verticesIndices[t+e]+2]=i[2]}}else{const t=[];for(let e=0;e<this.vertices.length;e+=9){const i=r([[this.vertices[e+0],this.vertices[e+1],this.vertices[e+2]],[this.vertices[e+3],this.vertices[e+4],this.vertices[e+5]],[this.vertices[e+6],this.vertices[e+7],this.vertices[e+8]]]);t.push(i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2])}this.vertexNormals=t}},C.prototype.calcTangentsBitangents=function(){if(!this.vertices.length)return void this._log.error("Cannot calculate tangents/bitangents without vertices.");if(!this.vertexNormals.length)return void this._log.error("Cannot calculate tangents/bitangents without normals.");if(!this.texCoords.length){const o=this.vertices.length/3*2;this.texCoords=new Float32Array(o);for(let e=0;e<o;e+=1)this.texCoords[e]=0}if(!this.verticesIndices||!this.verticesIndices.length)return void this._log.error("Cannot calculate tangents/bitangents without vertex indices.");if(this.verticesIndices.length%3!=0)return void this._log.error("Vertex indices mismatch!");const o=this.verticesIndices.length/3,l=this.vertices.length/3;this.tangents=new Float32Array(this.vertexNormals.length),this.biTangents=new Float32Array(this.vertexNormals.length);const u=[];u.length=2*l;const h=vec3.create(),c=vec3.create(),f=vec3.create(),m=vec2.create(),d=vec2.create(),g=vec2.create(),p=vec3.create(),_=vec3.create();for(let s=0;s<o;s+=1){const o=this.verticesIndices[3*s],v=this.verticesIndices[3*s+1],b=this.verticesIndices[3*s+2];vec3.set(h,this.vertices[3*o],this.vertices[3*o+1],this.vertices[3*o+2]),vec3.set(c,this.vertices[3*v],this.vertices[3*v+1],this.vertices[3*v+2]),vec3.set(f,this.vertices[3*b],this.vertices[3*b+1],this.vertices[3*b+2]),vec2.set(m,this.texCoords[2*o],this.texCoords[2*o+1]),vec2.set(d,this.texCoords[2*v],this.texCoords[2*v+1]),vec2.set(g,this.texCoords[2*b],this.texCoords[2*b+1]);const x=c[0]-h[0],O=f[0]-h[0],A=c[1]-h[1],S=f[1]-h[1],C=c[2]-h[2],e=f[2]-h[2],t=d[0]-m[0],n=g[0]-m[0],i=d[1]-m[1],a=g[1]-m[1],r=1/(t*a-n*i);vec3.set(p,(a*x-i*O)*r,(a*A-i*S)*r,(a*C-i*e)*r),vec3.set(_,(t*O-n*x)*r,(t*S-n*A)*r,(t*e-n*C)*r),u[o]=p,u[v]=p,u[b]=p,u[o+l]=_,u[v+l]=_,u[b+l]=_}const t=vec3.create(),v=vec3.create(),b=vec3.create(),x=vec3.create(),O=vec3.create(),A=vec3.create(),S=vec3.create(),C=vec3.create();for(let e=0;e<l;e+=1){if(!u[e])continue;vec3.set(t,this.vertexNormals[3*e],this.vertexNormals[3*e+1],this.vertexNormals[3*e+2]),vec3.set(v,u[e][0],u[e][1],u[e][2]);const h=vec3.dot(t,v);vec3.scale(O,t,h),vec3.subtract(A,v,O),vec3.normalize(C,A),vec3.cross(S,t,v);vec3.dot(S,u[e+l]);const c=1;vec3.scale(b,C,1/c),vec3.cross(x,t,b),this.tangents[3*e+0]=b[0],this.tangents[3*e+1]=b[1],this.tangents[3*e+2]=b[2],this.biTangents[3*e+0]=x[0],this.biTangents[3*e+1]=x[1],this.biTangents[3*e+2]=x[2]}},C.prototype.isIndexed=function(){return 0!=this.verticesIndices.length},C.prototype.unIndex=function(e,t){const n=[],i=[],a=[],r=[],s=[],o=[];let l=0,u=0;for(u=0;u<this.verticesIndices.length;u+=3)n.push(this.vertices[3*this.verticesIndices[u+0]+0],this.vertices[3*this.verticesIndices[u+0]+1],this.vertices[3*this.verticesIndices[u+0]+2]),r.push(this.vertexNormals[3*this.verticesIndices[u+0]+0],this.vertexNormals[3*this.verticesIndices[u+0]+1],this.vertexNormals[3*this.verticesIndices[u+0]+2]),this.tangents.length>0&&s.push(this.tangents[3*this.verticesIndices[u+0]+0],this.tangents[3*this.verticesIndices[u+0]+1],this.tangents[3*this.verticesIndices[u+0]+2]),this.biTangents.length>0&&o.push(this.biTangents[3*this.verticesIndices[u+0]+0],this.biTangents[3*this.verticesIndices[u+0]+1],this.biTangents[3*this.verticesIndices[u+0]+2]),this.texCoords?a.push(this.texCoords[2*this.verticesIndices[u+0]+0],this.texCoords[2*this.verticesIndices[u+0]+1]):a.push(0,0),i.push(l),l++,n.push(this.vertices[3*this.verticesIndices[u+1]+0],this.vertices[3*this.verticesIndices[u+1]+1],this.vertices[3*this.verticesIndices[u+1]+2]),r.push(this.vertexNormals[3*this.verticesIndices[u+1]+0],this.vertexNormals[3*this.verticesIndices[u+1]+1],this.vertexNormals[3*this.verticesIndices[u+1]+2]),this.tangents.length>0&&s.push(this.tangents[3*this.verticesIndices[u+1]+0],this.tangents[3*this.verticesIndices[u+1]+1],this.tangents[3*this.verticesIndices[u+1]+2]),this.biTangents.length>0&&o.push(this.biTangents[3*this.verticesIndices[u+1]+0],this.biTangents[3*this.verticesIndices[u+1]+1],this.biTangents[3*this.verticesIndices[u+1]+2]),this.texCoords?a.push(this.texCoords[2*this.verticesIndices[u+1]+0],this.texCoords[2*this.verticesIndices[u+1]+1]):a.push(0,0),i.push(l),l++,n.push(this.vertices[3*this.verticesIndices[u+2]+0],this.vertices[3*this.verticesIndices[u+2]+1],this.vertices[3*this.verticesIndices[u+2]+2]),r.push(this.vertexNormals[3*this.verticesIndices[u+2]+0],this.vertexNormals[3*this.verticesIndices[u+2]+1],this.vertexNormals[3*this.verticesIndices[u+2]+2]),this.tangents.length>0&&s.push(this.tangents[3*this.verticesIndices[u+2]+0],this.tangents[3*this.verticesIndices[u+2]+1],this.tangents[3*this.verticesIndices[u+2]+2]),this.biTangents.length>0&&o.push(this.biTangents[3*this.verticesIndices[u+2]+0],this.biTangents[3*this.verticesIndices[u+2]+1],this.biTangents[3*this.verticesIndices[u+2]+2]),this.texCoords?a.push(this.texCoords[2*this.verticesIndices[u+2]+0],this.texCoords[2*this.verticesIndices[u+2]+1]):a.push(0,0),i.push(l),l++;this.vertices=n,this.texCoords=a,this.vertexNormals=r,s.length>0&&(this.tangents=s),o.length>0&&(this.biTangents=o),this.verticesIndices.length=0,e&&(this.verticesIndices=i),t||this.calculateNormals()},C.prototype.calcBarycentric=function(){let t=[];t.length=this.vertices.length;for(let e=0;e<this.vertices.length;e++)t[e]=0;let n=0;for(let e=0;e<this.vertices.length;e+=3)t[e+n]=1,n++,3==n&&(n=0);this.setAttribute("attrBarycentric",t,3)},C.prototype.getBounds=function(){return new S(this)},C.prototype.center=function(e,t,n){void 0===e&&(e=!0,t=!0,n=!0);let i=0;const a=this.getBounds(),r=[a.minX+(a.maxX-a.minX)/2,a.minY+(a.maxY-a.minY)/2,a.minZ+(a.maxZ-a.minZ)/2];for(i=0;i<this.vertices.length;i+=3)this.vertices[i+0]==this.vertices[i+0]&&(e&&(this.vertices[i+0]-=r[0]),t&&(this.vertices[i+1]-=r[1]),n&&(this.vertices[i+2]-=r[2]));return r},C.prototype.mapTexCoords2d=function(){const n=this.getBounds(),i=this.vertices.length/3;this.texCoords=new Float32Array(2*i);for(let t=0;t<i;t++){const i=this.vertices[3*t+0],e=this.vertices[3*t+1];this.texCoords[2*t+0]=i/(n.maxX-n.minX)+.5,this.texCoords[2*t+1]=1-e/(n.maxY-n.minY)+.5}},C.prototype.getInfo=function(){const e={};return this.verticesIndices?e.numFaces=this.verticesIndices.length/3:e.numFaces=0,this.vertices?e.numVerts=this.vertices.length/3:e.numVerts=0,this.vertexNormals?e.numNormals=this.vertexNormals.length/3:e.numNormals=0,this.texCoords?e.numTexCoords=this.texCoords.length/2:e.numTexCoords=0,this.tangents?e.numTangents=this.tangents.length/3:e.numTangents=0,this.biTangents?e.numBiTangents=this.biTangents.length/3:e.numBiTangents=0,this.biTangents?e.numBiTangents=this.biTangents.length/3:e.numBiTangents=0,this.vertexColors?e.numVertexColors=this.vertexColors.length/4:e.numVertexColors=0,this.getAttributes()?e.numAttribs=Object.keys(this.getAttributes()).length:e.numAttribs=0,e.isIndexed=this.isIndexed(),e},C.buildFromFaces=function(a,e,r){const s=[],o=[];for(let e=0;e<a.length;e+=3){const l=a[e+0],t=a[e+1],n=a[e+2],i=[-1,-1,-1];if(r)for(let e=0;e<s.length;e+=3)s[e+0]==l[0]&&s[e+1]==l[1]&&s[e+2]==l[2]&&(i[0]=e/3),s[e+0]==t[0]&&s[e+1]==t[1]&&s[e+2]==t[2]&&(i[1]=e/3),s[e+0]==n[0]&&s[e+1]==n[1]&&s[e+2]==n[2]&&(i[2]=e/3);-1==i[0]&&(s.push(l[0],l[1],l[2]),i[0]=(s.length-1)/3),-1==i[1]&&(s.push(t[0],t[1],t[2]),i[1]=(s.length-1)/3),-1==i[2]&&(s.push(n[0],n[1],n[2]),i[2]=(s.length-1)/3),o.push(parseInt(i[0],10)),o.push(parseInt(i[1],10)),o.push(parseInt(i[2],10))}const l=new C(e);return l.name=e,l.vertices=s,l.verticesIndices=o,l},C.json2geom=function(t){const n=new C("jsonMeshGeom");if(n.verticesIndices=[],n.vertices=t.vertices||[],n.vertexNormals=t.normals||[],n.vertexColors=t.colors||[],n.tangents=t.tangents||[],n.biTangents=t.bitangents||[],t.texturecoords&&n.setTexCoords(t.texturecoords[0]),t.vertices_b64&&(n.vertices=new Float32Array(A(t.vertices_b64))),t.normals_b64&&(n.vertexNormals=new Float32Array(A(t.normals_b64))),t.tangents_b64&&(n.tangents=new Float32Array(A(t.tangents_b64))),t.bitangents_b64&&(n.biTangents=new Float32Array(A(t.bitangents_b64))),t.texturecoords_b64&&n.setTexCoords(new Float32Array(A(t.texturecoords_b64[0]))),t.faces_b64)n.verticesIndices=new Uint32Array(A(t.faces_b64));else{n.verticesIndices.length=3*t.faces.length;for(let e=0;e<t.faces.length;e++)n.verticesIndices[3*e]=t.faces[e][0],n.verticesIndices[3*e+1]=t.faces[e][1],n.verticesIndices[3*e+2]=t.faces[e][2]}return n};const E={getSimpleRect:function(e,t){const n=new C(t);return n.vertices=[1,1,0,-1,1,0,1,-1,0,-1,-1,0],n.texCoords=[1,1,0,1,1,0,0,0],n.verticesIndices=[0,1,2,2,1,3],n.vertexNormals=[0,0,0,0,0,0,0,0,0,0,0,0],new v(e,n)}};CGL.CopyTexture=class{constructor(e,t,n){this.cgl=e,this._options=n,this.fb=null;const i=n.shader||"".endl()+"UNI sampler2D tex;".endl()+"IN vec2 texCoord;".endl()+"void main()".endl()+"{".endl()+"    vec4 col=texture(tex,texCoord);".endl()+"    outColor= col;".endl()+"}",a="".endl()+"IN vec3 vPosition;".endl()+"IN vec2 attrTexCoord;".endl()+"OUT vec2 texCoord;".endl()+"void main()".endl()+"{".endl()+"   texCoord=attrTexCoord;".endl()+"   gl_Position = vec4(vPosition,  1.0);".endl()+"}";this.bgShader=new CGL.Shader(e,"corelib copytexture "+t),this.bgShader.setSource(a,i);new CGL.Uniform(this.bgShader,"t","tex",0);this.mesh=E.getSimpleRect(this.cgl,"texEffectRect")}copy(e){if(!e)return CGL.Texture.getEmptyTexture(this.cgl);const i=this._options.width||e.width,a=this._options.height||e.height,r=this.cgl;if(this.fb)this.fb.getWidth()==i&&this.fb.getHeight()==a||this.fb.setSize(i,a);else{let e=CGL.Texture.FILTER_LINEAR,t=CGL.Texture.WRAP_CLAMP_TO_EDGE;this._options.hasOwnProperty("filter")&&(e=this._options.filter),this._options.hasOwnProperty("wrap")&&(t=this._options.wrap);const n={isFloatingPointTexture:this._options.isFloatingPointTexture,numRenderBuffers:this._options.numRenderBuffers||1,filter:e,wrap:t};1==r.glVersion?this.fb=new CGL.Framebuffer(r,i,a,n):this.fb=new CGL.Framebuffer2(r,i,a,n)}return r.frameStore.renderOffscreen=!0,this.fb.renderStart(r),r.setTexture(0,e.tex),r.pushShader(this.bgShader),this.mesh.render(this.bgShader),r.popShader(),this.fb.renderEnd(),r.frameStore.renderOffscreen=!1,this.fb.getTextureColor()}dispose(){this.fb&&this.fb.dispose(),this.bgShader&&this.bgShader.dispose(),this.mesh&&this.mesh.dispose()}}}]).Copytexture;this.CGL=this.CGL||{},this.CGL.COREMODULES=this.CGL.COREMODULES||{},this.CGL.COREMODULES.Shadermodifier=function(n){var i={};function a(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}return a.m=n,a.c=i,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)a.d(n,i,function(e){return t[e]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=0)}([function(e,t,n){"use strict";n.r(t);CGL.ShaderModifier=class{constructor(e,t,n){this._cgl=e,this._name=t,this._origShaders={},this._uniforms=[],this._structUniforms=[],this._definesToggled={},this._defines={},this._mods=[],this._textures=[],this._boundShader=null,this._changedDefines=!0,this._changedUniforms=!0,this._modulesChanged=!1,this.needsTexturePush=!1,this._lastShader=null,1==this._cgl.glVersion&&(this._cgl.gl.getExtension("OES_texture_float"),this._cgl.gl.getExtension("OES_texture_float_linear"),this._cgl.gl.getExtension("OES_texture_half_float"),this._cgl.gl.getExtension("OES_texture_half_float_linear"))}bind(){const n=this._cgl.getShader();if(!n)return;this._boundShader=this._origShaders[n.id];let i=!1;if(this._boundShader&&this._lastShader!=this._boundShader.shader&&(this._boundShader.shader.hasModule(this._mods[0].id)||(i=!0)),(i||!this._boundShader||n.lastCompile!=this._boundShader.lastCompile||this._modulesChanged||n._needsRecompile)&&(this._boundShader&&this._boundShader.shader.dispose(),n._needsRecompile&&n.compile(),this._boundShader=this._origShaders[n.id]={lastCompile:n.lastCompile,orig:n,shader:n.copy()},1==this._cgl.glVersion&&(this._boundShader.shader.enableExtension("GL_OES_standard_derivatives"),this._boundShader.shader.enableExtension("GL_OES_texture_float"),this._boundShader.shader.enableExtension("GL_OES_texture_float_linear"),this._boundShader.shader.enableExtension("GL_OES_texture_half_float"),this._boundShader.shader.enableExtension("GL_OES_texture_half_float_linear")),this._addModulesToShader(this._boundShader.shader),this._updateDefinesShader(this._boundShader.shader),this._updateUniformsShader(this._boundShader.shader)),this._boundShader.wireframe=n.wireframe,this._changedDefines&&this._updateDefines(),this._changedUniforms&&this._updateUniforms(),this._cgl.pushShader(this._boundShader.shader),this._boundShader.shader.copyUniformValues(this._boundShader.orig),this.needsTexturePush){for(let t=0;t<this._textures.length;t+=1){const i=this._textures[t][0],e=this._textures[t][1],a=this._textures[t][2];if(this._getUniform(i)){const n=this.getPrefixedName(i),r=this._boundShader.shader.getUniform(n);r&&this._boundShader.shader.pushTexture(r,e,a)}}this.needsTexturePush=!1,this._textures.length=0}this._modulesChanged=!1}unbind(){this._boundShader&&this._cgl.popShader(),this._boundShader=null}_addModulesToShader(t){let n;this._mods.length>1&&(n=this._mods[0]);for(let e=0;e<this._mods.length;e++)t.addModule(this._mods[e],n)}_removeModulesFromShader(t){for(const e in this._origShaders)this._origShaders[e].shader.removeModule(t)}addModule(e){this._mods.push(e),this._modulesChanged=!0}removeModule(t){const n=[];for(let e=0;e<this._mods.length;e++)this._mods[e].title==t&&(this._removeModulesFromShader(this._mods[e]),n.push(e));for(let e=n.length-1;e>=0;e-=1)this._mods.splice(n[e],1);this._modulesChanged=!0}_updateUniformsShader(a){for(let e=0;e<this._uniforms.length;e++){const t=this._uniforms[e],n=this.getPrefixedName(t.name);if(!a.hasUniform(n)&&!t.structName){let e=null;"both"===t.shaderType?(e=a.addUniformBoth(t.type,n,t.v1,t.v2,t.v3,t.v4),e.comment="mod: "+this._name):"frag"===t.shaderType?(e=a.addUniformFrag(t.type,n,t.v1,t.v2,t.v3,t.v4),e.comment="mod: "+this._name):"vert"===t.shaderType&&(e=a.addUniformVert(t.type,n,t.v1,t.v2,t.v3,t.v4),e.comment="mod: "+this._name)}}for(let i=0;i<this._structUniforms.length;i+=1){const e=this._structUniforms[i];let t=e.uniformName,n=e.structName;const r=e.members;t=this.getPrefixedName(e.uniformName),n=this.getPrefixedName(e.structName),"frag"===e.shaderType&&a.addUniformStructFrag(n,t,r),"vert"===e.shaderType&&a.addUniformStructVert(n,t,r),"both"===e.shaderType&&a.addUniformStructBoth(n,t,r)}}_updateUniforms(){for(const e in this._origShaders)this._updateUniformsShader(this._origShaders[e].shader);this._changedUniforms=!1}_setUniformValue(e,t,n){const i=e.getUniform(t);i&&i.setValue(n)}setUniformValue(e,t){if(!this._getUniform(e))return;const n=this.getPrefixedName(e);for(const e in this._origShaders)this._setUniformValue(this._origShaders[e].shader,n,t)}hasUniform(e){return this._getUniform(e)}_getUniform(t){for(let e=0;e<this._uniforms.length;e++){if(this._uniforms[e].name==t)return this._uniforms[e];if(this._uniforms[e].structName&&this._uniforms[e].propertyName==t)return this._uniforms[e]}return!1}_getStructUniform(t){for(let e=0;e<this._structUniforms.length;e+=1)if(this._structUniforms[e].uniformName===t)return this._structUniforms[e];return null}_isStructUniform(t){for(let e=0;e<this._uniforms.length;e++){if(this._uniforms[e].name==t)return!1;if(this._uniforms[e].structName&&this._uniforms[e].propertyName==t)return!0}return!1}addUniform(t,n,i,a,r,s,o,l,u,h){if(!this._getUniform(n)){let e="both";h&&(e=h),this._uniforms.push({type:t,name:n,v1:i,v2:a,v3:r,v4:s,structUniformName:o,structName:l,propertyName:u,shaderType:e}),this._changedUniforms=!0}}addUniformFrag(e,t,n,i,a,r){this.addUniform(e,t,n,i,a,r,null,null,null,"frag"),this._changedUniforms=!0}addUniformVert(e,t,n,i,a,r){this.addUniform(e,t,n,i,a,r,null,null,null,"vert"),this._changedUniforms=!0}addUniformBoth(e,t,n,i,a,r){this.addUniform(e,t,n,i,a,r,null,null,null,"both"),this._changedUniforms=!0}addUniformStruct(t,n,i,a){for(let e=0;e<i.length;e+=1){const r=i[e];"2i"!==r.type&&"i"!==r.type&&"3i"!==r.type||"both"!==a||console.error("Adding an integer struct member to both shaders can potentially error. Please use different structs for each shader. Error occured in struct:",t," with member:",r.name," of type:",r.type,"."),this._getUniform(n+"."+r.name)||this.addUniform(r.type,n+"."+r.name,r.v1,r.v2,r.v3,r.v4,n,t,r.name,a)}this._getStructUniform(n)||this._structUniforms.push({structName:t,uniformName:n,members:i,shaderType:a})}addUniformStructVert(e,t,n){this.addUniformStruct(e,t,n,"vert")}addUniformStructFrag(e,t,n){this.addUniformStruct(e,t,n,"frag")}addUniformStructBoth(e,t,n){this.addUniformStruct(e,t,n,"both")}pushTexture(e,t,n){if(!t)throw new Error("no texture given to texturestack");this._textures.push([e,t,n]),this.needsTexturePush=!0}_removeUniformFromShader(e,t){t.hasUniform(e)&&t.removeUniform(e)}removeUniform(n){if(this._getUniform(n)){for(let t=this._uniforms.length-1;t>=0;t-=1){const e=n;if(this._uniforms[t].name==n&&!this._uniforms[t].structName){for(const n in this._origShaders)this._removeUniformFromShader(this.getPrefixedName(e),this._origShaders[n].shader);this._uniforms.splice(t,1)}}this._changedUniforms=!0}}removeUniformStruct(n){if(this._getStructUniform(n)){for(let e=this._structUniforms.length-1;e>=0;e-=1){const t=this._structUniforms[e];if(t.uniformName===n){for(const n in this._origShaders)for(let e=0;e<t.members.length;e+=1){const i=t.members[e];this._removeUniformFromShader(this.getPrefixedName(i.name),this._origShaders[n].shader)}this._structUniforms.splice(e,1)}}this._changedUniforms=!0}}getPrefixedName(e){const t=this._mods[0].group;if(void 0!==t)return 0==e.indexOf("MOD_")&&(e="mod"+t+"_"+(e=e.substr("MOD_".length))),e}_updateDefinesShader(n){for(const t in this._defines){const e=this.getPrefixedName(t);null!==this._defines[t]&&void 0!==this._defines[t]?n.define(e,this._defines[t]):n.removeDefine(e)}for(const t in this._definesToggled){const e=this.getPrefixedName(t);n.toggleDefine(e,this._definesToggled[t])}}_updateDefines(){for(const e in this._origShaders)this._updateDefinesShader(this._origShaders[e].shader);this._changedDefines=!1}define(e,t){this._defines[e]=t,this._changedDefines=!0}removeDefine(e){this._defines[e]=null,this._changedDefines=!0}hasDefine(e){return null!==this._defines[e]&&void 0!==this._defines[e]}toggleDefine(e,t){this._changedDefines=!0,this._definesToggled[e]=t}currentShader(){return this._boundShader.shader}dispose(){}}}]).Shadermodifier;this.CABLES=this.CABLES||{},this.CABLES.COREMODULES=this.CABLES.COREMODULES||{},this.CABLES.COREMODULES.Vargetset=function(n){var i={};function a(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}return a.m=n,a.c=i,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)a.d(n,i,function(e){return t[e]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=0)}([function(e,t){CABLES.VarSetOpWrapper=class{constructor(t,e,n,i,a,r){this._valuePort=n,this._varNamePort=i,this._op=t,this._type=e,this._triggerPort=a,this._nextPort=r,this._btnCreate=t.inTriggerButton("Create new variable"),this._btnCreate.setUiAttribs({hidePort:!0}),this._btnCreate.onTriggered=this._createVar.bind(this),this._helper=t.inUiTriggerButtons("",["Rename"]),this._helper.setUiAttribs({hidePort:!0}),this._helper.onTriggered=e=>{"Rename"==e&&CABLES.CMD.PATCH.renameVariable(t.varName.get())},this._op.setPortGroup("Variable",[this._helper,this._varNamePort,this._btnCreate]),this._op.on("uiParamPanel",this._updateVarNamesDropdown.bind(this)),this._op.patch.addEventListener("variablesChanged",this._updateName.bind(this)),this._op.patch.addEventListener("variableRename",this._renameVar.bind(this)),this._varNamePort.onChange=this._updateName.bind(this),this._isTexture="texture"===this._valuePort.uiAttribs.objType,this._valuePort.changeAlways=!0,this._triggerPort?this._triggerPort.onTriggered=()=>{this._setVarValue(!0)}:this._valuePort.onChange=this._setVarValue.bind(this),this._op.init=()=>{this._updateName(),this._triggerPort||this._setVarValue(),this._updateErrorUi()}}_updateErrorUi(){CABLES.UI&&(this._varNamePort.get()?this._op.setUiError("novarname",null):this._op.setUiError("novarname","no variable selected"))}_updateName(){const e=this._varNamePort.get();this._op.setTitle("var set "),this._op.setUiAttrib({extendTitle:"#"+e}),this._updateErrorUi();const t=this._op.patch.getVar(e);t&&!t.type&&(t.type=this._type),this._op.patch.hasVar(e)||0==e||this._triggerPort||this._setVarValue(),!this._op.patch.hasVar(e)&&0!=e&&this._triggerPort&&("string"==this._type||"number"==this._type?this._op.patch.setVarValue(e,""):this._op.patch.setVarValue(e,null)),this._op.isCurrentUiOp()&&(this._updateVarNamesDropdown(),this._op.refreshParams()),this._updateDisplay(),this._op.patch.emitEvent("opVariableNameChanged",this._op,this._varNamePort.get())}_createVar(){CABLES.CMD.PATCH.createVariable(this._op,this._type,()=>{this._updateName()})}_updateDisplay(){this._valuePort.setUiAttribs({greyout:!this._varNamePort.get()})}_updateVarNamesDropdown(){if(CABLES.UI){const e=[],t=this._op.patch.getVars();for(const n in t)t[n].type==this._type&&"0"!=n&&e.push(n);this._varNamePort.uiAttribs.values=e}}_renameVar(e,t){e==this._varNamePort.get()&&(this._varNamePort.set(t),this._updateName())}_setVarValue(e){const t=this._varNamePort.get();if(!t)return;const n=this._valuePort.get();"array"==this._type?(this._arr=[],CABLES.copyArray(n,this._arr),this._op.patch.setVarValue(t,null),this._op.patch.setVarValue(t,this._arr)):("object"==this._type&&(this._isTexture?this._op.patch.setVarValue(t,CGL.Texture.getEmptyTexture(this._op.patch.cgl)):this._op.patch.setVarValue(t,null),n&&n.tex&&n._cgl&&!this._isTexture?this._op.setUiError("texobj","Dont use object variables for textures, use varSetTexture"):this._op.setUiError("texobj",null)),this._op.patch.setVarValue(t,n)),e&&this._nextPort&&this._nextPort.trigger()}},CABLES.VarGetOpWrapper=class{constructor(e,t,n,i){this._op=e,this._type=t,this._varnamePort=n,this._variable=null,this._valueOutPort=i,this._op.on("uiParamPanel",this._updateVarNamesDropdown.bind(this)),this._op.patch.on("variableRename",this._renameVar.bind(this)),this._op.patch.on("variableDeleted",e=>{this._op.isCurrentUiOp()&&this._op.refreshParams()}),this._varnamePort.onChange=this._init.bind(this),this._op.patch.addEventListener("variablesChanged",this._init.bind(this)),this._op.onDelete=function(){this._variable&&this._variable.removeListener(this._setValueOut.bind(this))},this._op.init=()=>{this._init()}}_renameVar(e,t){e==this._varnamePort.get()&&(this._varnamePort.set(t),this._updateVarNamesDropdown())}_updateVarNamesDropdown(){if(CABLES.UI){const e=[],t=this._op.patch.getVars();for(const n in t)t[n].type==this._type&&"0"!=n&&e.push(n);this._op.varName.uiAttribs.values=e}}_setValueOut(e){this._updateVarNamesDropdown(),this._valueOutPort.set(e)}_init(){this._updateVarNamesDropdown(),this._variable&&this._variable.removeListener(this._setValueOut.bind(this)),this._variable=this._op.patch.getVar(this._op.varName.get()),this._variable?(this._variable.addListener(this._setValueOut.bind(this)),this._op.setUiError("unknownvar",null),this._op.setTitle("var get "),this._op.setUiAttrib({extendTitle:"#"+this._varnamePort.get()}),this._valueOutPort.set(this._variable.getValue())):(this._op.setUiError("unknownvar","unknown variable! - there is no setVariable with this name ("+this._varnamePort.get()+")"),this._op.setUiAttrib({extendTitle:"#invalid"}),this._valueOutPort.set(0)),this._op.patch.emitEvent("opVariableNameChanged",this._op,this._varnamePort.get())}}}]).Cables;this.CGL=this.CGL||{},this.CGL.COREMODULES=this.CGL.COREMODULES||{},this.CGL.COREMODULES.Wireframes=function(n){var i={};function a(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}return a.m=n,a.c=i,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)a.d(n,i,function(e){return t[e]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=0)}([function(e,t,n){"use strict";n.r(t);CGL.WireframeCube=class{constructor(e){this.cgl=e,this.geom=new CGL.Geometry("marker"),this.geom.setPointVertices([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1,-1,1,1,1,1,-1,1,-1,1,1,-1,-1,1,1,1,-1,1,1,1,-1,1,-1,-1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,-1,-1]),this.mesh=new CGL.Mesh(this.cgl,this.geom,this.cgl.gl.LINES),this.mesh.setGeom(this.geom),this.colorShader=new CGL.UniColorShader(this.cgl),this.colorShader.setColor([0,1,1,1]),this._vScale=vec3.create()}render(e,t,n){this.cgl.pushModelMatrix(),this.cgl.pushShader(this.colorShader.shader),this.cgl.pushDepthTest(!1),null==e&&(e=1),null==t&&(t=e),null==n&&(n=e),vec3.set(this._vScale,e,t,n),mat4.scale(this.cgl.mvMatrix,this.cgl.mvMatrix,this._vScale),this.mesh.render(this.cgl.getShader()),this.cgl.popDepthTest(),this.cgl.popShader(),this.cgl.popModelMatrix()}},CGL.WireframeRect=class{constructor(e){this.cgl=e,this.geom=new CGL.Geometry("marker");this.geom.setPointVertices([-1,-1,0,1,-1,0,1,-1,0,1,1,0,1,1,0,-1,1,0,-1,1,0,-1,-1,0]),this.mesh=new CGL.Mesh(this.cgl,this.geom,this.cgl.gl.LINES),this.mesh.setGeom(this.geom),this.colorShader=new CGL.UniColorShader(this.cgl),this.colorShader.setColor([0,1,1,1]),this._vScale=vec3.create()}render(e,t,n){this.cgl.pushModelMatrix(),this.cgl.pushShader(this.colorShader.shader),this.cgl.pushDepthTest(!1),vec3.set(this._vScale,e||1,t||e||1,n||e||1),mat4.scale(this.cgl.mvMatrix,this.cgl.mvMatrix,this._vScale),this.mesh.render(this.cgl.getShader()),this.cgl.popDepthTest(),this.cgl.popShader(),this.cgl.popModelMatrix()}}}]).Wireframes;this.CGL=this.CGL||{},this.CGL.COREMODULES=this.CGL.COREMODULES||{},this.CGL.COREMODULES.Light=function(n){var i={};function a(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}return a.m=n,a.c=i,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)a.d(n,i,function(e){return t[e]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=0)}([function(e,t,n){"use strict";function i(e,t){return this.type=t.type||"point",this.color=t.color||[1,1,1],this.specular=t.specular||[0,0,0],this.position=t.position||null,this.intensity=t.intensity||1,this.radius=t.radius||1,this.falloff=t.falloff||1,this.spotExponent=t.spotExponent||1,this.cosConeAngleInner=t.cosConeAngleInner||0,this.cosConeAngle=t.cosConeAngle||0,this.conePointAt=t.conePointAt||[0,0,0],this.castShadow=t.castShadow||!1,this.nearFar=t.nearFar||[0,0],this.normalOffset=t.normalOffset||0,this.shadowBias=t.shadowBias||0,this.shadowStrength=t.shadowStrength||0,this.lightMatrix=null,this.shadowMap=null,this.shadowMapDepth=null,this.shadowCubeMap=null,this._cgl=e,this.state={isUpdating:!1},this._framebuffer=null,this._shaderShadowMap={shader:null,uniforms:{lightPosition:null,nearFar:null},matrices:{modelMatrix:mat4.create(),viewMatrix:mat4.create(),projMatrix:mat4.create(),biasMatrix:mat4.fromValues(.5,0,0,0,0,.5,0,0,0,0,.5,0,.5,.5,.5,1)},vectors:{lookAt:vec3.create(),camPos:vec3.create(),up:vec3.fromValues(0,1,0)}},this._effectBlur=null,this._shaderBlur={shader:null,uniforms:{XY:null}},this._cubemap=null,this}n.r(t),i.prototype.getModifiableParameters=function(){return["color","specular","position","intensity","radius","falloff","spotExponent","cosConeAngleInner","cosConeAngle","conePointAt"]},i.prototype.createProjectionMatrix=i.prototype.updateProjectionMatrix=function(e,t,n,i){"spot"===this.type?mat4.perspective(this._shaderShadowMap.matrices.projMatrix,-2*CGL.DEG2RAD*i,1,t,n):"directional"===this.type?mat4.ortho(this._shaderShadowMap.matrices.projMatrix,-1*e,e,-1*e,e,t,n):"point"===this.type&&(mat4.perspective(this._shaderShadowMap.matrices.projMatrix,90*CGL.DEG2RAD,1,t,n),this.nearFar=[t,n])},i.prototype.hasFramebuffer=function(){return!!this._framebuffer},i.prototype.hasShadowMapShader=function(){return!!this._shaderShadowMap.shader},i.prototype.hasBlurShader=function(){return!!this._shaderBlur.shader},i.prototype.hasBlurEffect=function(){return!!this._effectBlur},i.prototype.getShadowMap=function(){return"point"===this.type?null:this._framebuffer.getTextureColor()},i.prototype.getShadowMapDepth=function(){return"point"===this.type?null:this._framebuffer.getTextureDepth()},i.prototype.createFramebuffer=function(e,t,n){this.state.isUpdating=!0;const i=e||512,a=t||512;if("point"===this.type)return this.hasCubemap()?this._cubemap.setSize(i,a):this._cubemap=new CGL.CubemapFramebuffer(this._cgl,i,a,{name:"point light shadowmap"}),this._cubemap.setCamPos(this.position),this._cubemap.setMatrices(this._shaderShadowMap.matrices.modelMatrix,this._shaderShadowMap.matrices.viewMatrix,this._shaderShadowMap.matrices.projMatrix),void(this.state.isUpdating=!1);this.hasFramebuffer()&&this._framebuffer.delete(),n&&n.filter&&(n.isFloatingPointTexture=n.filter!==CGL.Texture.FILTER_MIPMAP),1==this._cgl.glVersion?this._framebuffer=new CGL.Framebuffer(this._cgl,i,a,Object.assign({isFloatingPointTexture:!0,filter:CGL.Texture.FILTER_LINEAR,wrap:CGL.Texture.WRAP_CLAMP_TO_EDGE},n)):this._framebuffer=new CGL.Framebuffer2(this._cgl,i,a,Object.assign({isFloatingPointTexture:!0,filter:CGL.Texture.FILTER_LINEAR,wrap:CGL.Texture.WRAP_CLAMP_TO_EDGE},n)),this.state.isUpdating=!1},i.prototype.hasCubemap=function(){return!!this._cubemap},i.prototype.setFramebufferSize=function(e){this.hasFramebuffer()&&this._framebuffer.setSize(e,e)},i.prototype.createShadowMapShader=function(e,t){if(this.hasShadowMapShader())return;this.state.isUpdating=!0,this._shaderShadowMap.shader=new CGL.Shader(this._cgl,"shadowPass"+this.type.charAt(0).toUpperCase()+this.type.slice(1)),this._shaderShadowMap.shader.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);const n=e||this.getShadowPassVertexShader(),i=t||this.getShadowPassFragmentShader();this._shaderShadowMap.shader.setSource(n,i),this._shaderShadowMap.shader.offScreenPass=!0,"point"===this.type&&(this._shaderShadowMap.uniforms.lightPosition=new CGL.Uniform(this._shaderShadowMap.shader,"3f","inLightPosition",vec3.create()),this._shaderShadowMap.uniforms.nearFar=new CGL.Uniform(this._shaderShadowMap.shader,"2f","inNearFar",vec2.create())),1==this._cgl.glVersion&&(this._cgl.gl.getExtension("OES_texture_float"),this._cgl.gl.getExtension("OES_texture_float_linear"),this._cgl.gl.getExtension("OES_texture_half_float"),this._cgl.gl.getExtension("OES_texture_half_float_linear"),this._shaderShadowMap.shader.enableExtension("GL_OES_standard_derivatives"),this._shaderShadowMap.shader.enableExtension("GL_OES_texture_float"),this._shaderShadowMap.shader.enableExtension("GL_OES_texture_float_linear"),this._shaderShadowMap.shader.enableExtension("GL_OES_texture_half_float"),this._shaderShadowMap.shader.enableExtension("GL_OES_texture_half_float_linear")),this.state.isUpdating=!1},i.prototype.createBlurEffect=function(e){"point"!==this.type&&(this.state.isUpdating=!0,this.hasBlurEffect()&&this._effectBlur.delete(),this._effectBlur=new CGL.TextureEffect(this._cgl,Object.assign({isFloatingPointTexture:!0,filter:CGL.Texture.FILTER_LINEAR,wrap:CGL.Texture.WRAP_CLAMP_TO_EDGE},e)),this.state.isUpdating=!1)},i.prototype.createBlurShader=function(e,t){if(this.hasBlurShader())return;if("point"===this.type)return;this.state.isUpdating=!0;const n=e||this.getBlurPassVertexShader(),i=t||this.getBlurPassFragmentShader();this._shaderBlur.shader=new CGL.Shader(this._cgl,"blurPass"+this.type.charAt(0).toUpperCase()+this.type.slice(1)),this._shaderBlur.shader.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]),this._shaderBlur.shader.setSource(n,i),this._shaderBlur.uniforms.XY=new CGL.Uniform(this._shaderBlur.shader,"2f","inXY",vec2.create()),this._shaderBlur.shader.offScreenPass=!0,this.state.isUpdating=!1},i.prototype.renderPasses=function(e,t,n){this.state.isUpdating||this._cgl.frameStore.shadowPass||(this._cgl.pushCullFace(!0),this._cgl.pushCullFaceFacing(this._cgl.gl.FRONT),this._cgl.gl.enable(this._cgl.gl.POLYGON_OFFSET_FILL),this._cgl.gl.polygonOffset(e,e),this._cgl.frameStore.renderOffscreen=!0,this._cgl.frameStore.shadowPass=!0,this._cgl.pushBlend(!1),this._cgl.gl.colorMask(!0,!0,"point"===this.type,"point"===this.type),this.renderShadowPass(n),this._cgl.gl.cullFace(this._cgl.gl.BACK),this._cgl.gl.disable(this._cgl.gl.CULL_FACE),this._cgl.gl.disable(this._cgl.gl.POLYGON_OFFSET_FILL),"point"!==this.type&&this.renderBlurPass(t),this._cgl.gl.colorMask(!0,!0,!0,!0),this._cgl.popBlend(),this._cgl.popCullFaceFacing(),this._cgl.popCullFace(),this._cgl.frameStore.shadowPass=!1,this._cgl.frameStore.renderOffscreen=!1,"point"!==this.type?(this.shadowMap=this._framebuffer.getTextureColor(),this.shadowMapDepth=this._framebuffer.getTextureDepth()):(this.shadowMap=null,this.shadowMapDepth=null))},i.prototype.renderShadowPass=function(t){if(!this.state.isUpdating){if("point"===this.type){this._shaderShadowMap.uniforms.nearFar.setValue(this.nearFar),this._shaderShadowMap.uniforms.lightPosition.setValue(this.position),this._cubemap.setCamPos(this.position),this._cubemap.setMatrices(this._shaderShadowMap.matrices.modelMatrix,this._shaderShadowMap.matrices.viewMatrix,this._shaderShadowMap.matrices.projMatrix),this._cgl.pushShader(this._shaderShadowMap.shader),this._cubemap.renderStart();for(let e=0;e<6;e+=1)this._cubemap.renderStartCubemapFace(e),t&&t(),this._cubemap.renderEndCubemapFace();return this._cubemap.renderEnd(),this._cgl.popShader(),void(this.shadowCubeMap=this._cubemap.getTextureColor())}this._cgl.pushShader(this._shaderShadowMap.shader),this._cgl.pushModelMatrix(),this._cgl.pushViewMatrix(),this._cgl.pushPMatrix(),this._framebuffer.renderStart(this._cgl),mat4.copy(this._cgl.mMatrix,this._shaderShadowMap.matrices.modelMatrix),vec3.set(this._shaderShadowMap.vectors.camPos,this.position[0],this.position[1],this.position[2]),"spot"===this.type&&vec3.set(this._shaderShadowMap.vectors.lookAt,this.conePointAt[0],this.conePointAt[1],this.conePointAt[2]),mat4.lookAt(this._cgl.vMatrix,this._shaderShadowMap.vectors.camPos,this._shaderShadowMap.vectors.lookAt,this._shaderShadowMap.vectors.up),mat4.copy(this._cgl.pMatrix,this._shaderShadowMap.matrices.projMatrix),this.lightMatrix||(this.lightMatrix=mat4.create()),mat4.mul(this.lightMatrix,this._cgl.pMatrix,this._cgl.vMatrix),mat4.mul(this.lightMatrix,this._cgl.mMatrix,this.lightMatrix),mat4.mul(this.lightMatrix,this._shaderShadowMap.matrices.biasMatrix,this.lightMatrix),this._cgl.gl.clearColor(1,1,1,1),this._cgl.gl.clear(this._cgl.gl.DEPTH_BUFFER_BIT|this._cgl.gl.COLOR_BUFFER_BIT),t&&t(),this._framebuffer.renderEnd(this._cgl),this._cgl.popPMatrix(),this._cgl.popModelMatrix(),this._cgl.popViewMatrix(),this._cgl.popShader()}},i.prototype.renderBlurPass=function(e){this.state.isUpdating||(this._cgl.pushShader(this._shaderBlur.shader),this._effectBlur.setSourceTexture(this._framebuffer.getTextureColor()),this._effectBlur.startEffect(),this._effectBlur.bind(),this._cgl.setTexture(0,this._effectBlur.getCurrentSourceTexture().tex),this._shaderBlur.uniforms.XY.setValue([e,0]),this._effectBlur.finish(),this._effectBlur.bind(),this._cgl.setTexture(0,this._effectBlur.getCurrentSourceTexture().tex),this._shaderBlur.uniforms.XY.setValue([0,e]),this._effectBlur.finish(),this._effectBlur.endEffect(),this._cgl.popShader())},i.prototype.getShadowPassVertexShader=function(){return`\nIN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN vec3 attrVertNormal;\nIN float attrVertIndex;\nIN vec3 attrTangent;\nIN vec3 attrBiTangent;\n\nUNI mat4 projMatrix;\nUNI mat4 modelMatrix;\nUNI mat4 viewMatrix;\n\n\nOUT vec2 texCoord;\nOUT vec3 norm;\n\n{{MODULES_HEAD}}\n\n${"point"===this.type?"OUT vec3 modelPos;":""}\nvoid main() {\n    texCoord=attrTexCoord;\n    texCoord.y = 1. - texCoord.y;\n    norm=attrVertNormal;\n    vec4 pos = vec4(vPosition, 1.0);\n    mat4 mMatrix=modelMatrix;\n    vec3 tangent = attrTangent;\n    vec3 bitangent = attrBiTangent;\n\n    {{MODULE_VERTEX_POSITION}}\n\n    mat4 mvMatrix=viewMatrix * mMatrix;\n    vec4 vPos = projMatrix * mvMatrix * pos;\n    ${"point"===this.type?"modelPos = (mMatrix * pos).xyz;":""}\n    gl_Position = vPos;\n}\n`},i.prototype.getShadowPassFragmentShader=function(){return`\n   {{MODULES_HEAD}}\n   ${"point"===this.type?"IN vec3 modelPos;":""}\n   ${"point"===this.type?"UNI vec3 inLightPosition;":""}\n   ${"point"===this.type?"UNI vec2 inNearFar;":""}\n\n    IN vec2 texCoord;\n\n    void main() {\n        {{MODULE_BEGIN_FRAG}}\n        vec4 col = vec4(1.);\n\n\n        outColor = vec4(1.);\n\n        {{MODULE_COLOR}}\n\n        ${"point"===this.type?"vec3 fromLightToFrag = (modelPos - inLightPosition);":""}\n\n\n        ${"point"===this.type?"float depth = (length(fromLightToFrag) - inNearFar.x) / (inNearFar.y - inNearFar.x);":"float depth = gl_FragCoord.z;"}\n\n        float dx = dFdx(depth); // for biasing depth-per-pixel\n        float dy = dFdy(depth); // for biasing depth-per-pixel\n\n        float clampedDerivative = clamp(dot(dx, dx) + dot(dy, dy), 0., 1.);\n        float moment2 = dot(depth, depth) + 0.25 * clampedDerivative;\n\n        outColor.x = depth;\n        outColor.y = moment2;\n        outColor.z = depth;\n    }\n`},i.prototype.getBlurPassVertexShader=function(){return"point"===this.type?"":"\n\nIN vec3 vPosition;\nIN vec2 attrTexCoord;\n\nOUT vec2 texCoord;\nOUT vec2 coord0;\nOUT vec2 coord1;\nOUT vec2 coord2;\nOUT vec2 coord3;\nOUT vec2 coord4;\nOUT vec2 coord5;\nOUT vec2 coord6;\n\nUNI mat4 projMatrix;\nUNI mat4 mvMatrix;\nUNI mat4 modelMatrix;\n\nUNI vec2 inXY;\n\nvoid main() {\n    texCoord=attrTexCoord;\n\n    vec4 pos = vec4(vPosition,  1.0);\n\n    {{MODULE_VERTEX_POSITION}}\n\n    coord3 = attrTexCoord;\n\n\n    coord0 = attrTexCoord + (-3.0368997744118595 * inXY);\n    coord0 = clamp(coord0, 0., 1.);\n    coord1 = attrTexCoord + (-2.089778445362373 * inXY);\n    coord1 = clamp(coord1, 0., 1.);\n    coord2 = attrTexCoord + (-1.2004366090034069 * inXY);\n    coord2 = clamp(coord2, 0., 1.);\n    coord4 = attrTexCoord + (1.2004366090034069 * inXY);\n    coord4 = clamp(coord4, 0., 1.);\n    coord5 = attrTexCoord + (2.089778445362373* inXY);\n    coord5 = clamp(coord5, 0., 1.);\n    coord6 = attrTexCoord + (3.0368997744118595 * inXY);\n    coord6 = clamp(coord6, 0., 1.);\n\n    gl_Position = projMatrix * mvMatrix * pos;\n}\n    "},i.prototype.getBlurPassFragmentShader=function(){return"point"===this.type?"":"\nUNI sampler2D tex;\n\nIN vec2 coord0;\nIN vec2 coord1;\nIN vec2 coord2;\nIN vec2 coord3;\nIN vec2 coord4;\nIN vec2 coord5;\nIN vec2 coord6;\n\nvoid main() {\n\n    vec4 color = vec4(0.0);\n\n\n    color.xyz += texture(tex, coord0).xyz * 0.06927096443792478;  // 1/64\n    color.xyz += texture(tex, coord1).xyz * 0.1383328848652136;   // 6/64\n    color.xyz += texture(tex, coord2).xyz * 0.21920904690397863;  // 15/64\n    color.xyz += texture(tex, coord3).xyz * 0.14637421;           // 20/64\n    color.xyz += texture(tex, coord4).xyz * 0.21920904690397863;  // 15/64\n    color.xyz += texture(tex, coord5).xyz * 0.1383328848652136;   // 6/64\n    color.xyz += texture(tex, coord6).xyz * 0.06927096443795711;  // 1/64\n\n    color.a = 1.;\n\n    outColor = color;\n}\n    "},CGL.Light=i}]).Light;